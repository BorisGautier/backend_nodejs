<!DOCTYPE qgis PUBLIC 'http://mrcc.com/qgis.dtd' 'SYSTEM'>
<qgis styleCategories="AllStyleCategories" minScale="1e+08" version="3.4.7-Madeira" simplifyLocal="1" simplifyDrawingHints="0" simplifyAlgorithm="0" simplifyMaxScale="1" hasScaleBasedVisibilityFlag="0" simplifyDrawingTol="1" readOnly="0" maxScale="0" labelsEnabled="0">
  <flags>
    <Identifiable>1</Identifiable>
    <Removable>1</Removable>
    <Searchable>1</Searchable>
  </flags>
  <renderer-v2 toleranceUnit="MM" type="pointCluster" enableorderby="0" tolerance="20" toleranceUnitScale="3x:0,0,0,0,0,0" forceraster="0">
    <renderer-v2 type="singleSymbol" symbollevels="0" enableorderby="0" forceraster="0">
      <symbols>
        <symbol name="0" clip_to_extent="1" type="marker" alpha="1" force_rhr="0">
          <layer enabled="1" locked="0" class="SvgMarker" pass="0">
            <prop v="0" k="angle"/>
            <prop v="231,113,72,255" k="color"/>
            <prop v="0" k="fixedAspectRatio"/>
            <prop v="1" k="horizontal_anchor_point"/>
            <prop v="base64:PD94bWwgdmVyc2lvbj0iMS4wIiA/Pgo8c3ZnIGlkPSJteVN2ZyIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayI+Cgk8aW1hZ2UgaGVpZ2h0PSIxNjAiIHdpZHRoPSIxNjAiIHhsaW5rOmhyZWY9ImRhdGE6aW1hZ2UvcG5nO2Jhc2U2NCxpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBS0FBQUFDZ0NBWUFBQUNMejJjdEFBQUFDWEJJV1hNQUFBN0VBQUFPeEFHVkt3NGJBQUFnQUVsRVFWUjRuTzJkVzVBYzEzbmZmMS9QN096czdHS3hHSzVXcXdVRVFrdFFKZXNDUTZSRVVaZXlSWlp0RlVGS0tzVkZPUmY3S1lrclRrVVBpZTJLbmlMaXpYWXFWdGw4VUpXclhLbEs3Q1FsdTFLbUxBT1JxVmlNazlDU1RWSTBMVEsyQ0sxZ21Gd3VRWEIzc1ZqTXpyWC9lZWpMZE0vMFRQZGNkckV3NTE4RjlPeC96dlE1cC92MGQ3Ny91WHh0a3RnUFhJTDhqWjI5eFZaTDkrUmtueEtjbG5IS1lBbFJ3aWhKVkRCMkVUc0dWd3krSjduZndlR1o0ckhaeSsrRityNFVib0pEQXh0M0EveldEMVdZUDFwNzBFdy9EdHdqdEdLaURGYkVWQVFyQ0J3REIzQWxYS0JwcUFwVWdCMk1xOEJMZ292M0hpdDliYXdGM0VlWW1TUEpuWERadVZnRDdFeVk5TU5lZUhacnR3QldSczQvQmo1cXhoblFTYkJpbHQ5M29DN3BxaGt2Z1AydVhQdFQ2c1dOZTk5QmM0aHo3VHR1OVUyOG5ibDg5TXZPeEpMY0xDZDVabXUzWUxJVnpENWg2RjhMbGlRS1p0WStsM2RDTW5JRk16c0JuQURLbUZ5bXFuOEt4ZldEdkRoWnVlQTZCWjhuWEhZdTFnQ1RrR1FCRTdnRjRCT0dmUmxqMFRwL0FCaUEyVERjL1FZdWpnRCsyeEJsMjNjdTdFNzhDenZoc25Nais0QlBRZjdJMXQ0L00ra1hNVHM5MHNuNlFPSVB6UGpLUGNkbS9uaS84cGpnNE9Ha0orbVBJMXZWczhDSDVYV1hIcngrbEZqakhvR1RoQmxuZ1llaWVVZWZyQWwzZTNLWkxlRHZnZk91Ti9jV0RjMmJVY0lvQUNEN0tZelBBdmRsT3RHd0VGWFFNOENYTUhhOFJtbE5vQ3FIbmJXanBRMGtIalhMNUxmdUIzY1k4Q3c0Yk5aTEpuZGVqanRuOGtjZERCZW9tMW05WG05ZEE2b2ZXWnE5NWFLdXJ3b0dlSGFyVWtTVU1WdEZyQUpMaG81aEJPcjJmb2wzbTlsaStDUEo4K09DNDZoYys3eFhnVC9HdUNyQW9BbmNFRndGZXdHMGpyajJvVHRtcTBFOW9rL2IzMGZ1V3o4VWM3TzFRczVSV1E2TFF2T0lSWU1sb1VXd2FZTzhqS1pCRGRoMVhWMHhZOXV3YmNFMkxwdjNMczdzM0lwNjlGWEJIa2taNHpQbVdaNUZJTzlMaFJDZDdTUWtvbCtNd25ubEFMTWw0R2ZCTDRIZkNnMlErTDRaWDVGeFFkTDMrOVhwN3hQMzFHWHl3RExHZzhEUEdKekZLRXZLbTMrZmhEQ1pkOFJ3ek1EWUJMNkhlRXFtUHdMKy9KWUl1RjVkc0NUbnU5dlZmd0Q4QXZCZ1lxS0RoTi9ZMGpqQi81RHgyeDlhbVBuOUF5clpMY056MjNzL1pmQnpFbzhnRm9Dd2tRWEhBYmovN3VMK2gwYSs5ZnhINStjckIxV0huc013ejErdi9SVHdPZUNla016WUNHNHg3ak9wK3QzTnZaYytXSjU1Q2RwbVAvcjBqWXVMRGl0MGpuSHRCL2RWMXdVelZyZHVmaEhzVTJEdkFlYkNlNkN3ak8wcmtvVVRQMmJZZktHWi84L1B2Rkg1Z3c4dnplN3VaejJDWTJJRGZQYkdqWklwL3luZ2Zyd3hQciswQ1lrUG9QSEpWOFlXeWF3M1I5bXdNNExQQUM5NWZId3NhcHhjZElBMWV0d3Y3dG10dlVYZ2ZyQ2ZBVTVMS2hsaGUvTGNFWVJwWUc3UnpPNEhWU3hQOWF2Uzd6OEsrMTYzV0FNTVJZaWJPeWwwbjhsT2RUY3crZnJBVWpsa0hRMTBPTTQ3YlpMZjJkTVhYUUkrOTJldjhHdElmT3lrMDVGdWZNTUtTV24yQzg5dVZRb0dweVgrdVptZDhRcEE5QkQ3UEFRM0IvWXhVUFZkVzVXbnJUd2JtM25hRHlTTEVEbjNnUmF4cEhGQzZ4WWRQYmp1eGpzQ2w3WDdGd2pObWRsWm9JQTNyOXcxeGRpWjQ3RGNRUTdGZkhlN3VpeDBuOEZuL0hvTzYrLzE0eFpsM09QQU9VbS90ZDkxU241NnBmY1psUFk3OC8yQ2I0a0xoZG5xVW1HMlZyalY1UmtmZEIvdzB3ZVEwUW1KWHp5QWZIcUtrQktTSS9PZWtkRE0zQjRpSklTTXZCbk83U1JDWHBUeTFhM3FHZVMrRnppSnc3RjJoVGdEOXY2UkJVY2FoeFV3VGo2M3RmYzRxSW5oSWtBT01yMk03TThkbkxVUGxndmIreUpDOEFZdS9YcEd4K2dTVWg0NkVSTGh6QnlrMjBLRVBIdHRyL2pNRzVYRnZhMjl6d01mQUU0Qmk4anJpWHloc2VBTnQzZ3RaUVRCa2NZNWdxS1pmUVovemFibmNndGdBL1JSV2V2WjU3YjN2djB0NmJsUGVoTUNZeFFoNHBwaFY3QWhWaVFyZkxRSTVuVWpHUXpGZVEwcU1sT1NrVE81ZGFDckFSMDJFZkxNdFVvQjB3bk1IZ1Q5TXRpaW1YVVpCNHYvUi9UVG1FUklKM2NTclBQN1ZZeVBnVDZFN0oxejI5VmRPemJ6MXlsVjdJa2VNeUgydjBHdkdjeVJOQ1hXRDE1YUIzQTlFV05CeXgrRjZ6eC9KczZvN1pqVVBPd2k1SmszSzR0bTlxQVp2NEdzS04rdkdiTzRHRGYzWGtIWnhKeWtYeGkyN21OZmtqL0JZSGdKQ250YmUvOEsrR1drWlFpNzIvQjQ2RG5IZVFEeC9MM0hpdHVEMW4vZzdpTnJ0eFQ4R3dlWE5kL2JrYXR1VmM4QUh3Q1ZRd2ZDL0k3UDk4TVBPd2Y2YWREU01OZGc0QWFZeFZHWDVBYi94c0ZsemZkV2MzUWdVeGVPKzE3UUtSTUYwWFo5NWYzSDdjQ1p1TjlnZnBock1GQURQQ3hXNDdCeEkrSVVzT1Q1ckZFTEE3Y0xKK2tVTU16bXM4RWE0S0F5TyttM28zRDdQYzg2TERjS3pEZ0tGSkU2TEF6Y0xwd1pKVFRjNnZvRG04ZWNvQWRrQmFON3lPWDJnamtNTUZBU3hVU0UzR0l1SE80OGhPSWl1d2daL2hvTS9PUkZwMUo2Y2VQdWdyUG1lNnU1b2Vvbm5oUzhhbkFzZmplREFmM2JnVk1UZUdXWWF6QlFBK3k4NkJOdWRGVGRtVCtlZHZiK3BPQTBEdC80WGtiTzlSYkpWb2RadnpJWmlKN2dsbUlpUWlhNHBaaUlrQWwzUzdtaHV1Q0Q4STFHeWZkMjlBWGZxcGpNaEl5Qm0yQjRURVRJQkxjVWs2ZDVnbHVLaVFpWmNMZVVtNGlRaVFpNXBaaUlrREZ3RXd5UGlRaVo0SlppOGpSUGNFc3gxRHEwcVAvenJTZSs5TzhYODF0bjN6YTFYUUQ4VFhSQzhzSjF0SGRwaXUvVzd0bjl2N1VmcTF4WE9SYVpNN3JqS29tTDJtZ0x2Ky9taWxaMUhwaitadWtqaGFmbm91bkNlSmY3d1ZsOFlqNldic3pjZDJvZjIvMVc3U2NxZXlyNklWUVVLWXlmY2dUTzNGYit4NHQvVXZyb3pOTnpPZnE3dDN2dWRMUGlGcDk3MzduSGY3bHZ3aFFrN3d2dWdjN3Z6ejErTWY4dlY2YnVXY3k1bjV5eFBRZTh5Z2dSYk8wMUN4cVJLRGw3OVpKVHFWNXZsVHVXSkhVc0xPdmd6Rzl1OHYvcXhYazN6QzFPTzdYdTVlRkpDeWJIemUwekRMY3FxQVoxOTVkQytRMW9ISnc1TGFhS2lFTFIyZXRibHB3MTNHbW5Dazg5a09lVDN4bzYxRytxQmV4c2RGRW4zS20zNXEvVlpvcnZ5T1BNbUYvZzZHTWIvSTNIemRsdVlkNjVVVmh2aGhYMkZqa2FTTDA1Q3hvMS9Ua1FacUpnOVZpK1laSDJnWk1GKzJZRHF4VThFdVBuekZSRWlqeGM3V3N3RnM0YzZrelRaSW9acS9RdGkrdmdDQ3MyVzRXRlBGeURkdHRJYWkrOXVQanEzSlRGZzUwNzFoeVgxYis3T1Z1ODBaaUsxaXNPYTNNbHA4SzhYY2ZNYTJEUkRyWWZKL2toWnRXZjh3dlpiaUgrdzIzc0h4YzhBSWI4NC81eG9UOGo4Lzk1MThDcjgzaTRpa3BjZDQrbWxzVXhrVE8zS09YQ3R5TkUyMFpXYmlRUjRrcnZYN3M1UDdkVm44NlUvb2pkNEE3bjJpaFpUckRQdU9FZVlkTmRURThJSU9hUW5SMGx2OUZFaUxoN3V6RlQzRzFOVTFlT2dyVkN5eENJRVJRNmNzellUWTQ2MThNSHVlMXBLOWJGZFhMbTkzZUdSYnJnYmk2MHZoRzNKdXd5OTRsVFlKRnBIMkYvdUxDQzF2Wi9qWFlnajNGd2U3NEZ6RlErYnl2bTNZeUFrVVFJeG1yRHpaVjJXMFZ1dG1hWXl0OEliMHg0MDRLOUE0S2kxWmh6YmpCbExacksrMmJkd2lPUXlMWDd3RFFPUEJIa04zN0N6bndmdVU2Zll4OWg4UStCZHhZTm9UY3FGM1RCbWVybHZhcGpkWlFxcFhiQktYT3lwekVyM213VjJXck9lZzBoTUFrRXBxSE41YTNCakZVbzJVM3YyZk9kdmtCUTlPVENaNVVVTHJndWhQbGFlSEgzaVl2a2kxK2FnK1BhTm14Y1hGVXo3THJ6dEpUTFVwYVNJSHc5VzY4NS9IN2NTQ0lFT0FVcTdyWUtiTmI5RFNtZEQ0NjFPUU9tYUhCSDdzMkpDQm1DT3dnUjB0UVVGYzFRVVNtMWZCQzNnTU9Ja0tGOHdFOS8rZXRGb0F3c2dyRlZuK0cxNmh6TXAvOTIybXFzNUY3bGg4MTNEWlAxQkFlQU90TzgxanJPdkxQVE41Mmt2Qm5seXBPZlhSRnN6djdrRTlWQjh4cHVSMzZUSWhIVGU3TlpZQ3V3Z0w1bFNCSWhFa3haZzBYbmpTYjRnM1d5Y0N3dFBFRUhGdy8vMTV2REROZHloWm9WOG0yUE9YTGNEODQ2T0JMU2pZbHpMZGZFTEF3YU9zNkpFTWt0U01vRDFOMGMxMXAzOE80cE1va2t4Mm1jQmw0QVJtdUFXVVdJNjFJQ1R1TTNrdDNXTkp1TjJiWmoza09FbU1FTWUvVTc4ei9jQUw0U3pIWllkQ1lra1F2dWRRcm4wWG1YM0pTQ2ZMMlNlKzNGeEhwMTVmNmQxdHg5VGZJTFhoR0ZRWE9sOE5ydkhKdTZmaVZJbC9UYlpNNWliVEhhVG50eFc0MmpKOWZyNy9oWllmbGdPRGhQYzNzK3Qvdm5LOFhYdnQzbnR3MmcyUjZ6RDF3UVkxVHUrdlUzZjBHdXV5eFVjSEk3L04zc05CUTcvYWxrbVBjT3dlK25Ka3pBVURNaDUzN2xhMFhncnVEUzc3a0Z0cHN6MU4wODA5YnNhem1tcmRZOG1iKzg4L2hMLytuWEFPeXh4N3A4ejlIVzZiMjNiN3F2L3M1Ly9UY3lUbU5hOE13eVlEUy90L3NqLy9GZi9Pdy8rVCtqbEFYaVBuTXY3aXUvKzE4K2dmUVBBZTk5Ymw1UHNXbndqWjkvNUIvOWVxL2ZQakxFVEVNYTk5aGpqd0Z3dVhqUHp3Rk5qSUtiMitOeUt3OXZheXRrRDUzZGdNL0o3aklvSGRoTWlKbUtab0h6YWJUa3NOZWFZcnRSaXBjdEtHdWNLMXFINDlvdno3RnpRUmZVYm53K2J5UG5rZFVCOTdLenNKc0lKc1NpSytPR2NlaUhMUXZnWUp3RWlrTFVsZWYxMnRIc0lzbHNWV2JGQXhNaHlPWUVaNkorV05XZDRtLzN5cng5dXIvamlxZThTN1g3bnpzTnZESU5CL1ppdkFtNjhVenAzaUt3SXJsekFWZHo4N3hTTzBwVERnNmg0dTBONlN3dzF6OVJNZ2FlaW52b055L2taWlFNVHJZTEFIVTN6MnUxK2RCS2UwK3o3NmdsY1U1ekZhYzVWRkREa1JDV1FYRVg0WUFYNXNhSFZkckRUZ2NOaVNMeUJXV2tBQzA1dkZFL1FrTzVtT0NJZm81d0o4MDB4MU1QREd6UVVqZitkSDZmcjdrbGcwV2hVamdRYktLdUhCdTFlZCtmVVNoR01QWGdXTVVHaTJZempxWDAvcTMydTE2RklqMjQrQWV6TkY5K0Z4d3R5eTFEU2VKME1NVGVqb05xdkY2YnArSG13Nzk3L1RQdlBwWWJ6ZW1Cb3hNTlBCT0NWQVpXek13SlJJaGgxRjIvQWZhWkNZbHlCbmZodlF3bDh3MGZoMWlKajNCWUtOSzlCMlMwUExMT0FvQS9meDBvMHM3S0RuaStVVGhRRWROZGluWlZlSjdwUm0yZXVwdUwvQ0tlcHAxU0RtSUZPZVY5bndsQnRvQTRIamtkQUEwM3ordjFvMWxFU09ESnJob1VKeUxrRm9zUW80aHBOY2hmdnJnQTJLZ2ZvYTVjdWdqeFRuY2NiR0hRc2d6Y2pjaTBySVFKNkxweXZGNDdRc1V0MEZMU005MEJjODZDRGVXNFRqQkdlRXVxemlSOWRibHlCMVYzS3VtcmJwaXRBc3VEWmorNEh5UEtHQ2M2dVBCd3RUWkh3ODJsaXhCWVJwcm40cm1EZlp2bFJJU0VPUGY0eFlLTWVZS0dFeFRBUDc1ZU8wcmR6V2NSSVFBcm1KVUhMY1BBSWdSandXQWx1Z0lsbUJFUWVINkQ4dWtpQkJXQnBXWXV1M3lmaUpEeElyZlhtamV4QkJTaklpUTRiamRucUxRS05OMGNhVUlFT0NGWUdMUU1BNG1RUjM3OWEzbWdMRmkwc0tqK25LMi9mdS8xMEhIdEwwTDhPNzhpbyt1cG1ZaVFneEVoRWdzb2FremlJcVRxNXRscEZxbUYzWEN5Q1BGU3N5aFJ2dm5rWjJJOTJsaEZDTmc4Y014aXdZQTd6SGJkTTl1eHIzc0pFN1BqT0U1WEE1eUlrQU1TSVo0eE9kNU9FeGNoQUZ1TkVydXRRcm9Ja1VyQU1mUGFTT2F5RE5hTk5EbE5pcU41dVZLbTZtWWJqNVMwNnJaWUdxZ01FNHdOWmxveTFIZEY4MnUxbzk0VWE2WVRhdG5KTlU2bkoyeGpvQWJvdXF4STNWMW0xQ3EvWHAvM0hOYzBFZUp4S3lSMHdmdUtpUWlKb296WlN2aFhod2lCd0FKT3A0b1EzNWlYcldVREtlR0JSQWhvQlc4aEt0MGl4T051TktmWmJVM1RVSzYvQ1BHRXk0cEJtZlBuTXowSUV4RXlQcHcvZjk0Skp4Vm9lL1R4bzdIWm1HVzNPVTI2Q0RIQUZveElnODZBUVdkQ2poc3NCSUlqU1lRMDNSelhHNTU2U2hVaHBrWEJIYld6TDNZNXJrbmxtSWlROFhGL1ZYeGZBVGdHS3ZjU0lVS2hCUXg3cng0aXhFY1plT2NnWlJsSWhCaDRGakRXVjNTWWJmUE05czFXb2YxMUR4SGl2eU50Z2VsYWJDUHFSSVRzdndpcE9jVkZ6TW9TaFhhYWJoRnl2VEhEemVZMGJtZ1prMFdJLzdrc0tXWUJ4eVpDSHZyTml3VVpKNU9HVFRweHJUNjNmYk5WMk0xeVhrTkxsbStNdExWdmdpR2dkRUVKMEpSeG96VmR1ZGtxcEw4TjNTaWJ3MG1lZWlEem9vVE1EVEJmYTYwYWxDenBONHAvM21rV04xcHViaWVEQ01FVElZUDVEU05oSWtLOExKTjZzd1FSZ2huVlZtR242ZWF1cG9vUWY2MW5vMW1NejVUMVFYWVI0cTM3YnkvQjZpRkNaT0o2YythVkZuWXRWWVI0Rjc2TWR6RlNNUkVoNDRSV2dJV280RWdTSVFic3VmbHJ3SlUwRWVJLzJ5VmttWHUwekNKRWFCVjVVemI5UklqSmVMTTV1MmJHQm1adWZ4Rmk0RFhBNDBsNWRuSVRFVEpXN3JpNlJqUzZSUWpnN3JXbU52Sk9heTJEQ0FFb2dtWGVySjVkaElpN0NCYVFwb2lRTitwekwwOVo4d3BRN1RzVDR2MnhnQ3htc2ljaVpQOUZDTEJpc0JBVkhFa2lCS2pmZEtldnpPWnJMNmVMRUlGWkNXK3RaNmF5Wk81R2hHVmU5OStTclMwV2R2OEt1SkloK1FKb2hZc1BaZGpXUHNFNGNPN3hpd3VDRTBKWkZnK3N2VkdiLzh1OGRDbmo2VXM0eWN1N2twQzVBWnBwMWQ4LzBJMDR0MjNZNW15dXRpNzBTcG9JOFIrMlVqTTNXcENiekppSUVIS1YxcXFKWWxlbVNTSUUxbSs2aFhYQnRyRHRmaUxFcjAxSkl2TjBYT3JHOUU5LytRL3pZQ1ZKaTJhV0QySTN4Nko1V3BzejdBcGl0K0MwQU5ZN042YUhJaVRLUVZIbXJBTFA5eXZzT1B6QXRnanhMcDNNajc4UUVTSEQ1cEVkbmdnUjhuMWhkVDdFK3dwNUM0cUwxdUVSeHorSDNIckR6VjJUc1d2U0ZabjF0WnFDdk1GUzVjblB6Z09WMGs4KzBUZDhiN29GZEsyQXk0cVpsVUJPbWdnUnVvU3A2b2h0RSt2cElzUUFLNnJEY2Uwc3hrU0VqSThUV2hXRU94TDdpaEN4anRnMkwrekdXcG9JTVhDRWltYXRaYk5XWVdRUmdrc0pOMWd4a1dTaU8wV0lYUUtuYW1nVGVEVmRoSUJFU1c3Y2NlMHN4a1NFakk4ejR5N3poOVRTUlloZUZlNm1jS3FZWFVvVElRSG5tTHZxT0c3cVp2VlVDOWhxVVdxMTdFeDAvQzg0Sm5HTzdDOGQyTTJYcGpad3JDM2QxWEdNZmpaS09HUjJYRWRCKzlwMlJoVThTS2g5RFAyU2cvTUJFV2N4NXJ6QTUrMFJ2L0J6aEpOamF5b1ZycHJyN2lMK1V2NzMwV01TWjY1emhxYVRLbHJEQmhpWXhLaTU5RXlsU21hNnU5MWRoQ2FFSk02VnUrYktyUWlhaUIyd0RZVkQ1ZVpiR3I4aCtKeDVpeGxQYy82OHcvbnpYU1o3bkRCL0FOcDhGOEFVcWNqUTV4eHc4RnFoQStBZHc5RndwZjkyQk83OCtmUE8rZlBuSFl4VCtGMXdrdmFLY0J2ZVBhU080MVF4VzR1Nk1JSHRUdUtBdXkxaDMzZG4rY0kvSkxtZHZvMGsxNEpZTG1FYml6Z3VFVTRTWnJnbTk0ckpyZHZIbjNDRktxREwza1BldG5ydDNpZTgrWG1EaGRxSG55L1hQdng4dnBkelA1YVpFSG1GOTRTVEowS2kvc0F3ZVF6Y2RVZG1qandkRXR4eFMvL3RDTnh6TTJmeno4MmNMUU1MOGdWb2t0VzE5dk53MlVUbHdoY2VjbkZVeGRGbDhONWc0M2t2RnZNQW94eSswRWtyWDE4TGVPN3hDNDY4NWZlbnduWVh6UzNPTlFVN3BWcmpXcW5XQ0dMWVZTWFdBbXNuZFZ2QU5xYzgrZVlKOHMxOTNTWFhIaThQclcrN0lnZUZxQVcwU0EreXorVm9tVk5vbVhNQ0tHVHI3ZDAxVUJXZ2NIU2pQblYwNHlxd0MzS2pWcTlUTi92SFZWQkpUejNRdHpjTGgyR1NyWTQ1L3V4SCsxMFE1bWNRRlJFZVZ3Y3VmL1ZMajRZQkZBMm5pckVHYm1qNUlrTXYzWnkzUVhyZHEyUTN4bUVGNUF1UHdQcGdGcTNLU0hsa1JyaUxNRFo4UmJJZUhoODhZNkpWeTVpUG1WMGlDQjUxN3pPdWdjdi9mT1F5NHJTOGhTbEViYmVpUjIvcjdweDVScTdudGVyZk9xdXRKWU5Wb2RSTkhoSzdFaTkwc0x1Zzc2YjlOb1R4UVd5NEtFc1RwTU5rY3libmc1bC80RGpmeFhIaXhzQzFGOEJTbDlvSjhvaVRqZVpNM3owL2ZidGdmLy9IOFY2Q0k4b1pWakhaRDZMbms3a1ZtWHNwVFlTME9hMUtTb3dYTXk2OGxVVUlxQWlLelZMMEV5RnFzYVpXUE95dTBNc1MxVFFSNG5QdjdOeEROSmdJUVF1SWxVN0JFZVlXNVV4VkhLMUZ6eWVqanZHS2hYR05lNGlRZ0lPZThXS1NDajhNOTFZV0lVQlJIV0ZWRW9kK1BLNk83QlhVamtudG4yME5WRWtUSVQ2M0F2R1prODd5aFYxcjFBSkdFcFZsckVRNyt2RGRMQjJjakNybWhnMFFvUGpnaFRxd1dmL21JNXRBV2JLQ0dlRkFwMW43TlF2eVBwd3lhVTRYempsMjdzTHdQbFlmaFBPWW9mVlJ0MU83M3dqaVlCK2dDRG4zK0VYSFlNN1F5YlM2bWljb3QvL29pdzl2ZG4rcE5iQnFwL0NJZmc0NTh6ZWQ5VUhzS2U0ZXRiWnlsd1ZNa0Q4K1YyMWE4b29Kd1dWQjFhemJBc1k0dEF6TW01R29oTWNtUW1nUEhYVmF3SU1USWUzZVJNUXQ0RDZoNFBuWG1iWk5WcEN0SlgweDNlRDdKaW9KZ3lFa2NDdWt6QjJuK0ZwYU1rdGZwV0xZcnVGc2ZPT1hQbmMxK1RSNjNoTWttWENxbVo5c1ZoODM4amRieStabVc2VWlxSmpUWTJISVF4ZXVZWGJWZW94VWRPQzBwTDROdnFjSStmU1h2NzRBM0FITXBZa1FvVzF3MTZNbmpzK284QU1UMVhRUkFoanYxQkJSbHJMaXJTcENXbWhCSFN2UElWbUVHRlFRUCtoMVBxRjEwSGFhQ0pGVWtyaWo4dVJuUXl1WVhZUjRJVE1XSkRscElnVFlGTHdhcjFoa082ZFlBNnFwSXNSQXNoVTNLZnBDajRzeEVTRVpPVXZlZTVNb1FxUXE4dno1cFBPWmQ2ODMwMFNJbVRtWUZoeW51ZFErZGNhWkVMbWNBTW9XWFhVSWlUTWhZSnZndkpKUUZiL0FXZ09xL1dkQ3dxZHhoU0hDZkdYRlczVW14SXdGTTJYYS9DV29DaVg2Z0Y0Q1c1ZHNHK2l5Z0owY1VEYjF6cmZuVElqRU1sQUd4YzZXTkJOaXNHbmVERVp5SnFXcFMvVzlWaVY0eVYvUG1SQVBLeUs1QzU3TWhJd0FVY1l5eG0weHEycG1xbmNEOU83MXBuZGEveWNFRmpET29mN2hPbnFLRURPZE5zc21CaVJkZGRYcVhlQ1BQN0VMdkFLV3Zya1pWazBzWjQwWE0wRTZ6cDgvNzRDV09zY0FreUN4YmRpVkMxOTRxUGNMWHl6bjdYck1BbU5aMW51Ylp1K1pFSEZjU3VpQ3UwV0lhN0NkYTdreEJkenBOL21PNjJhcUNFRUZ3YkhhZmM5bGZHLzhZSGdyaXBCblp1NVp4T3dPbzN0NHExdUVhQk8xQldWaUh2bjZCdDZDWXpkbEpnUVRaWlBDZURHWlJNaTV4eS9tQmNzZ2I5dGVYeEdpVGVETllxTVpuN0xwWExMdU9hN2JhU0xFUDMyWmZLdXJ1NWlJa09FNDExaVdOeUNjVUkrT3YyR2JpS0JNT2wvK3lCc1ZZQXZZVHBrSkFXL1g0M0x3RXB0TUlzU3B0K2JOS0dOV1NoTWhFaHVDemQ5NzdQTXBQcEd0ZzNWWndDUmhZc1lDbGkxYXdxQjRTNG9RRFNEc2pFMnozdjQ4Z04zN2pPdTdVeHRwSWtSR0NhUGNiRTBsYnJ0Tm5BbHhYRTdoTGQyaHl3SjI1eEk2cENudzB2V2JDZkU1aWJLcDIyR2V6SVFNbmQySzlSamFTa2k5aVRsOUd5QUFzazJKOVpTWmtBQWxLWDh5NlRTSmpyN0VHWlJ0V1pSaGE0WWx6NERFeXV0ZUVzcmt1SnBwU2RhNk8wdmFDZEloNDI1WnhuZDRpQTIxTEhVVHVuOHZzMjFXOTk1RmNqYnBxOWhpaE1BUGZQaFh2M1kzNXU4Yk5jTEZBN0h1SW54bzlTb0pGckJyNjZLeGlYaFRVTWVQU1dmdC9yQmpnWUxLZzBiYTdJZS8vYWNmV1pKeEFzZktkNTM2eUIwM1M4ZGVhVG01MEdkMW9QbjJxeSsvNTRjLy94dGRLNFdEb1lWZW5DQllqSUdGRnJVLzk2Tkw3MTU5ZmVudTc3dVI2NTl6VzlkbUsxdDMvUERuZitNbnpOV21pVmZ1L08zdmhBOTIxL1VjaFBQOCtiSmtYVDVmc0JqRXIwc2QyTGJJL2V5VlIvWEpjNXZBcTlGQnJMWUlpWE40cTNEdVRqcGZiQnd3K1BLUlgvdkRWVVJKWVRTclNJR0RETnFGWHBmamRnMnZkQlo2K3NFTDFkbzNIOTQyczJ2Z0QweEdvaFBFeHdadEhtbUppK2VLUEhRaGJDakQzZ1I1ODlrUElkNi84dHBMeS9WQ2FkbDFjc0YrQmRlQTJadWJqNXEzQVNlR3BFN1JFajZiTDI2aUwxYnZ4ZDJ4ZVdXK1dOc045bVc0Z09PNHJXS2hYdm1raWZjQTM1TnhFUWdiNExDdXdibkhMeFlObGcyYjY3di9BMEJjTStQTnIvL2JoOE5yM2l1UCtwUG5Oc0hXMWJZaE1SRVM0OHpDZDBSbldvNzE4SzkrN1RUbWJTanhMVko0eHVoeUxETnJDbDF0b2RTWEJQdllsclNCUHlYVXRSeXJ6UlVOeWkySGNxN1BBSGRtbUoxQS9KakVKMmYyYmxDcTd0QlduRUVTblVqZ2t0TEZ1R0cyVWhZYVZRcmJpZFh5YnBJM0EvVWk4TzNCeng2SFUzZkxlQUlrOWRXNG52aklORmJMVkpPZFJwNE5neWJCQnFmZ1BORnplb2RTcnpISVhzdXhUdUc5eWFpL0NCSFhER2Z6RzcvMHVXd3ZuUmFiR090cElzUzd5UlRsY0NyMjgxRUVRdFNLeXdJRlB6clh6d01mbWpQb3M0OWlFRGdOTDZ4ZXh1VHJXQ1pCaVQxMG9ZclpOdWhhaHFvVklYa2xUbXl2eDZlLy9QVWkzcnVBRnhPZG42NVM2QVd5TDdQQ0Z5dVhNZzAzR0hNeTV5endkTmJ6VDlDTmxuRUdiM05RRnF5WlNCV1VJYVJkakJkSUQvV2JGNVFyVDM1MkJkZ3MvZVFUVWYvYmc1azVOQ25TNUhSMDFxUGZUSWl3UzhLcW1RZHZjVGVSWHUyL0hNdmpKQ3U2THVOU3drNjB5WnYzd3V6QTBvN0dlWVB4YlNGbG8zTit0OTRWVDZXelV0azQzVTIyVGVoNDk4YU5XY0MrZy9wbVZjaStXZDF4R3FjZHB4R3p4ckV1MkhWVmNsM0ZOcUgzblFtQkg0QlZzM2FEWnQxZGNOQ2ZKV3hXTDlHMWYySG9tWkJ3SDZ0WE5vdDJkYU54d1dmUEo0NTNvME55ZnFQb2lxZlNXYzhzbk1HcW1VcmVkZWxNSGVka2JLaWpDKzZYaDRrcTRnZlI3cmJmRWkyVHJab3MxZ0JqSXVUY3IzeXRDTndWN1NIN2loQXZXbEkyL3cvSXowenQxdmRhMTRTcWlHSWZFUUtvYU5ocXVDamhTMThhelNlSzFhbmJ2eGlhNi9TOEV5WHlnSnpYRll5MEdPTjhjTjFtN2xrRnkrSURWakc3cW1JK3Mwc0ZWQVZybVMrQjdDNkloK3VJejJjYVJiTzJCZlQ1bmlMRXhiMGtXckU1NEw3NCtCTjFvUjJUcmFlSkVJT2lQM3d5L0p4ckZHOVJFUUtjSW9NQ1JyWnVZdWZDRng2cXA2WU5ZRTdGSE9kUzFxcGh0aHFNcmdTSUI2Z1VjNUtkaVh0TVBWR2ZxOWEvanlmRHM1ZFo3SHJpSlhWcGtHT29WTHYvdVZQQStuU3dRMytDVFBpTDByMUZneE5JR1RmNnQxNUE2UnZPbzVnNnRsNHhlS20rdFZ3SEZWSlZxOXl6d21MbGljU0J1WmlYVVRMalpMb0lVUlV2L25NVEJ2VE5mTWMxNjJaMW5OWnBuRmJXWVlSZWVNdUpFS0dpMi9FbXpMNmIwSEV1Q2V2cXpmcmxZUkx5TFBVVi9LMmEvVVNJNEtTWjV2U3RCMExEMS9ZQksyNEpXQ0lJcVNWZmNIUzRQRDVYTldQdHExOTZOSnc5NlZyLzE2TnJySDN6a1NyaUI2SGdDUHpKcVA4VDRTUldNYjRIYkE0L0hhVU5nK2VES1RGRkwwK29KWWJqRkY1bXZJZW1YWXFoT1VQUFEzekI1OER1aCt2RmdZbXFqTDRpeE93SEpQUXlmZlA0MExPZXVQdm13MnVDUmJCaTRreElJRUs4Q1BxTFRjM09UWG5MdmlJTlVDcmpUVmc3cVNJRXErQnROQm9DcW1CZXhLeCtJaVRnekxpTExENU1INWh4UlhBUnpJdFRFeEZTYmNkL0JHN3MwSVpsZThOQVB4UU51eXM5bVFlellPUFk0SkRYRnQ1djVpMzU2cU92SEdBWmx3VzZHcUREZ3VDNEloYklPNmZYYXVjQUFBdHZTVVJCVkxuaUZ0QnJoRlhEWGg2cXNJNnFCdDgzMTBMeDBXa0I0NXhXQ2NleGhoTWhkLzdXZHk0RGw0Y3A3KzBLYzFSRWx2M2wwZDRLbUtFYUlGNWJxRWFmVFlnL3B5RW5IU2V5TnJHOUdNR0xTcEM2WndCQXBsMmMxZ3ZwS2J0UmZQQkNCVmlyZi9PUkhZdzVVUC9oQnRrWkpoR3pCb2RzRGpLRlBYYUJ5dGUvK1BDUVBScmc2QVhFYnFZdXdkc2ZFczZjUkc5K1dYQWlGQjMwRXlGVVc3Uzc0T0VHaUhVRk1teFdONjBnelhQeDNMNEdyaHdGKzdHUmZCVHUzT01YQ3pMbTFiRVBPRW1FQU5YQW5SbzIzMXhMbHl4N3hLd1ZSZUxGUkUrMFlMQVM3WEtUWmtLQU90aU9pMFphS2lSeFNWSWxHRlRyT1R2aWRiOUx6Unh6aCsxR1o2M3JRWE81dmRhOGlTWHIySVRVWStWT1JXWTlONkZuNGZJdHJvSVhTenBEeEt3VFJMcmdJQXhIQWE5VkxrWXRvRmZvdUFVRUtnWlh2L0ZMbnh0b3pDZ0JnMnhXWDg3eW51SUpmTWdQcTVjTlZXTllRZW5qb1FzVmpLdjRzMktkRmpES0NTMUtsRzgrK2RrQ3RDM2dQSEFIVXFsTGRIUlpRRzFtWFZyZkQ0YTliSlloWXBZQlpzY3hwM3pZTEUzL0d0NDZ1RkNXcVNzT1RBOVVEWVlTbEIzWUlMSlp2ZGZzaUdFbDRCaGVtL01iWURQYjI3TzlFOWtHTnB3Q2pzTEI5UjNYTEhucXRJc21FYk95d3RHU2tmR2R2ZEt1Tkp5ZzdNajBaVExzRFFMQXRKelBOVTZEM3dCZGx4V0pCWCt3TUVXRXNHbXlucEd3c25LV3N6VXNZOFFzK1cvM1BxUTRESDVvbEROWllpQ2l4SmtRczZyeXp1VlI4MFZhUjJ4bUVDRWd5clM4WFkvK2liU0NINGdvVllTSWJhUllBeHltMjhwTjV6ZkJOb0ZxWHhGaVlHWXJKaXNuaGVzNEREZi9NTGtCanozMkdFalpJbUdKS3JDcFFuNXoxSHpCMXNrUU1jdFBHOGFMOGViMDBISHozeDJiSmtLRU5xWFc2UHMwUHY1RUhla3FhQ2ROaEVoYUJPNm8vK2lMaDNZbzVyRGdyNHJ2SytENVdGbDZqQjBUVnk5ODRhRWhCNkFqY0d3REkxUEVMUE9HL040SmdRV1VlUkdwSlBxSkVFSFRZSHUyMXJnMmNvRUJtYkp0VmpmeWdnVVZhMTN4WWc2VDlUa01xRG5GUmJ3QW54a2VWbTE2TVh0R3g5VEMrZ2JvRGJ6NDBuMVhud0ZsOHkyMDg5QnZYaXpLNGFRWnFjR0FERjBHWHZ1OXh6NC8wQktzbnVkVDdtVXBtK05xeHBMbFc5a2M2N2N3WE85VnJObWltbUViTW1jY0NoaTc5NWttWmxmSk1vZHRsREdkNUtrSFNvNVRjVThoU3VIQ2x6NGl4RmZBaVp2UWgrRmsyakJJalpqbEcrVHlBR05iQjRyRDRJZUdjRmxCbEZQM2Z3Qm1iRHVST0RBamwwWGFCSzJuaVJBaEI2elVjT2RPT21aYU5TaDU5N3kvQ1BGZlFKMjZDVDA3cDFka1NvMlk1VjAzbFVtSThIa1lidjZoY2dPTUUyYVVVemVoZTloRTdRWTRhbGtrdHBVUUx5WkJoQURlZTZnZDBDcEdNVnl0MEYrRWVESCt4Z1ZIM3VDbG1kdFBoUGdWU0F5eVBVRW5kRnlaQkloY3hEYXVqVHlwRUo3Ukc0anVzb0RCTWNaSlJhUlZCMys5blUvMkZTR1lYaVhuanEwQlRqOTQ0WnBoYndEVmZpTEUzNGxYUnQzeFlnNlY5VGtFOEljM1VrT3hDYXRqdlBuMUx6NDhGa0VKWUE2YkdLK21pUkFCbUpVd3U5c0JPeXV5TFhkeTRWSWROL3ZHNVF3UVhDUFQ0a3RiTUhTQ2krZjJMWUQ1N1k1emoxK2NGNXl3REEzUVlFMGFuL1VEbUs1cncxSEdpRmxRd3V6OWVlUXVtK0VDdTVHVjUxMDIxTkR1c2RrYjFaLyswUDhxbkgveFVlZnBseDRGNE9rWEgrWFBYdm84VDcvNEtCN1hFZlM3NDNTZDNBZHl0anZsNnJMSmZ5V3NXZVFIaXYxV2pqblhaNmZlL2VKTG4vOXJhQWY0anJxM0I4MjFuZXhvc1BGYnc1MllldVE5RzlXanVCazJGK1VjWFNsTlZ5dFB2L1RvL0xqS01yTlN5dCsxV2F0T043Vmh4bHowcXJXdlhpQk1jQ1d0MksvLzRiL2JjckVDd3FIUHUxMGR4NjJlZnZ1clgzL2JrZVNvT3NOaXR1NnV6alQwL254THA5TFN0aHk3dGx0MC9tUXZIM3R5azhwODBGencrWlp5MTI0c0xGKyt0dnhnclRHVk9xUTJXNnhlWHByZit0N0t3clhMNHl6TFRNTmRtYSs2ajFoNlBCcFhSdDIrL1RlZlUyZmN1SEIvQnZoaXdQODd3eDRPTVA4ejRkRS96ZkJjK04vaDQzcXNzWnNnSTd5aGhEQmtiUHQvQXVtY01KNlVobkNybjhiRUJmOE9JWmZxYkUrNHZsei8vUmdUVExEUENPYUN2Yi9VNFd4YmQwalhMQU9jN1ZVc1krSWkvdzRiRnoxS0NVdVJKbHhmem90c2FZSHY1dXNUUDVsaURkSkRrdC9UeVdXWkJocUlDMG9VS2Q1aDRZSXJKSHgvT1BoK3dtWGkvSmVIUkMxZGtFU2h3ejJvSDdndklxUXpqMFBDSlZuQ1h0OU51RzV1SWtKRzVBNlRRMzg3Y3JIb1dJY2ROVGZQNi9VNWRsclRlQmJheUpuTGpOUGd6bUttMk5vSGd0ZHFSOWhwVGROMGMyR0hVc2cxT1ZHNHpreHVMQ3ZaK3NJVjdMYW0rYnVxUHlFUzludEU3UXNJLy9vMXVYTm1hOS9MbFFTdkFRYnZZQTJkT2I4TDl2dmxxQVhJS2tJQ1JMdldvVG4vNzVweXZGSTd5bXYxSTJHYWdyVTROclhIbmNYdG1KbVBYdWY5NUxvY2F6TTJha2RZcjg5VGRkdlA5M3kreG1LK1FpblhETk9SOE50eGNDNE9OMXJUL0hYbGJhUWh1SDZuL0FZNDdyS2tjZnN1UWdUY2JCVzZuc0taWEpOY3dueCtQeEhTa2tPbGxXZW5PZTBYMFppMkp0Tk9NNWJ1Vm91UW1xYlliUldvdUlYd3U1d0pGNHVsSStHMzQrR01wbkxzK0ZIdCtoaEFwcTFKTWRkTXJNZitsZStBUklpQXBoeXUxTHJueHU4c2JqUGpOSERRUUNMRXdqVFdEaGZzcHpnMElpUW9kNlJPUVR6QmczRHlnd0pZNU04d25YVncvbitKOVRnQXp1c2p3amQ0Qi8vamYxTDdrUmtBUWNOeE1XcXRQTis1L3M2dWhuVTB2OGZVVkl1Q3RUS0prT2huNzd2Mks3Q0NGRXI0d1g1ek1jc1IwSDZ4UXM4Rzc0SHBURS9TYjhmQXRSY0krSndscExOb3RaUmNqd1BnVWtTSXR6alU5VysweVY4Qm9XQTFTSlFMS3I5L01NU1V1ZVFEMVc1ZTErWkUzNFUxSkZ5L3JsMVBYQWRuZ0pQU0pUaTQ1RXprVE9INzRYSzBNcGZGNnowczdMS0RmQTAzNDl5ejl5N2tYR0IxL1RJRXh5aVhNdzE5ejF4NS9tWlF2c0NBRFhJLytvcVFuVmFSMTJyenJPMmxMN0F0NVJxY0xHN3hydUpXek14Ny9iMVh4SUMzeUpVSXVDd2k1RWl1enRranIvR2V1VGZDTkk3ZktLUHAvS3d6Y3k3R1greThrODNHVEdvOVozTjEzald6eGNucDdmQkpEczRaT05ZL01udVZkODFzNGtaeXlwdkwwVncxazZQK1pxUEUzMVlYMklpSUxZRFYwcHVjbm5remZBQ1RmZ3VRdytYdGhWMCtWZjZiMVBvRTF5K3BIdjN5Mkd2bGViMStoUDkzTTc3LzZXaSt5Z2VPYkRDZnEyVTZYMThSMG5RZGJyUUtiTlM5OWFyQm5wRnc3MGlFbTgvWFdKeTZDY1M3ejNhN1Z0eTNDNnhZcDhGSmVIZ0NLdSs0SExVcVJ5TW50OGh2b3QzTG9FSmlzem5EUnVOSWVISGFGYkFZZHpSZlkzbDZOM3prWTEyWDcxZ2Z5ZGVZcDlhNyswbHgxT3ZLc2QwcThucmpTQ3pkVW12WHQ0cnFlejR6S0ZxVHR4ZDI0K21TeWtKZ2JyS1h6L0FzWDhXZFlxTnhKSmF1aVVOVFR1Yno5UlVoM2cyTzI0dnVMcUROeGZ3THYwdDJUQ3dXdWdQY0Y2emR3ZHo2bVpEQXhmQSt0cTJ5ZFhHOXp0VjVISlVEejBtTHVia0oxMlBjK1dibHVub1R4ZE5sdlM1OVJZajNoQ3YyVTg4QzBzVkZUeHcwSEFjeG5XdnlpYU0vcEJOSDhqVnlnWGlJWk5GWGhPd2IxL1lwNHliWUZ6b0paamxxZGJOWW1FRzQ4TXpXWWEwN0gvUXg1enNJRjMwdWd2SXB3bVc5THZzK0U1SkRITXVQSHZsaGdyK2Y2Q3RDWm5KTjNsRzQwZkZxa1dSTU82M1FCOXl2bVJBWVRGeGs1UnhndGJqSjBsUjZ0TGlpMDZTY3I4U2U1T0NjNDVvdG1NM1Z1SE42TzNUa0F5d1hibmpqcGhGdW5Qa093azFaaThWOGhUT3pyOFhLV01vMUtGb2o4M1hwSzBJSzFxUTh0Y2VNMC9DcDNpMG1oOXVla2VqdXNRNzFjaXhEckV6djBGQXUzcW82K3hHL25rV25HZktET3U5WnVCbW55VkpobDRXcFNNOGhLT1lhT0theDVERXFsemVYby9rcWVjZU5YYXU4dFNnNHJmR0lrTHlKdk5OZ3h2RmVIM1pMOTRSMFlOemNmSzdXOXJHaStmYmhvaC9Ubk8xQnVDbkhaY3FwQSttdmJSdG52b053T1JPNW5EZU5OMHI1SnN1eFJ1U2lqbmYwK3dtWGpadnNDWm5nbG1LeUoyUkVyc3Zabm5BRGNaTTlJU055d1JVUzNCSXhjTHR6a3owaEkzSkpsckRYZHhPdW01dUlrQkc1dytUUTM0N2Mvd2RPandwN25pTHg2Z0FBQUFCSlJVNUVya0pnZ2c9PSI+PC9pbWFnZT4KPC9zdmc+Cg==" k="name"/>
            <prop v="0,0" k="offset"/>
            <prop v="3x:0,0,0,0,0,0" k="offset_map_unit_scale"/>
            <prop v="MM" k="offset_unit"/>
            <prop v="35,35,35,255" k="outline_color"/>
            <prop v="0" k="outline_width"/>
            <prop v="3x:0,0,0,0,0,0" k="outline_width_map_unit_scale"/>
            <prop v="MM" k="outline_width_unit"/>
            <prop v="diameter" k="scale_method"/>
            <prop v="40" k="size"/>
            <prop v="3x:0,0,0,0,0,0" k="size_map_unit_scale"/>
            <prop v="Pixel" k="size_unit"/>
            <prop v="1" k="vertical_anchor_point"/>
            <data_defined_properties>
              <Option type="Map">
                <Option name="name" type="QString" value=""/>
                <Option name="properties"/>
                <Option name="type" type="QString" value="collection"/>
              </Option>
            </data_defined_properties>
          </layer>
        </symbol>
      </symbols>
      <rotation/>
      <sizescale/>
    </renderer-v2>
    <symbol name="centerSymbol" clip_to_extent="1" type="marker" alpha="1" force_rhr="0">
      <layer enabled="1" locked="0" class="SvgMarker" pass="0">
        <prop v="0" k="angle"/>
        <prop v="245,75,80,255" k="color"/>
        <prop v="0" k="fixedAspectRatio"/>
        <prop v="1" k="horizontal_anchor_point"/>
        <prop v="base64:" k="name"/>
        <prop v="0,0" k="offset"/>
        <prop v="3x:0,0,0,0,0,0" k="offset_map_unit_scale"/>
        <prop v="MM" k="offset_unit"/>
        <prop v="35,35,35,255" k="outline_color"/>
        <prop v="0" k="outline_width"/>
        <prop v="3x:0,0,0,0,0,0" k="outline_width_map_unit_scale"/>
        <prop v="MM" k="outline_width_unit"/>
        <prop v="diameter" k="scale_method"/>
        <prop v="40" k="size"/>
        <prop v="3x:0,0,0,0,0,0" k="size_map_unit_scale"/>
        <prop v="Pixel" k="size_unit"/>
        <prop v="1" k="vertical_anchor_point"/>
        <data_defined_properties>
          <Option type="Map">
            <Option name="name" type="QString" value=""/>
            <Option name="properties"/>
            <Option name="type" type="QString" value="collection"/>
          </Option>
        </data_defined_properties>
      </layer>
      <layer enabled="1" locked="0" class="SimpleMarker" pass="0">
        <prop v="0" k="angle"/>
        <prop v="33,150,243,255" k="color"/>
        <prop v="1" k="horizontal_anchor_point"/>
        <prop v="bevel" k="joinstyle"/>
        <prop v="circle" k="name"/>
        <prop v="0,0" k="offset"/>
        <prop v="3x:0,0,0,0,0,0" k="offset_map_unit_scale"/>
        <prop v="MM" k="offset_unit"/>
        <prop v="255,255,255,255" k="outline_color"/>
        <prop v="solid" k="outline_style"/>
        <prop v="0" k="outline_width"/>
        <prop v="3x:0,0,0,0,0,0" k="outline_width_map_unit_scale"/>
        <prop v="MM" k="outline_width_unit"/>
        <prop v="diameter" k="scale_method"/>
        <prop v="25" k="size"/>
        <prop v="3x:0,0,0,0,0,0" k="size_map_unit_scale"/>
        <prop v="Pixel" k="size_unit"/>
        <prop v="1" k="vertical_anchor_point"/>
        <data_defined_properties>
          <Option type="Map">
            <Option name="name" type="QString" value=""/>
            <Option name="properties"/>
            <Option name="type" type="QString" value="collection"/>
          </Option>
        </data_defined_properties>
      </layer>
      <layer enabled="1" locked="0" class="FontMarker" pass="0">
        <prop v="0" k="angle"/>
        <prop v="A" k="chr"/>
        <prop v="255,255,254,255" k="color"/>
        <prop v="Arial" k="font"/>
        <prop v="1" k="horizontal_anchor_point"/>
        <prop v="miter" k="joinstyle"/>
        <prop v="0,-0.40000000000000002" k="offset"/>
        <prop v="3x:0,0,0,0,0,0" k="offset_map_unit_scale"/>
        <prop v="MM" k="offset_unit"/>
        <prop v="255,255,255,255" k="outline_color"/>
        <prop v="0" k="outline_width"/>
        <prop v="3x:0,0,0,0,0,0" k="outline_width_map_unit_scale"/>
        <prop v="MM" k="outline_width_unit"/>
        <prop v="11.8" k="size"/>
        <prop v="3x:0,0,0,0,0,0" k="size_map_unit_scale"/>
        <prop v="Pixel" k="size_unit"/>
        <prop v="1" k="vertical_anchor_point"/>
        <data_defined_properties>
          <Option type="Map">
            <Option name="name" type="QString" value=""/>
            <Option name="properties" type="Map">
              <Option name="char" type="Map">
                <Option name="active" type="bool" value="true"/>
                <Option name="expression" type="QString" value="@cluster_size"/>
                <Option name="type" type="int" value="3"/>
              </Option>
            </Option>
            <Option name="type" type="QString" value="collection"/>
          </Option>
        </data_defined_properties>
      </layer>
    </symbol>
  </renderer-v2>
  <customproperties>
    <property key="dualview/previewExpressions" value="fid"/>
    <property key="embeddedWidgets/count" value="0"/>
    <property key="variableNames"/>
    <property key="variableValues"/>
  </customproperties>
  <blendMode>0</blendMode>
  <featureBlendMode>0</featureBlendMode>
  <layerOpacity>1</layerOpacity>
  <SingleCategoryDiagramRenderer diagramType="Histogram" attributeLegend="1">
    <DiagramCategory maxScaleDenominator="1e+08" penColor="#000000" lineSizeType="MM" scaleBasedVisibility="0" height="15" penWidth="0" labelPlacementMethod="XHeight" width="15" sizeScale="3x:0,0,0,0,0,0" opacity="1" minScaleDenominator="0" backgroundAlpha="255" rotationOffset="270" enabled="0" backgroundColor="#ffffff" penAlpha="255" barWidth="5" sizeType="MM" minimumSize="0" diagramOrientation="Up" lineSizeScale="3x:0,0,0,0,0,0" scaleDependency="Area">
      <fontProperties description="MS Shell Dlg 2,8.25,-1,5,50,0,0,0,0,0" style=""/>
      <attribute field="" color="#000000" label=""/>
    </DiagramCategory>
  </SingleCategoryDiagramRenderer>
  <DiagramLayerSettings zIndex="0" showAll="1" dist="0" priority="0" obstacle="0" placement="0" linePlacementFlags="18">
    <properties>
      <Option type="Map">
        <Option name="name" type="QString" value=""/>
        <Option name="properties"/>
        <Option name="type" type="QString" value="collection"/>
      </Option>
    </properties>
  </DiagramLayerSettings>
  <geometryOptions geometryPrecision="0" removeDuplicateNodes="0">
    <activeChecks/>
    <checkConfiguration/>
  </geometryOptions>
  <fieldConfiguration>
    <field name="fid">
      <editWidget type="TextEdit">
        <config>
          <Option/>
        </config>
      </editWidget>
    </field>
    <field name="osm_id">
      <editWidget type="TextEdit">
        <config>
          <Option/>
        </config>
      </editWidget>
    </field>
    <field name="name">
      <editWidget type="TextEdit">
        <config>
          <Option/>
        </config>
      </editWidget>
    </field>
    <field name="amenity">
      <editWidget type="TextEdit">
        <config>
          <Option/>
        </config>
      </editWidget>
    </field>
    <field name="hstore_to_json">
      <editWidget type="TextEdit">
        <config>
          <Option/>
        </config>
      </editWidget>
    </field>
  </fieldConfiguration>
  <aliases>
    <alias name="" field="fid" index="0"/>
    <alias name="" field="osm_id" index="1"/>
    <alias name="" field="name" index="2"/>
    <alias name="" field="amenity" index="3"/>
    <alias name="" field="hstore_to_json" index="4"/>
  </aliases>
  <excludeAttributesWMS/>
  <excludeAttributesWFS/>
  <defaults>
    <default applyOnUpdate="0" field="fid" expression=""/>
    <default applyOnUpdate="0" field="osm_id" expression=""/>
    <default applyOnUpdate="0" field="name" expression=""/>
    <default applyOnUpdate="0" field="amenity" expression=""/>
    <default applyOnUpdate="0" field="hstore_to_json" expression=""/>
  </defaults>
  <constraints>
    <constraint unique_strength="1" field="fid" notnull_strength="1" exp_strength="0" constraints="3"/>
    <constraint unique_strength="0" field="osm_id" notnull_strength="0" exp_strength="0" constraints="0"/>
    <constraint unique_strength="0" field="name" notnull_strength="0" exp_strength="0" constraints="0"/>
    <constraint unique_strength="0" field="amenity" notnull_strength="0" exp_strength="0" constraints="0"/>
    <constraint unique_strength="0" field="hstore_to_json" notnull_strength="0" exp_strength="0" constraints="0"/>
  </constraints>
  <constraintExpressions>
    <constraint desc="" field="fid" exp=""/>
    <constraint desc="" field="osm_id" exp=""/>
    <constraint desc="" field="name" exp=""/>
    <constraint desc="" field="amenity" exp=""/>
    <constraint desc="" field="hstore_to_json" exp=""/>
  </constraintExpressions>
  <expressionfields/>
  <attributeactions>
    <defaultAction key="Canvas" value="{00000000-0000-0000-0000-000000000000}"/>
  </attributeactions>
  <attributetableconfig actionWidgetStyle="dropDown" sortOrder="0" sortExpression="">
    <columns>
      <column name="fid" width="-1" type="field" hidden="0"/>
      <column name="osm_id" width="-1" type="field" hidden="0"/>
      <column name="name" width="-1" type="field" hidden="0"/>
      <column name="amenity" width="-1" type="field" hidden="0"/>
      <column name="hstore_to_json" width="-1" type="field" hidden="0"/>
      <column width="-1" type="actions" hidden="1"/>
    </columns>
  </attributetableconfig>
  <conditionalstyles>
    <rowstyles/>
    <fieldstyles/>
  </conditionalstyles>
  <editform tolerant="1"></editform>
  <editforminit/>
  <editforminitcodesource>0</editforminitcodesource>
  <editforminitfilepath></editforminitfilepath>
  <editforminitcode><![CDATA[# -*- coding: utf-8 -*-
"""
QGIS forms can have a Python function that is called when the form is
opened.

Use this function to add extra logic to your forms.

Enter the name of the function in the "Python Init function"
field.
An example follows:
"""
from qgis.PyQt.QtWidgets import QWidget

def my_form_open(dialog, layer, feature):
	geom = feature.geometry()
	control = dialog.findChild(QWidget, "MyLineEdit")
]]></editforminitcode>
  <featformsuppress>0</featformsuppress>
  <editorlayout>generatedlayout</editorlayout>
  <editable>
    <field name="amenity" editable="1"/>
    <field name="fid" editable="1"/>
    <field name="hstore_to_json" editable="1"/>
    <field name="name" editable="1"/>
    <field name="osm_id" editable="1"/>
  </editable>
  <labelOnTop>
    <field name="amenity" labelOnTop="0"/>
    <field name="fid" labelOnTop="0"/>
    <field name="hstore_to_json" labelOnTop="0"/>
    <field name="name" labelOnTop="0"/>
    <field name="osm_id" labelOnTop="0"/>
  </labelOnTop>
  <widgets/>
  <previewExpression>fid</previewExpression>
  <mapTip></mapTip>
  <layerGeometryType>0</layerGeometryType>
</qgis>
