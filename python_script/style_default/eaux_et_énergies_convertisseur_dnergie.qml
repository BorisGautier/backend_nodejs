<!DOCTYPE qgis PUBLIC 'http://mrcc.com/qgis.dtd' 'SYSTEM'>
<qgis labelsEnabled="0" readOnly="0" simplifyAlgorithm="0" maxScale="0" simplifyDrawingHints="0" minScale="1e+08" simplifyLocal="1" hasScaleBasedVisibilityFlag="0" styleCategories="AllStyleCategories" version="3.4.7-Madeira" simplifyDrawingTol="1" simplifyMaxScale="1">
  <flags>
    <Identifiable>1</Identifiable>
    <Removable>1</Removable>
    <Searchable>1</Searchable>
  </flags>
  <renderer-v2 forceraster="0" toleranceUnitScale="3x:0,0,0,0,0,0" tolerance="20" type="pointCluster" enableorderby="0" toleranceUnit="MM">
    <renderer-v2 forceraster="0" symbollevels="0" type="singleSymbol" enableorderby="0">
      <symbols>
        <symbol alpha="1" clip_to_extent="1" type="marker" name="0" force_rhr="0">
          <layer class="SvgMarker" pass="0" locked="0" enabled="1">
            <prop k="angle" v="0"/>
            <prop k="color" v="231,113,72,255"/>
            <prop k="fixedAspectRatio" v="0"/>
            <prop k="horizontal_anchor_point" v="1"/>
            <prop k="name" v="base64:"/>
            <prop k="offset" v="0,0"/>
            <prop k="offset_map_unit_scale" v="3x:0,0,0,0,0,0"/>
            <prop k="offset_unit" v="MM"/>
            <prop k="outline_color" v="35,35,35,255"/>
            <prop k="outline_width" v="0"/>
            <prop k="outline_width_map_unit_scale" v="3x:0,0,0,0,0,0"/>
            <prop k="outline_width_unit" v="MM"/>
            <prop k="scale_method" v="diameter"/>
            <prop k="size" v="40"/>
            <prop k="size_map_unit_scale" v="3x:0,0,0,0,0,0"/>
            <prop k="size_unit" v="Pixel"/>
            <prop k="vertical_anchor_point" v="1"/>
            <data_defined_properties>
              <Option type="Map">
                <Option value="" type="QString" name="name"/>
                <Option name="properties"/>
                <Option value="collection" type="QString" name="type"/>
              </Option>
            </data_defined_properties>
          </layer>
        </symbol>
      </symbols>
      <rotation/>
      <sizescale/>
    </renderer-v2>
    <symbol alpha="1" clip_to_extent="1" type="marker" name="centerSymbol" force_rhr="0">
      <layer class="SvgMarker" pass="0" locked="0" enabled="1">
        <prop k="angle" v="0"/>
        <prop k="color" v="245,75,80,255"/>
        <prop k="fixedAspectRatio" v="0"/>
        <prop k="horizontal_anchor_point" v="1"/>
        <prop k="name" v="base64:PD94bWwgdmVyc2lvbj0iMS4wIiA/Pgo8c3ZnIGlkPSJteVN2ZyIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayI+Cgk8aW1hZ2UgaGVpZ2h0PSIxNjAiIHdpZHRoPSIxNjAiIHhsaW5rOmhyZWY9ImRhdGE6aW1hZ2UvcG5nO2Jhc2U2NCxpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBS0FBQUFDZ0NBWUFBQUNMejJjdEFBQUFDWEJJV1hNQUFBN0VBQUFPeEFHVkt3NGJBQUFnQUVsRVFWUjRuTzI5ZTVBYzEza2YrdnRPbis3cGVlenNlN0VBRnNBU0FFbUFGQ21Lb2lDS29wN1d3NlowWmNjeG85aU1rbEpzT2RkV3BWUzJyNjhyOTFiZG0rdXFYSlhLY1NsUmtwSjlGVVV1UzdLaVJJa1V2U3lKREVWU0VDbFNORVJSSkFpUUlMQUFGb3ZGUG1abVorZlYzYWZQZC8vb3gvVE16dTdPTGhhN0MySS9FdHN6ditrK2ZSNWZmOS8zTzY4bVpzYU5La09EZ3dJQSt2djdaTXFVdWRMc1ZGNTdqWkZNeWhvenBUaVlrdUtvSUF4SVFYdFNwbkVQQU5FNUpRWkE4WkVCNVhqNkNlWHJLWis1NUNvKzdmbDh0dFp3cG1CWWM3MURvMlZIYWZmY3VYT056U3JyZGhXNlVSUndhS0JmQUJBSER1ekw5K1l5ZlpmT3ZyS25YaTd1VDZlTS9hYlFiN0drN0RNdHk1YW1LYlZtbTRoc0FCa0NKQWcyZ1hJRUJvZ0FBTno4dUVTWUdReVVtT0VDVUFCcXpOd1FnbHpsS2RkMTNacmplVk9LeFU4YnJqOXA1L29tZCswL09GMHNWd292bkR4VmlkSWhJc0hNT3BuMmF3MXJVY0QyRXp0ZGVEMUpmMDlPM254dzMwQ1BMZmMwRmhmSEppZk9EMlhTeGxITE12UFNsQU5DR0VNRVBRVFdoNFVRVW9RQ0lOSXVzVlRIR0dBS0RGNGJIQnRCQktlRXVHNmVBR2l0dGU5cnhjdzFKbkdXaU9aODN5OTRyanZuT21xKzN0QXY3OW8zTm0xbXM5T2x4ZHJNMUh5NVZDeVc5RllyeXJYQ1ZyV0EyeWFqWFp3ejJOOHJVdkNzZ1I0N2w4K2tSb3V6MDBPcGJINS9OcHU3bmJXK2JXRyt0RWNhK25WRUxHemJGaWs3QldhTzBsRmFzMlptUVFTQVNJQlpFRkZnN1lDa2wyMWF3SllmdysvaFZ3YnBRTytDUEliWGFDSWhoQ0RKekpxSTREUWFhRFFjcFpscXZpOU9adnZ5WnhqNnRGT3JuVW5iNXFSTDFwVHJvOVJRcUMyNlVETXpNeTMxRXFUTjF5VW1zWXAwc29CYmdYVjNIUXNBQXdDT0FmaW9JTnl2RzR2NW1sZVRxWlNOM2JzSDRQdmFaZWlHVWo0ODVRdEJKRUFzQVVnaWdKSitOZnpjNG1vSnJWaTdIMDU4SjBDRXlpbVNQekUwZkUwS0RGZXpyODFVU3R1WmpDUVNmVUxRZlpYRnhmdmNlZ05nZGdWWk13UjhEc0FqQUU0QktEVnZGYnF4c0VHdlIreTZqd0h2dmVkdUc0U1I2VmVlKy9YQkh2dmowakFPQ3lGQVJMQXNDd3pXekZDc0dWcHJrSWd0MjFKQzBTbXdXdzI3aXZwaklrMGhzV0ZtelNBRlppMkVpUElwZmQ4WHZxL0FBSlR5SzQ3cm5TaFUxWi8zN1QxMEhFRGw1T2t6N3JvenNBM2t1bEhBcEx2TlpUUGl3RWp2NFlXWjRsMUNPMi9KNStpK25ueCtpSWoyRUdCVGJMbGFGU2NvYStoSGlaYUVjZXVTZ0hBZ2NOV01adWpYQlJZUm12aFA4SUdJTkpxS2lhaU53dkpYU0JpVFY2WUtCYnNuKzZpWnlUeU9kUC96UDN2eDlGeW51dHJ1MkhXamdQMTl2V0lnSTJ3QkdrMnB4ZmVsYlB0MndMZ0Z6SWNGcVRFcmxRSUJjc01zVzdmWVp0VWZVYVNqR29DcVZWeVlsbnhaYVhYU2NScW5RTWJwUloxNkJFRHAvTXpDZFdNVlYyVEIyMEh5K1I3Ukk3eE1mMGFNR2tJY1pOQnRrdFhIVFZQdXNTd3JZMGhUYSsyN1N2a1FCSXNJQWt6Z3dKSzBkOUVGc3BGWXU0TEdKR1RqTVFiQXpJcVpYY3UwcE8vNzBuRWEydk84TWhubXl3cjBPYzl4VGpMb1FtN1BMWFBQUHZjTE43aTArVkRHbG1lYllDMGtaTHNwSHdCUVVQL2pCRHhra1A0dGc3QS9uY21CZGRBUW51dENDTElNRVJZc1pLV3hnKzJrSkJ1TmRiS0Mxd0NqNFBZU1JGSXBUNE9oYk5zVzZYUjZBT0I3RzA3alh0L1JUL2d3dmdqZzJ3Q21nMHUzQjVIc2hHMWJGN3gvcUNjSHdoZ3ZWajYxWjNmdi9aWnBESVJkSm5GOGRFMWRhN2ZZTnFvL0JyUmhHS0phcmFGV3JVK0tkUFpMTmRuN0tUQXFaeTlNcXEzT1h5ZFprd0oyRzJSZWpRd085TW45ZmViZFVPNHZzMXY3WDdLNTNvT0F6aERCQXBFQU9HR0U2SnA1MXJWZzIrSkJRTk82NklDNHVBU2FtNzVjbXJDeW1TL0xUUHJSaWRucW1XcTlFWi9iM2lXeUZkaTZMT0MxVXNSamQ5dzZWcDU2OVgxcDIzcWJaWm4zRU92WFdTbGJhNjExMk1jbmtxNDF0SWp4OVZGWk5oT0xHRzNiUU1pbVl0RW5JdExNVFliUHpMcFdkYVdRNGtsUHFlUFZXdU54OU81KzRzejVTL0Z3MzFaTFN3ellyV0oxNisrN1NXL3Y3bDBDQy9NWitQN28ySUdSOTZVcytUR0Q2SWdoeUpZeUJkLzNOUkVTL1hZSjI5Tm1FU0tMdUpsWWUxZFBwNjZkYTQyRm5VNWdRRVRkUEF4b2dIUlBQZzNsZWZlQ2FUeGpXN2RZVkxWSExIb1NqTUtzd3BhNzVTMlBBZmZzM2lWcFlmNFdhUCszOSszdStVUFRORFdSVUZwck1GZ0lvc1JEMHVMNHRvZnIyMFl4SUlBbCtmSVpMaEdVSVlRRVlIbXVnMWN2VlQ0QzRKRVpsNmUzTEoraGJLa0MzcngvZEN6SGxYOXFHdlN4VERvOXBwVHZBaXdSUHNrdHNoMlVyUk8yM1JSd0dXRkFSeDNocGpURjdGenB5VnJEL1V2dTMvTzFjK2NuYTF1VnJ5MGpJZnQ2NWR2N2JQeGUyazdkWjFxcEVSR2tZeVhTamMvZEtuSnh2WkdRWlRFMFkxY1FhUUlwVDZtYTF2cUNabjdzVWtsOWVycmN1UENhSnlIRFEwTWlwd3A5Qk53OTJKLy9tR0QvbllaaERBbGg2RENJbHMwS2JEYnhWcENMYnJIdFFFSzZ4c0w0RU1FY1JXaG1yYldlOGpXK2U3bXcrRmtBRTVObHZha0VaZFdSa0t0aHQ4bHJiejUwVUtBNE1Xb1k0aDVER0w4NTBKdjdCMEdGUUllbmRKNGdFRXBiOUxlRHJSRnIrVDJvY0FXUUFGaHFyYkZRZGY3VVUrcHZIVStkS2xOdnViU3dzRUlLR3llcmpvUmNUZGRLOGxvR0pBSHZNWVg0ZUw0bmN3eWdtbWEyS1JpL0JZQVY3ME1kWE11MndDS0wyQ25QMndoclBZRkFRQmp1a0RZTTZmYmw2UDhxTGRiMk9CNitDT2JqbXpVcXRpa2taSFNnWjJTODMveXNJSDQzQVhraFpJUFp0eEgxNjlIS3oyeWJsZDVXMkhYbGdwTVlOZmtUQTRwSU5JaVJxYnZPaVZLbDlwV2FOZnlacWN2VDE3eWJaczBLMkkyYmpsenBZRTlLQU1qdHR0V1hzOW5NM1lZaEJ5Z2N6VUJvZlpldzNRNlN6Q0Z0TXl3eWhqRWV4L3JYQVpab2V3WmNBZ210ZGNWVjNrU2wxbmpNeWU3NUU0RFV4UGtMUzhkd04yZzYxcW96b3RzbHlXS1d3NWhaRCtZc2F6aXRiN0VNK2tqS1RMOVRDR0VuZEcxcE44dktONDB5dmcweGJqWXFPalQwTnNjaWxFSmRFSUx5cHBSSE1yYVY5NHNYWDRHUTN6NTA4S1lwdElWSUd6VWhZZG1ndjVOMElnbWRzS0VlV3c1bmNFdktFTDltU2VOL3MyMDdZeGhHUURKb3FmSjFzc0t0cmk1R3R5RkdNY2hFd2ZmckNBdE1Pd0VnUVFSQmdEQ0VzRzByTlc2WjhnK2t3UHVvY0hIc3dQNTlhOUtWYm1WTmlTWXQzRW9ZZ0p4bDRDUFNFUDlQTnBzVHl2ZGQ1c0JTTEIzYzZ1eUdXN3MrV28vYkMrT21WV1FPdmwrdkdKcXp1dzFEdXIyOW1jT0M4Q2ZRNmdGcUdaSGFPTmx3RWpJNjBETXlMR3RmU0tmVDc3UnRPNk44N1JxQ3JOV3ZYRjYyQytIb2hGMjNKR1FGTENnbklJUm8rTDZ5NnczbjdHSzE4WTJTTWZBbmMvUHpHMHBNTm95RUhENTRFeGlRUTdUd0ZXanZQa09JRVNFTTBUNWpaVDJTek9FT0Nka0VyQm5uYXMwTXJYWEQ4L3hUeFVydDgwWHUrUXNBS0pZV05vU1liQWdKR1J3Y0FCVW5SZ2w0anhqb2U3Y3daQ2ErMmVxOVV0M2NOTXI0TnNTNDJZRG8wS2pYTWNiTWdnQVlRdGhrMGNIK25zeEgzT0xDY3dCT0Zwamo1YUh4NVZ0RlF2SitjY0F3eEQwcFUzNmN3SG1BUkJ6dFVhdUZYWTF3ZE1LMkQrSG9oRzA5a2JoV0dCR0ZEeHBCQ0pGTHA2eGpQZW5VUTdacEhoeEpVMnhrcmtZMmhJUVFjTGRoR0EvbGU3TEhoSkNOOFBrSnQ3Vm90WUNyRVk1TzJQWWhISjB3YmxyRjdVQWtOaEFMaUdQUWxtQUdneXI5UFpuZnQwejViZ0wyWUFQa3FxbjFXSzk4KzBCZi9yZjc4N25mRUVMVXdoRU9lYlZ4MzQ1c081RmduVE9rYk9SUzRzOE9qUFQ4ODJOdnVPT3FsWEROQ3BoMHd6ZnZIeDNydC9uM0JQdnZEUGYwc2FQZm1NTW5LTUVlMTgyNGlaci9Wc0pDbkVTMFpxa1pYVGZkU1Z1NmE3M0hFcXo1ZllrN2U0MWdpWG9UMmxlV2FWbndsZjlBOGRXVG45aTNkelE1aGE2cmZ1SWt0aTRTc25mM0xzR0EyQ1dyLzlSTXArOFRRZ3g1U3NIM2xKQ1dxZU1nMXRmd0hBZUdZY0F3akxqYklzekVXbTY2OUpyV1lhVDROK1Y1MEw0UElRU2thUUlBdFBMaCt3cSt6MGlsVEpBSUt6ZnhnT3lRa09XeHFIN0R0aE5FcEUzTEhNdmw2TjMxd3N4VEFMNEJySStFckd0QzZ0Nk16QUhZdjNjazgzM1RsRU9Fb0o5UENCSysxa0hVeDBHbURTbWhmUis2TFIvdGMrdzZqWTRrRzdtcEs2MVkyMFVRd2dBSkE0Q0dVaXEyZkVJWUVNS0VVdldXNjdxNXgwcFkzQTNUMWgveldzUGEya3NKWWNEWFhMb3lVL3pKNk9FakgyVkcrY2NuWGx6empnenJJaUh3L1ZGby83Y3ptZlNZOXJVd0RFTVBEZzJLbzdmZm9TMVRoazhLbzY5L0FQZTk0ejNZUHo0TzB6VEJvWEsyMjc2cklTSFJ1UnprRDJQakIvR210NzRkdDk1MkIzeWxvSDBmQTRORHVQTU45K0M5SC93MTVITDVGa3ZjelQxdVZCS1N4TkFNb1RRQUVTeFU5UE85UGVZSG1ma1lBWG1zUTliY0VYM3NqaU5qd2kxOVNLamFmMkFXYmk3WFk3M3IvUi9FQTMvL0grTElIVy9FVnovL0dYemxyLzRqQmdhSDhNRUhIOEp2L2U0bjhPd1REK096Ly9wUDhjcnBrOUFNaURVU0ZBWmlkMGx0R0JGQkdBWVd5d3U0Nis0MzRjTWYvWDI4L2YwZndwWEpDWHo4TnorQVNyV0tCLy9KUDhNLy9yMC9SRS9mQVA3VkgzME14My80TUVxbFl1Q2l3L0x2aklTc0hRT2dwWlNZdlRJcnREQit0U3I3SDdrd1BidW05U1ZyaWdHSEIvcXNJYXE4TDJXWkgrdnQ3VkdPMDVCT293YmZWNUNtQlRObG82OS9BTkFTWUFPbWFRQUE4djJEU0djeWdOWndIUWZTa09CRTM5clZDSUZnR0FicVZSYzlQWDFJWjNNZ0lralRoSlFHdE5ZUWhvU1pTZ01BSEtjQnJmMzQyamdmblI2S3JqQ0tUVHJIZi9EYXg4SjRVUG0rN2gvb1I4MXhIeFJlcFFMZ1VTUmtRMGRDeHZyTnU5R3czbUVJT2dJaWJSaUdIQmdhUnYvZ0VPeDBCc0l3a012MzR1Z2RkNkMzdngrRHc2TUFnSFMyQjRkdVBncG9odXQ1TUF4ai9ZeTRUUWdFWVFnc2xDbzRkT3R0Nk8wYmdCQUNxWFFHdDcvK0hwUVdTaGpadlFkUjdhVXpXVEFEcklNNmllT2JIUkt5Wml6NHpEQk1xVXlsN21QZ3BWdjJEcHg2K1ZKaHF2bnp5aVNrYXdYY1A5U1RHOHFLWHpGVDV0MVNDTnYzZmRlMmJiemgyRnR4NUk2N2tlOGJBQUNNN042SFgzcmdBMGhuYzloLzhHWUFRS2FuQjI5ODZ6dHgrT2dkTFYwelZ5MlJNZ2dCeDJsZzk5NzlHQnJkRFdFWXNMTTllT2V2L0JvYTlSckdiejZLcU5adXVmME5PUFhpTCtDNkxqelA3UkIvUmc0bkNzQlh3eWkyQ0p3STNtOEVMRnpUSTN4ZnU5SXd4bjJOdC9tMStxbGR3NFBmdURJNzM5V1UvcTVqd1AzRFBVY0dqY1lYVTJuN0h0TktRU2xQamUwWmsvL3lNMS9BN1c4NDFsVWE2eFdPQzhzdHNkaDZzZi95K1grUGIzM3R5M2p4K1JQSTVYcVc5Rkh1eElCcnc1amhTaW10eFhLOVhDeFdmbERMRFR4MFpYYStLMGE4cWdMbTh6MkNHT2oxS2wvZnQyL3dmc09nUGwvNVdnaVNKQVRlZU0rOXVQT054ekIrODYxSXA3UHdmUVd0dzhZbUFsaWp0MzhJTngxNUhYTDVQbWl0b1ZTckcrNXFXbjVrZFloQkVOQytoZ2o3RnJWV3VQREthYnowODU5aTl2SWwrTDVDdm04QSt3NGVodklVUUVDd2V4dmorV2VmUXFXOGdHcGxFVk5UbC9ETVU4ZlJrOCtETlMvSno0NENkb2RSc0NlTkFraG81b201aXZOdlg1NnUvbnQwSWFzcTRONCtPd2RnZkt6ZmZsd2FJa05FRmhEc0pNOE1wTk5wNUhyeVNHZXlNQXlKd0wySENrVVVkSzVENE5qOTc4Ujk3MzQvYnIvclRUQlRkdEJaYkloRXcwYWV1U1hhaUlVVHBXZGZnNGpndWc2bUxwekRFOS83SC9qeFl3K2p2RkNDMjJpQW1TRk5FK2xzRnF3anBRclNXQ2pPZzVteGYvd203QnJkamVucHkzam1xZU5JcFd3SUlWb3JPcmFjemZ0M3dyYVBLbXdORnRhSkpoTEM5LzFHc2JBd3lVTTN2UkZBN2RRcnI2NDRmM0RGelluNiszckZXTVlZSmVDaGNIOCtIV1dDR1JyTW9scXBvRnFwQkprZ1dyckFqUWpzKzZqWEtpZ1Y1MUdZdllLN2p0MlBnZUZkU01UdjRha2l0REFVNVNkaGxRTHJ3NXBCUXFCV1djUkxQMzhXUDNuOFlmems4WWR4L3R6WllGc3lNQWdVeGlnQ2pHYk1TUnhzVkE0QWhtRkFFR0Y0ZUFTM0hMa2RseTlOd25VYXNWVnRkY3ZOeW0rTllZUFBGTjgxT0FaWDNEaFlXRXNDWUUxRVZqYWJQancvZi9FWWdCTUFDc3ZvSG9CVlNNaEFSdGlHb0lNRzhXOXhxQ0VVTlFJZ1NBZ1l3Z0RBYU5lN3BKQ1V1SGorSEJaS1JjeE1UYUpScmVMTjczby84cjM5a0ZZd2xOaTVjNWhiUGdmL05KVHI0ZlFMUDhPajMvbnZlT0tSNzJKdWJoYW1hU0hhSFQrK05sVENSQ0l3cFlUdis1aWJtNFhqT0RoTWhLTzMzd24yTldabXB1RTRqYVU5LzhuSGhLSUdhS1lKRUNoNjh0cVVObFRiMXIvVWVsNm5hN3RKYnkzWFhsc3MzZzRPUkVBMmwwSGRLMytZUVZQNzk0NldMazVkYVdHKzBWZ3dNK3VXa1pCMnlpeEFveHJpTmtIWUR5QjRWMEJZZnkzZEVHSDFMUGVQbVdHbFVpaVhGL0QwOGNmd21mLzMvOFNQSC80T3lndkZ3QklKQVdZTjV1aUtNS01KQXFHMURseXJOREYzWlFwZis4Sm44ZkMzL2p0bVoyWmdwek9CVVdJR2E5MGNjWWthT2xaR2dxOTFuUGRTcVlpbmZ2d0VmT1hoOVhmZmc1c09IZ2FZQTNZc2tvcUxlRWdQWVhJUkZwM0FZVFRlY3RGeTBuWmVwMnU3UzYvN2E2OHR4bEd6Q1FEQzkzMmR6NlIrSjV0T2pSTmd0ZXNWTStzSVd6WUc3TWxteFhqVy9WM1RrbitVNitrNXpMNGYzS2pUYTZxNmtDUWJWWjRIejNWeC96dmVqUWQrNHlHODlaY2VRSzV2QU5yWGdZV0pHaHNJM3UwUmZxL1hxcmd5ZVI3LysrOThHRk5UbCtEN1BxUnBRck9HYUxPZzNSSUpCcUZSWGNUclhuODM5dDkwRUFUZ2hlZE80TnpFT2RqcGRJdUY3M1NQSkFrSjBrNTQ2QkQzbFI5T3hnaXZTNXkvVW9UVnJEdkE5MzBRQ1FqUlhOWWwxcGplNW1BRUVMVG5PRUlKNjYrME1MOXc0dFVyVDJBWldkWUY3eC9KSDA3NWxkc05nYkZRVzhWeVhYanQzUjZSaTJsM3E5Rm5hWm9nSWZDTFh6eUhTcldLc3krZndudC85VUVjT25ybmtuT0pDTDduWWVyQ09mejhwei9HLy96dTEzRjUraEpBZ0NFTk1PdUUrVThTaE9iMTdWaFNDQXc3azhYRXViTllYQ3hqZFBkdTNIN242NUhweVdQeTRnUWE5WG80a1VHMEtWOHp2YVFLRWdVemNnUUZ1Q0VsZW5KWjFPbzFSRDZoMVpaRXJqVVJaN2FwSUlHUnkyWVF2TjNKZ3lFb2lHZERTOURwMnEzQW9xNUNBb1JwMjNBcTFmczliL0ZuTiszYjgreTVpMU1kaCtpV0pTSGxtZUtkNlVIN0ZzdVNObXV0S0g1dldoaDROMmxobUFFMHNlalEwdURKUmdwbXA5U3FWWng1K1NWVUs0c29seGZ3d1FjZnd2NUR0eUxiMHhzcmpoQUM1MTg5alNkLytIMDgrY1B2NC9USjU2RkNpOUpHUlpjU2hHV3dLTitSNGdvaDRMb081dWRtNFhrdW5JYUQvdjUrV0phSlVxR0FVcW1FUnFNZWVCclJuS2Flc0h2eHZiVHZZM1QzSG93ZnVnWEZ1VmtzTGk3ZzdqZS9GYk16MDNqaHVST29MSmFETHFpMld1bG9BWm1obVRFNE1JZzN2Zlh0V0NnV01IbGhBb1BEdTdCMzN6aWUrdEdqS0JVTGJWUGR1SVVZQmVsdERqR0pZMEVBQXFRdEtjZElHTGRyT0ljQlBJOE8wdEVDM252UDNiYlF6bHZBcVlOU1N1MjZMaWcwL2RITWt4YkZTMkxNQ1BycXdxY2tydFVrRm9DbWFjTHpQRnlZT0lzcmx5OUJTZ1B2L09VUDRmRFJPNUh2SHdTQVVQbStoOGUrOXkyOCtQTVRNRXdUVXNxWVpMUzNYQXRCNkJJTFlrc0pwUlRtWm1kUm1KL0hMYmNleGVEUUVOTHBES3hVQ3FWU0NmVmFGYjZ2d2F4YlFnTkVkY0FNVDNtNCs4MXZ4YjN2ZUMvT25Id2VreE5uOE40UFBZanB5UXVZdlRJTlpnM1R0RHBhNDNaaFpuaWVoL0dEaC9DZUQvdzZybHkraEplZVA0SHhtNC9pcm1OdnhjeVZ5M2p4NTM4SHA5RUlIc2ptaGVzbU9sZURJWUg1V3V1VW5iTFo5Vy96eW8xajQvdkhYcGk0TU5ueXJoQmU5ajBoaEpGOGp1NFhwTWExOWwwUnJ1dWw1cTJTYmRsNnBOWmZsN3JzeUZRSGltZ1lRUlljMThOLytldlBvVEI3QlIvNmh4L0ZtOS81UGhBUi91YXpuOFpUeHg5RnNUQVBLNTJPQ3RmTVE0SU1NRGVWYWowWUVVRktDVjlydlBqQzh4Z2FHc0tCOFp0dzY1SGJvSlRDNlZNbnNWQXNvbHhlZ091NXNLd1VVaWs3TGlOckJtc2ZIL3p3UDhITnQ3OGVBMFBEMkxWN0QyNjY5WFVZR0J6QkhYZjlIWGJ0R29WbHBjSXloSTNHeldQVXNVRVEwS3poTk9xNDU5NzdjZlByM29DOUJ3NWhkTzgrN0wzcFp0eDA4MUc4NjVjL2lHcWxqT2RQL0JRcDJ3NzdZV1AzazJ6WjhGbmRSSXdZaHJTZ0t0NlJScm4yTGlNNzhOY0EzTEN1Vng0TG5uN2w1NysrZXpBL0pJVFFudklSdndSbUEwWEVEUi8yeTBrRHJzdVlQSDhPaGJtWitMeVo2VXVvbEJlZ1BBOW0ySER0WkdBamhabGhDQUd5TEJTTFJSUUtCYVJzRzhQREk3ajdqY2RRS2hiZ09BM1U2blhNemN4ZzR0eXJnU1VVQXFsVUNtUDc5cU04UDRNTFowNWhaUGRlakI4K2dyNytRWXpzM290LzhXZC9zYTQ4YWExd1pmSUNwRFF3ZnZoV3NLOXg3cVVYc1cvL09ONzN3SWN3UExJTHh4OS9GRzZqQVRPVkNzcXhrWld5RGlGQUtsOVZwUFJ6ZzRQeVNHNTA2RFlBejdXZjE2S0FnLzI5QW1CeFUwL3E0eUo0OFo5c3QyRHRmV1R0MkxJa1pEbXNKUTBzbWJxL1VGNkE4djM0OUxVU2pyVmljVjRBUk8rdTlwWEM3TXdWUFBySTk5SGIxNGYrL242azB4bnNHaG5CN2oxN0FDSlVGc3RZS0JaUXI5Znh1Yzk4Q3Rsc0R0bGNEM0w1WHVUN0JuSHdsaU80ODU2M1lNLyttNURKNWVHSHl3WTYxV1ZVUHVVNktNeE00Ny8rOVYvZzh1UUZPUFY2Uys5QXVWU0FuVTZqcjM4SUgvalFiK0N4aDcrRFdyMGV4N1Z4bXZGeGs0bUo3MXVtYVFvaU1YVHhwUmNleEdvS21JSm5BUmlRMGpnY05VcFlLeTBLMDBJNHVpVWhLMkRSUFFLWDFCcFhLVTkxdEhiZEVvNjFZcEdDSjhzZnhXTDFXZzFLZWFqVnFyQlROaXpUUk4vQUVFZ1FiRHNOYTJRWElBeDRqZ093Um1WeEFaWEZCWlRtNXpBL1BZbEdkUkd2UDNZL0RoMjlBNWFkNlhpZndJMFJ5cVVDSmw1NUNULzU0ZmZ4UDcvekRWU3JGZmpLYjhtejU3bklaTElZR2QyRG13N2RnanZlY0E4dVRKeERZWDRXalhvZEpFVFFueG5mWjNPSkNaZ0ZrUkNHZ2FHK25QbkFZRi9QL3cxQXo1Y1dPN3ZnZ1o1VURzQXhRYzNPMm9oa0pEOWZQUWxaQVVOVEw3WDI0Nkd6bHNBei9MNGV3ckZXTElveGlRZ3AyNGJqT0toV2cyMlViVHVOeFVvVndoRElwTlBvN2UxRmIvOEF0TmF3VWluVTYzWFVxMVVvNVdMcS9CVTQ5VHBjeDRGU0h2WWZPb0xlZ2FIV2JpcXR3U0FzbE9aeCt2a1RlUEtIMzhjajMvNXZtSm1kZ1dHWVlUczB6eGZDUUtsVVFyVmFRYTFXeFJ2ZjlCYUFHU25Md3N6c0ZkU3FsV0Rvc3NXT2JCWXhJUkJCaHA0bWswMmJkK1daUmdBVWlDaU9CVnNVTUo5SmpRTDRLQ21uQ1Nhc3hVYVNrSTRZeGJVRVpnM2xPUEE4SnpvanpNckdFSTV1TVNRd3pRekRNRUlXRHZpK3h0enNGVEFCaGpCZ1NBbERHa2pXbGtFQzZYUWFmUVA5bUx4NEhsT1RGL0RDaVdmdy9yLzNXM2pmci84bUFJU0x0cHBNL0dkUFBvWnZmKzFMZVBwSGo4SDNmV1N5UFloNkQySzdIZWJOTUZKZzFqaDM3bFdVU3lXODVXM3Z3T2llWTVpK2ZBblAvdVE0R2cwSFZoZ1hodVlpL254dGlRbTNlRGhtaG1tSXV4aDRocG5qZHh2SEN0amZrNU83cmVxUUlOdy9ORElTbXZ1bDhkNjFscWg3eFhNY3pGNitpSHExRWlwZU1KMXFLeVVpUDgzR0Z4QWlGVWM5aEdBSmFGSjhBQTNYd1h4aFBzYk9uWi9BRXo5OEJFLy82R0g4dlgvME1SdzZla2N3eERnemkzL3pMLzhRVC8zb01aUVhTakRORk14d1ZXSDc2QW9RR2VpZ2pUTHBES3IxR3I3MzdXOWc3NzRET0h6TEVYem8xeDdFczg4K2pjbUxGK0M2THFTVUVJSmEwdGdNRVVRZ0tkSEQrZzhZK0dNQVN4WHc1b1A3QnJ6aTFIN2RXTXlIczE0Nk10OE5KeUZKckRXRVJQVFVKOUdOSkJ3YmhYVUt3SmMwUUtLZnpqQWtSSXJ3eUhmL0ZybjhBSWdFZHU4Yng5OGRmeFNQUGZ3b21EMVlscDJJaFJOMTNTSHdUOTdIdEN6TXpjNmdWcTFpZUhnRVkvdjJZOWV1VVZ5WnZvenA2Y3RvMU90Z2hLTlJiYjBKMTRxWWdBaUdFUEFXeXJmNW9MN2hnVjQ1VzFoUVFFSUJlMnk1cDVITjNsNVhOY25NTGdBTDNEYkw1UnFSa0JZc0pBSWtDSmFWZ3BCR0VGYWdWYTRWQ1ZremxoaDFXQ2tvcCtpODBKb2Iwc0RjekF5bUxrNWdvVlRBd1BBb3BzNmZRN0V3aTN4dkhsSW0xczJzY2crMG5DZWdmSVZ5ZVFHTzQ0QUp5T1Z5Nk8zcmcyV2xzRmd1WTZHOGdFYWpIblNtQ3dGaENDVGp1WTBtSzJHaUd1d1BXWGJQbmtON3gvb1FXa0VKQUVNRC9lTFcwZDR4MW56RVN0bnhKTTVJR2VKR3g3VW5JZEZNYW1GSXBIUDV3QklrRkNDV1RTSWhxMkp4d04xZG9CNlVJL2d1VFFGUGVWQ2VCK1U1S0JibVlKb0dSTHZ2V2UwZXNRY0pRd01SS0crOVhzUFpWOCtncjY4UFEwTWo2T3Z0UXo3Zmk5UzhqY0w4SEJ6SGdkWTZuT2dRV1Z0cUlTdnhYMXE5YkN0aHpLd05LUzNUdGc5SzhrZUlxSkFrSVdKeTR2eFFMbXVQN2Q0OWdIcXRIdlM1dGJuYVRTRWhJZU9VMGtSUDN5QXl1V0NaSllmVC9EZWJoS3lHUmVPdjNRYnE4U2NPZG5Id2xRZmx1WERxTmN4T1g0SXdqTGcyV3gxc2QvZUk0MUVpV0pZRnJSbkZRZ0hGUWdFOStUeHV2ZlUyak8zYmg2R2hZWlFYRmpBM040dkwwNWRnVytubWNHdXlUWm9aWHJWc3kySUVzR1psMjJsSmhqaktibjBQTTU4RVFndDQ0TUMrZk8zQzRsRXA5SjNhWjBXQ3hLWkdxVWxKUE1rQXdyVWFRS3ZhWC8vQ21pRU5BNlc1R1N3VVp1SHUzUWZUdXFxZGpGc2s2RkFJWWxWVFNqQ0FhcVdDNHo5K0RObDBEaU83UnBIdnllR204WEhjZGZjOWVQWGxVNWlibjRQckJtdUpsQmZNcEdkaUdHU0FEQkdubWZTTWdjMElDV0pJMEZxaWxQQWFaaGFaWEI2WEw4OGZxVlFiZXdiNjg2SlFMQWNXc0RlYjZWTXBNeS9ZaDJiZEFIT21tWHhieFYxekVySzBDeVM4U3d1KzNVbklpa0Y1b2p4aEV5WnFPbW56Tm9vTUJDS0VRRGFkQmNDWW5ibUNVckVBMjA0aGZlVUtzdGtNRGg0OEJOZDFVYWxVVUtsVTRIa2VBTUR6UEhpZTIxelFIN3VyWUVUR1Z4NkVZY1RUMXFTVWJTVUJRQkNzdFpaQ2oyZHNzWC80d0hnR1FFVUN3S1d6cit6SlNYUEFORXdSYnVnVDdXK1dNTW5ZSEJJUzVyWlpVSFEwZnRjYkNVbGlVZG00dldCdDliQ2haQ0I4dUExRHdOYzYyRGRIKy9BOEY3VjZIYTdUZzNRNkRkTTAwWlBMWVdSa0Y2UmxvYnE0aUdLeGdFcGxFWVloUVVUd2ZSVXM3Q2VDYVZwSVozTndHblVvejRYbmVYQWFUakltQzQwTWhHYmRrSkx5WkpqRGdsVWZnSW9jR2h3VUdiYzRuaC9NRDZWU0ZqeWxoQkZQdGQxOEV0S3MvTFlKQisxS2VKMlNrRVJRM2hZdmRTampHdExyRGd0bm1DT1kvQkZrbitHNUx1WUw4MkN0TVRxNkczdHZQWXFqcjdzVHVYd3ZwaWN2WW1wcUVvdmxoV0RiazdESVJNSDJKOWxjSGlONzk2RmNuRWRwZmc2WEwxM0FpNy80T2N4d2F6eUFvMFh0UXZsS1dTblRWcHI2cWd1bElRQ1RFZ0RTS1dNL0VROHhHR0tGTjFadUNnbEpva1JOakJNWXJsOFMwalNneThXMExjRlRkK210QTRzY3RDQUtWanYvMG1FQUFCbkNTVVJCVkRNU3dmRmM5QTBPNC9WdnZoL3YrZUNEQUlDTDUxN0d6S1VMY09vMTlBOE13blVhNkIvWmpYei9JSEw1UG1SeVBSZ1kyUTJ2VWNQa3hLdDQ0Z2Zmd1ltZlBnM0xDa1pvb3ZzeUFPMnpzTzBNYWcwdlAzL3A4Z2dBeVA3K1BtbVZTMjhtN1I4bVFJRFd2bW5samx5L3drRDhVSkF3TUhuK0hIN3dqZitLVjE3OEdlNTgwMXR3N3p0K0JYZmQrM2FRRUdqVTZoQkNRRWdEcG1uQ1Z6NUtoUm44eFNmL0R6QXo1dWRtTVBIcUswalpOalFuNW13R0JrWUxRR3J0QzhEZjA1czNiK3Z2NzM5VXBreVpNNlhaUjBKSVpsWllaYW5tWm95RXhPbEVOWVNsK0d1SGhDeXA0Y1NualNJaEsrY2xLb3VVRW83VHdNV0xFN2h5WlFvL2UvYW5lT1pIVCtCdDcvMEFqcjM5bHpBNFBBcW13R3FXU3dXOC9NSnorTjdYL3pPZVB2NFlCQkdVcitDR08rSkcvQ0VoQXN3aVdEN01JNUwwZ1d3MkExbWNtY3FQOVZpMkVFTG9hT1pFc2hzRVcwRkNvcVNYYzFPdlZSTFNYdjZOSFpGWUVRc05nZFlNcCtHZ1ZxK0JDd1ZVRmhkUnJWWlFLc3poelcvN0pSeSsvZldZdWpDQjU1NytFWjU2L0FjNDhaUGpLSVRqM0FRQ2lXQVFBUzM2RWQ0akNPODBNUTlJNHZHZVhFNUs3VFZHcE95UlJCQWN2SVFtVWNHdGtjb09DZW1BWFZja1pHVXNVQ0FHazRDQUFKa0NsY1V5VGp6ekpPYXVYRWE5c29qUnNmMzQrVTkvakI5ODgydDQ5cW5Ib1h3ZndlaFp1Sm9qMFc3TkpVclJQVWd5c3lKQ1RrcGpwTzdVYlptMXJUSE5iQnZVaVJ4MHJwOGRFdExFcmxjU3NqSVdWTGZXR25ZNkRkZDFjUGJWVjFENm15L2c3bU52d1JQZit4ODQrZk8vUTczZVFFOXZIc3BMek5aWk1jOE1abWhoU0tSc1E4d3NsalBTa3VJZ0VVVXJhNjdKS3psMzVQb1Vva0FKQlFsSXk0Q1FKb3F6TS9CY0I0YVVNQzBMMnRlSTdNUnlVVzB6UGRKYXN4Q0NoR2F5dkVaNVNGaFMzQTRnZ3poSVhGazZ4V3N0VTNwQ0N4RUg2TXhkWThrU1JPZTBseXJDazFPVnRoSURvb0MrZVZ3Tmk3NHRVOE1kejEvclBUWUthd3BCRUVGSTBicHR5ZHJTaTdjSFoyWXJrN0pHcFNBYUlNQnF1ZVVPQ2VrZWU2MlFrSld3Ukp6VmFZSUtkMWtIWVdRb0FBWVJwR0hRZ0pRQ295QkVXMVNoNVlnZEVuSWprWkRsc0xDZ3dYL2M1dkhXV2dkUnFNY2tCRkZPcGt6akh1WXc5bXN4ZDB0bGg0VGNLQ1NrRlV1KzhEUWFuRjNTeTlkdGVvSEYwZ2hlWm1sTEpGL2JzWUx5N2NpT2JJUVFzUWlmcTc1c1NyNGozS01qL0hVMUdvTWRFbktqa1pDV1BET2cyVWZnckZxdFZmZWtKdmw3T0NNNjdLeE91THNkRXRJMWRnT1FrRWdFQ2FUc0RKSXJGTmRDUXVJaWhseUJnMWNhb2VYSlJuUkM5TEd0Zm5aSXlJMUhRaUwxTVV3VCtZRWhpTVFiRG5pTmRSRHJTaWd5QXJ1UkhSSnlZNUtRME1yQXRGSVkyYk12ZUFPcVRwNnpqdlRDa3JiT2ZJbHFaeG1YaUxEQ0tYbE9HNVl3eklsamwxalNPOGRwdGhXenhTcUc5OXhLak5yTGxYeGlsc1BDSkRxNjRIYXIzMDE2MXhwclpxZGRNeUlYM0cxNkhGOFU2SXBzaS9KYTZpSzJab25LNzJRdGsxaVFJWVNlSHpHRjd3WmpXbnFmdUpGYUR5RWVtbjd3Rm1MTlNnNCt0VDVjbmJDa0VyYlhJM0VUN0RhOXpjQ2lETWZkeWMxTWcrSjN3M1NaSGpmVGtIRlMzRm9qQk1SYW1xeW42S2xmRG9zZTRzZ1d4aXJWQmRaUythRUZqRFBlZW9pdWFEUFlXNEhGanhDV0J1K2RzV1laMFNMTTNQb1FBbDJsdHhsWWxPR2xWcnRKTkxwSkwvaWg2UzFsN1ByYUhzZm90dFJhKzJpbjMrMVliQUdad21Pb1lGMWdVZVV6dUNzTHVOVGdid1VXVlhKVUU4MG5mWGtzL0xhS0Jldyt2V3VMZGJLQXlVSkVGckNiOUJLS3FNRU1BVkN6SmxvVURVdXdJSUcyRExSaExSWXcxTzF1c2FqeUNVMEczTWtDTnRVVThaTzBkVmpUellTUFRoZFl4NnBkWWdHN1QrL2FZcDBzWU5NaDhCclRndzcvQWFDR1lJYkxuRXh4UjNaa1U2UmM5L3luaGVQNXh4bGM0alozRUlRM3RNUlBkRU5DQXFOS3dYRU5XTGNraE9KUFRmZTNkUmpIR0lmZlY4T2FaVnhhajUxSXlIcnVzZEZZbEdIaXlPNjN1K1V1MDJQbzhGTE5ERmNvelZQTTRlN2xSTTMzZVFGWTB2MEF0UFNEZGNKaTE4cmM2cnE2d05wSkNMQ3lDd1pDTXJDbFdLdEN0cnV1VGxpempCM3FzUU1KV2M4OU5ocUxNc3h4enBEQTFwSmVMTXJYUENkOTVoSUFoZGd2STFITjJDRWhxMkxOU2w0dEFHK3Z2ZXVSaENUSDhhUDFROTJTRUdaSzZwanJLajBuWE1XbkFTeDVqVkpjRFRza1pCV3M2V2JDUjZjTHJHUFZYaGNreFBkYytKNFhMMEphQ3drSmh1VmlHNnFVNXBMMGZEN0x6STBRMTFoaFo0UWQyWkhKOCtjd1B6OEwxM01oREtQVmJhNGlEQklraEhLZEJseW40ZTRldjIxS1ZCdk9sQkRScnVYSms0RWRFdElOeGpIR1dDVUFUN296ck82Q3UwM3ZXbU9SSFF2ZVFwK0Q3L3Z3bFFxMkhsNURlZ0EwaFR0dmFNME4xL05jQWNPYTg1Vnl0ZGFhZGtqSURnbnBnRVZPc1Y1ZHhFOS8vQmhLeFdKejJzQWEwZ05ESTFoNVdkS002VWFqb1VUZjhHalpkZDJhMWxxUklOSDAybUVsdEZ0QUxLVWhTU3kyYkFnRDFEVmczWktRWnFUWWJOS3R3NXFWSEJ5NUN5eXEyN1o2WElhRXJPOGVHNGRGcjZvdGw0cDQrRHRmUjZsWVFFQkkwSFY2b1RIVFFadUtPYy9IMlZxOW9ZWGphZGR4dlNtdHVTYUlKRUFxMGQ1TEh0TWRFbkxqa1pCb0dXYWpVY081TTZmaGVXNjRzVG02U2k4WTE0Y0dvQWlrTmROY3RlR2ZuNXFhVXVMY3VYTU5qOFhUTE1RWkJqUVlpb2wwaDBsN08zS2pTbVFNaEVUYXpzYlQ1THBWa2RCVkN4TGt1bTREd3NEazBONnhrMEM0RTBMRDlTY0pva0FnYUdaTjBRNEpPeVNrQzR4ampOSHFrcGJEa2czVFhvL2JrWVRFK1FPREU3eDNMZWtCZ0pTbXJOZGROR3B1S2RzN09BT0VFMUx0WE4rVTczc0Z4L0VoVFVzMy9SMjNaUUU3MDdHV1lCUlhOaUhxRThPS1dMT01hSkZ0T3gyTDJyREFvcTJodkF5QU5RbXlXSFBEOTFVSjBpb0JvYVhidGYvZ3RPZTZjMDZqb2FTVWdqbCtVOGdPQ1ZrVmExckRxQUhXUWtLaUdDbU9lYmNoQ2JscWpBRm1hQUlzRUVxK1Z2UEYwa0lOQ0JXd1dLNFVYRWZOYWswVklVUUdSRHArUEhkSXlDcFkwczJzaDRRd3ROYlFPcWp5N1VoQ3JoNExpaW5JZ0t2RWhXcU5wMTU4NlhSVEFWODRlYXBTZC9RWnBjVXBJa0JyWGtzSDk0NnNTNEtIelRBTVpESlo1SHJ5c0t6bXh0NnZKU0VpQ0NGMHBWSkc3MkR2QzNzUDdiOFEvUll2U3RxMWIyeWF0SHVtV2xtOHp6UlRhS21FNUdTRW5UVWhiVmd6emdrK3hjSExzaGhBME5xSGxBWm1aMmJ3dlcvOU56enoxQk00OWNMenNDd3JMbVczNlcxM0RDQ1FJV1I5b1FhRGpkT0d6RXlGSnpRVjBNcGtwOTNGeGl0dXZZRlVLaTIwOXJGRFFyckIxazVDb3ZEQ0VBYXExUXBlK3NWemtGS2kwYWpINytJSSs4NjZTbSs3WTJHRENpSnFhS1VtZkorV3ZxNjF1RmliTWVyMU04VHNBaHkvTTJwbk90WnFXRlR4VVUwMG4vN2xzTGcyS1hnTFViMWVCMnNOYVpyQkJ0OHROYnQ2ZXRzZFl3YlkxOEpNcFNjMU1EVTVYNHhuWDhVelg2Ym15NlcwYlY3STVQTFQydmV4UTBLNnhkWWVsQk1GZnhqQjY3TnMyMFk2azRFUnZ0TXRLRGgxbmQ3Mnh6U1U4cERxNlgvQzd1a3ZYSmt0cUtpWXNRSVdpeVh0d3B4eUlEK3ZsQmU3MVowUmtXc25SSUVyMTh3SWgwbGo3RFVsSEhpTHlkblN2NXVjTFUwbWY0b1ZrSWlFcTFCd0ZIN1FmTnFYeXM1SVNEdkdNUlpHZUR0WXJEMUIrS2FaNGZzK21Jd0prTkZBUW1JRlpHWmRWMmpVRlY1V3lxOGc3SXh1VjhTZDZWanRXS3RDSnQzUGpZeUZiYWdBMGdES3RZYjNCTXhzQlZhdXBZc3ZKaUZFSklhSGh4V0FVbGFvRTVabDNVVkFqb094NGVaNTZHQUJFMWhneWJCRFFtNXdMR3hpeGF5bDcrdVpVc1gvNnVUTXhUajJpNlRGQXM3TXpPaVptUms5WC9YK25JUXhHU1RBYnZLQ0hSSnk5U1RrUnNDSW9Na3c0SG1lZHVxMXd0REJtNytMRHRKeC9VZmZua1BIcDZjS2M3V3FDOHV5TE1hYXB2N3Z5STVBYXlocFNOdjM1Y1RNdlAvWStVdlRGenFkMTBKQ0VzZUtuYzgrSmkxNXh2ZDlnWENTYXZqN2trUjJTRWpUQW13M01yQmxKSVJJK01xRFlkS1pWTTcrY2FKZFc0eGVpd3NtSXNITSt1VHBNNjZaemp5dWZYWFNkUnBhaU9qTkpJeW1xVzNLRGdscEt1UjJJd09iaW5FVUFSSU1Rd2pIY2NwS3VhZGsybnErV0N6cFNNK1N1ck9jQlFUUy9jODdUdU9rNjNwbElwSk5IVmhLUXlpQnhaWU5oSjNwV0RjWUZuYXVCME1mTEJ6UE85dG9OSDR4WDBkTDMxOVNXaXhnOUE4QW5udng5QnlUY1pvTTgrWFkvS0JKRHBLeVEwSzJSK0MvTGJCdy9ZZnJPQ0JwLzBCaytwOHJsQmFXc045SVZudzU5YUpPUGRJSGJUdE8vVjVEV29xWVkwdlliZ1YzNU1ZV1RtaUVEcmI5cTBubzcwOVcvQmRXdW01NUZ4eEl5WE9jazR2VnhoT0dZVWlFYkRod244MGI3cENRcGdYWWJtUmdVd2hIVkRlQjkxVFNNTEJRY3o2MVdIY253SzA5S0YyUmtBZzdQN1BnK2t3WEZCdGZyRlZyMEF5QVNLKzBXRDEyclRzazVJYkJvdllLcHBGQjEycjFjdGxSMzZ3NDNzeHNvZGk2NlZYWEpDU1VucjAzei9Yc3ZmbWJ0V3A5a3BuZE1QeHNUdGtQczBMeFo0UVdqYkJEUW00TUxEUWdHZ0MwMXJYeVl2VlpaSWRQSWp1OFpOT3Jkb2xqd0hiTmpPVFo1MTV3QWN5OGJtL1BsNGpvSHpIektFQWFpVG1EWWQ5MytEbjRFNUNMMkg1MWhiV1RrTlVtcERJb3RwNWJod1Y1NU1ReFFHOGdqTFVtTXJSU1NuaWVOMW4yOEdlWGk5TXRJMmpMU2RjN1lkVms3NmV1VEJVbmFsVkhHb1poK2VHbWxqdXlJeVFNeFZwSkpsd1FWdXFSeXhYK1hyZlhydWlDaVVqRTN4a1ZNNXY1b3BEaXVQSThMWVFJOS9rQXNFTkNzQjNJd0daaXpaQXI4RlRLVjFDZWV0THg2YXVKTmx4aTROWkVRcEw5Z21jdlRDb2puWDdVVStwSngvV21oUkNTbzFnd0VROTJTemc2WVRzazVIckJ3cklIVGFlRUVNTFhlTVpWL2c4cnZqeVoxQisweVpwSlNQTDcrYm5xMldxdDhiaXIxRE5nTGJsNUR1TFA0Wi8xa3hER0VoSVNQWWhvdFlETjZ0bEtiUHVRZ2MzREVCa2REWkJXU3JtZXBtOVZYWDd5MVl0WHlsaURMRHNTa3NTano5VjZBK2pkL1lTVnNyL291VTdvUG9OdW1jaDJ4Wll0K05OcTdWYkJpQ20ycHMyZEFwYTNnQnhXeE5aaVRSY1ZIT21Hd0JEc3BndlRsRmFoVURqcjFDcVB6THZ5WmF4UjFyd2Q3NW56bHlvWHBoYWVmUFZTNVNPbU5BVUZNMlVVTSt2a0x2dnJFZzRXNlloa1RDbkVhMitOeEhVc0JOYk1nZkpwcmJGUUxJQjd4LzQrOVkwOVh5cFhsaDF5VzA1YVprUzN4NEdSKzAxYVFTSVN3eElGRUI2Wm5Tc2R6K1hzMTBsRDVBQUVNNmRqWlltNlZvSnYzU3hNTjZTQmhWSVJ6ejE5SE1wMUlBeUI4a0loNkpJSk4wbHNXdHBrZk1KYmlFWE91SFZrNExXSUFRQXpCSWhjN2Z2QzEzcGFwSHYvTTRCSllHbXZTRHVuNklTMTlBTjJJaUh0aVlibktXYWVQcGdYbjh0a3JEOWlRVWVFRU9ITHJ4RmFyS1pyUmZ3MWFzVE9tQkFHU3FVaVR2ejBTWng3OVRRRUNaUVhGaERGaE56V0h4ZVRBZDVLTEg2RTBONVg5cHJCR01rNFh3c2hoT2VxdVhyRGZjWWVIUHpLU3krZTY5amgzQTBKb1RqV1NwQ05kb3VYdEloSlJiM3B3RmhtRUF1Zk5LWHhJV2tZNHdqTWM1Z09CZi9INno4bzNINWpaVXd6dzFjS1d2c0FBTk5LTFIxclJtQ0pJaVlhcDdjVkdDVnpGWnpSbXRQWEJ0WWNmaVVGc0s3VjNlT0ZVdlhMRXhYK1Q3Z0tXUk1KYVpkejV5ZHJsMHJxMDc3bTd3WUtReTRITDcxQjBnSnkvSFYxakloZ0dCSlNtcENtaWRaS1NWd2IyYzRkRXJKSkdNQ01obWxLV2FsVUMvVjY5VHQrZnRlWGNKVnkxZThFbVM0M0xrek5MMzYyVkhIKzFOZmFKaElOeEVxNEhpR1FJQWhEUWdpalNVQjJtTWltUzBnNEFHWU5JcFd5YmN4Y21ZRW04NDh5ZTQvKzFjV3A3b2JiVnBMdVIwTGF6bXVUQ1UrcHYxMVlyUDBuQW1jQ1pTRWRiYXdRZWFuMWpJNUVrVWdjZTIwN2pHT013Kyt2QlF4QVJEamlzaXJsMlhXRlQ5UmQ5Uk1BbGRYMG9odU1tcjY5TmQ3ckpNc3haV2JXQjNxcEQ4Q2R3MzI1VDFwUzNpWUU1UWtRaWRUUmpDdldpZ0Z4WjNWeUt0aDJ3S2dadExjSDc5Y3YxdFlDekpvWmM2N3luencvVS80RE1LWm42dHl5dzhGNlpVMGpJU3RKbVhyTFplU1BGeGRyWDNhVmQ5YlgybzFpdXJBVVdNL29TRlExVGJ1ejNiQ21OUVMyd3lqRjFXUFI4Q2dCQURPMDVvS3IxTE5YaW90L09WUGppWTFTUHFDTDZWZ3JXY1NrbEJZV3dNeDZaSGo0L3pOcnhVTVoyK3F6TFd2Y01LVEx6SGJBSEJscm5hSVZnUXlLQS8vdGhiMTJMR0JTTktBTWtOTGF0K3VPOStSc3NmYVhrOVh1WjdsMEt4ditZc0taMlZubFp2ZitpL0pDNDg4WEZxcG5mZCt6aFRBYTBXdkFkcmpFOWhRQ3g1T01pVWdiWkNqbHUzYWhYUHViK1lYYXY1MnNjc2VkRGE1V05vU0VkTUFVRFBsZFgrT1RDd3UxTTc2dmJOM3NvVzY2TThJT0Nka21XRUE0RVBUTE1ndmZWM2FwM1BnYjVlc3ZNUERjT25SZ1k2ZGpKYkgyUk51eHN4UG5OUWJHSm4zR282Nm5QbDF2Tk01b3JSdGhNS3NaNGZLUzRPcldmalp1eGlBeEZqVTRZUnRpclFxWjdEL2I5aGczSTBBQUdreWF3VnByUFZkMzNHL1dHdDRYWE04L1ViZjZTMnZWZ1c2eHF4b0pXUTZMNU1EK2ZZS0lwRnk0K0svNmVyUHZ0a3p6b0NDUkNhTU9LN3crcUo2VlJrd1NEYjd0c01oc042czRxcm5yQW92WlBaRWlFSHp0RjF5bG5yMDhWL2tQbHlyWHh1MG1wYVViWnRXVDE2aUFrUXdORHNoZVh2amQvbHptSTJrN2RZeUJDclBPVUVpQ29uSGU4QzZJbnRobVpRRnRBN0xiQjd0T3UyRmlZUVl6M0ZUSzFrb3B1KzQ0MzdoU1hQekxDd3Q2d3dsSEo5a1VCUVNBZ2Y0K2tmVVg3czJuVXcvMTkyUitYMGpaMEw2eUFJaXdxMFl6czloUndHdVBVWFBNWGdPa1RWUEttU3N6cUN0OG91TGhtek0xbnNBbXliVWlJY3YxSDU3MGZQMzVZcVh4eDA2OVpqTWdFTXlzY2FPcFZoVDlDZjZQcTNCN0VJNU8yUFloRWl0aGtkMGpjTFMrMnlVaE5JTjFzVmlhTmxMWmh3d3o5VzB3cHRmVHR1dkYxanNkUzNTREpiOFhndDJSU2lNWk9rWHd5cG5obm4zMW12UExsbVh1dHl4VGFxMDFnd1VTcnJocGR4S0JQMjgzakJLTjNHcDF0aHNXVFRnU1FzQlhTaWhmenltbFR6cXUrNTNNM2tQZk00SEtLOCtmYk4yUWRBTUpSeWZzbXBLUWxlVFlHKzdZVTN6MTVDZHl1ZlM3TTVuVU9Gam5TWkFFbXRPNUloWGNOb1NqRTNhZGtKQ3duVFZBbWxsTDVmdVQ5YnI3VExuaWZNZkw3L3JTcFEyWVdMQWUyYlFZc0pQczI3dmI0c0tWQjJ5TGZyczNaM3l3SjkrbmxmSTF3QUlnc1JNRGJpREdVQWppUGF0VUxFQ2tlLysxc0hOZk9YVmg1cm5GU20zTGRzRGRVZ1dNNUsxMzN6NEU0SjdTeE1tLzdSL29oeUdsOG4xZk1UT0VJQXZScElibW55aERPd3JZaHNYQ0hBeW5rVkJFQkNHRVZFcTVoVUxoRFBlT1BRaGc4cVd6RjFmZE91TmF5NmFTa0JXd01vT2YwY0w0MVdyRC9ZLzFSdU1zYTIxSmFkak1ySmlEWVNJQ1Ivd0VTOG5BVm1IYmgzQkV1UXM3OGJVQXdmZVY3VFRxOW1LMWVtS3g0WDVTTS80WlZsakRzZG5ZaGszSHVob0xHTW4rMGVGTWxoZnZ0azE1dnlIRU83VFM5Mld5Vm9hQ0hWcWpYYm1pQnlXKzdvYWVqc1ZvZHVhSEs5YWlSbFpLUVFNWGxLZWVkSlgvdzVxSEorY2Q0K1hTWXZVcUpneHZyTFNzaW91T3k1R1FheTBYcG1kckFJN2ZzbmZnckw5WWY5bHZOQ3AyMnJ3YjBIdUl5SXFVcnNrN216MkdRRWdRTmgxTGRuTTBpZE9tWVJSRkpoeWhXbXZXV3V1YTUzbVRaS1llOFVUcXF6VkRubnoxOHN5YUZvMXZobXlMR0xDVDdCb2VGQUJrditIOHIrVFcvbmsya3o2Y3pXWGcrNzRPRlZGRUZkK1d5UnN1QmdRemlLQlpNd3dwUmExV0w1VVhxOCtXWFh6NjhqV2F4YkpSc20wVk1DbEhiem1VZCtZbmo5a1NIODVuek45aHpiQlNhUkNSOG4xZkE0QUl1M0EybmF4c2tnTEdFaXFiMW5BQkNNTXdKRE1MMTIwQW9GcTU1bjZxN1BqZlJIYm81RloxcmF4RjFyVXd2VDJSNWJBbG5ZN3J4Mm9BVGpCb1NySDRPb1I4c0ZLdDNHOUpjeXhscDJ6RGtGQytYMkh0aDBON2lOOTd5Z21IbWV4WDNEaXNNeG00Rmhnekt3QUtaR2pMTWpLK3IrQTRqYkxqZW1kSjJqOHd5UDgrZ3lZSW1FRmlZZGdHdDhXR1l0dUtoS3dtKy9lT0NnS3NRWnVQdVl1RnUxS3AxTzJHTkcvelhIM0VsSDdPTkUxSkpFVFFqOWlTY1Z6dkpDU3d1S1NadGZZOFR5dGZUa2lUemlqbG5tbzBHcjhRNmY3bnJsVFVDd0QwYktGMDNielphc3RHUXRhVjJjUTlidHEzSjVPQmM5aXJONDdWeXJWM0RRN0lJN2FkSGpJTVk0Z0ltZkQ4RnJhTWVNSURBamNLaENNY0lhbWh6UnNKNGNDVklsSzM1aW1rS1dUNnpCd3JQZ2NrbzZ4OVBkT28xd296QmYvUlZOWit5a3hienhmcW1KeGY0VlVJMjFtdWl4aHdKVGt3dGxlQVNPN2JQWHpieFpkZWVMQTNaejZRVFp0M01UTU1ROEl3QklpRUR2c1RsZFphZ0NDSklNREJhQXNGeXdYV1IycldZUUZqMG9Eb29RODMvQW4yMnRNa3lBS3owRm9McFFLOThuMGZ0YnIzUktucWYzWDQ0TTNmamQ2OUZyMkI2SHFWNjE0QjIyV3dyMGYyMnNhSU5PaXVIcFAvd0sxVmJnUDdRNFloTFR1ZFJqYmJnNkNYUWpkODMxZGEreEFrSklKNFdBVEhOU2psS2dvWVh3TFdnZklobW1XdVNKQXJwWlJFd2dKZ0djSkFwVkpHdlZZRGlHcG1LajFwOS9RZHZ6Uzc4TytZeElRdnM1V0xrNVBYcGFWYlRxNFhFcklXMFFBS0FKNWg0STgxcU0rMGUvWll0bjJRaERnNmRibHdSQnA2WEVyS1c1YTAwK2tNdEE2SU5JS3RhUlF6dE5ZTUlnUmowcUhQSldMQmlMYWdJMEhFSVEyaGFMdmlZSTRkUXlmSWlnWWdRRUlKSWdsaUFaQWtJdWs2amwwcFY2RTFOMENZOFpTWTdCM3FmVUd3Y1ZvcmRWWUQweHlVWlJKQXZMRHJXdFh4RGdsWlJkWlR5T0dCWG5ub3dGaWZKSDlFdS9VOUY4OWMySk5KaS8ycGxEbHNXbWFmWWNnOG9QZEE2eEdBQjRnb1p4aFNDeEgwTllZSmhvckZyWnNWaGlTa1RUUTZPQlhYZFRTQzJTaGxKcHBqcGpraGFMSmVjOHUrVWdWZnEvbGFuYWYySGo1d3dXY3g1Zm8wTnoxZnJGMlpMYnltTEY2N1hMY2taTDNZUUg5ZTNEUStuaEdzK3FxbDB0RGMxT1dSdnJ4NW15Ujl3Q0FlbDlJWXNlMk1JQ0VzWnJhSUlCSEVhZ0pBSDVydlRrNWEvZlp5bDBOTUFYQUpVTlZLMmRXYUd4bzA3Zm1ZcURYOGM0Tjc5NTNLOVE1TVExcWxZckZVZS9IVXkxcytPV0N6NVRVWEE2NUgrdnY3WlU4dUt6S1pqUFJkeDZwWHloblZxQXlsVSthb1lkQ0FJTW9SWUdkVDhoME1WaUZ4VHZRSVJpRWhBNkJHM2ZPZjFocXVyM25POC9XYzBsemFQWDdybE90NmJzTnBxRnE5b2FlbXBsN1RscTFiK2Y4QmliVitFeE9YZUt3QUFBQUFTVVZPUks1Q1lJST0iPjwvaW1hZ2U+Cjwvc3ZnPgo="/>
        <prop k="offset" v="0,0"/>
        <prop k="offset_map_unit_scale" v="3x:0,0,0,0,0,0"/>
        <prop k="offset_unit" v="MM"/>
        <prop k="outline_color" v="35,35,35,255"/>
        <prop k="outline_width" v="0"/>
        <prop k="outline_width_map_unit_scale" v="3x:0,0,0,0,0,0"/>
        <prop k="outline_width_unit" v="MM"/>
        <prop k="scale_method" v="diameter"/>
        <prop k="size" v="40"/>
        <prop k="size_map_unit_scale" v="3x:0,0,0,0,0,0"/>
        <prop k="size_unit" v="Pixel"/>
        <prop k="vertical_anchor_point" v="1"/>
        <data_defined_properties>
          <Option type="Map">
            <Option value="" type="QString" name="name"/>
            <Option name="properties"/>
            <Option value="collection" type="QString" name="type"/>
          </Option>
        </data_defined_properties>
      </layer>
      <layer class="SimpleMarker" pass="0" locked="0" enabled="1">
        <prop k="angle" v="0"/>
        <prop k="color" v="33,150,243,255"/>
        <prop k="horizontal_anchor_point" v="1"/>
        <prop k="joinstyle" v="bevel"/>
        <prop k="name" v="circle"/>
        <prop k="offset" v="0,0"/>
        <prop k="offset_map_unit_scale" v="3x:0,0,0,0,0,0"/>
        <prop k="offset_unit" v="MM"/>
        <prop k="outline_color" v="255,255,255,255"/>
        <prop k="outline_style" v="solid"/>
        <prop k="outline_width" v="0"/>
        <prop k="outline_width_map_unit_scale" v="3x:0,0,0,0,0,0"/>
        <prop k="outline_width_unit" v="MM"/>
        <prop k="scale_method" v="diameter"/>
        <prop k="size" v="25"/>
        <prop k="size_map_unit_scale" v="3x:0,0,0,0,0,0"/>
        <prop k="size_unit" v="Pixel"/>
        <prop k="vertical_anchor_point" v="1"/>
        <data_defined_properties>
          <Option type="Map">
            <Option value="" type="QString" name="name"/>
            <Option name="properties"/>
            <Option value="collection" type="QString" name="type"/>
          </Option>
        </data_defined_properties>
      </layer>
      <layer class="FontMarker" pass="0" locked="0" enabled="1">
        <prop k="angle" v="0"/>
        <prop k="chr" v="A"/>
        <prop k="color" v="255,255,254,255"/>
        <prop k="font" v="Arial"/>
        <prop k="horizontal_anchor_point" v="1"/>
        <prop k="joinstyle" v="miter"/>
        <prop k="offset" v="0,-0.40000000000000002"/>
        <prop k="offset_map_unit_scale" v="3x:0,0,0,0,0,0"/>
        <prop k="offset_unit" v="MM"/>
        <prop k="outline_color" v="255,255,255,255"/>
        <prop k="outline_width" v="0"/>
        <prop k="outline_width_map_unit_scale" v="3x:0,0,0,0,0,0"/>
        <prop k="outline_width_unit" v="MM"/>
        <prop k="size" v="11.8"/>
        <prop k="size_map_unit_scale" v="3x:0,0,0,0,0,0"/>
        <prop k="size_unit" v="Pixel"/>
        <prop k="vertical_anchor_point" v="1"/>
        <data_defined_properties>
          <Option type="Map">
            <Option value="" type="QString" name="name"/>
            <Option type="Map" name="properties">
              <Option type="Map" name="char">
                <Option value="true" type="bool" name="active"/>
                <Option value="@cluster_size" type="QString" name="expression"/>
                <Option value="3" type="int" name="type"/>
              </Option>
            </Option>
            <Option value="collection" type="QString" name="type"/>
          </Option>
        </data_defined_properties>
      </layer>
    </symbol>
  </renderer-v2>
  <customproperties>
    <property value="fid" key="dualview/previewExpressions"/>
    <property value="0" key="embeddedWidgets/count"/>
    <property key="variableNames"/>
    <property key="variableValues"/>
  </customproperties>
  <blendMode>0</blendMode>
  <featureBlendMode>0</featureBlendMode>
  <layerOpacity>1</layerOpacity>
  <SingleCategoryDiagramRenderer diagramType="Histogram" attributeLegend="1">
    <DiagramCategory penColor="#000000" enabled="0" lineSizeType="MM" scaleDependency="Area" minimumSize="0" rotationOffset="270" opacity="1" labelPlacementMethod="XHeight" lineSizeScale="3x:0,0,0,0,0,0" sizeType="MM" height="15" width="15" sizeScale="3x:0,0,0,0,0,0" barWidth="5" minScaleDenominator="0" scaleBasedVisibility="0" maxScaleDenominator="1e+08" backgroundAlpha="255" penWidth="0" penAlpha="255" diagramOrientation="Up" backgroundColor="#ffffff">
      <fontProperties description="MS Shell Dlg 2,8.25,-1,5,50,0,0,0,0,0" style=""/>
      <attribute field="" label="" color="#000000"/>
    </DiagramCategory>
  </SingleCategoryDiagramRenderer>
  <DiagramLayerSettings placement="0" linePlacementFlags="18" zIndex="0" dist="0" showAll="1" priority="0" obstacle="0">
    <properties>
      <Option type="Map">
        <Option value="" type="QString" name="name"/>
        <Option name="properties"/>
        <Option value="collection" type="QString" name="type"/>
      </Option>
    </properties>
  </DiagramLayerSettings>
  <geometryOptions geometryPrecision="0" removeDuplicateNodes="0">
    <activeChecks/>
    <checkConfiguration/>
  </geometryOptions>
  <fieldConfiguration>
    <field name="fid">
      <editWidget type="TextEdit">
        <config>
          <Option/>
        </config>
      </editWidget>
    </field>
    <field name="osm_id">
      <editWidget type="TextEdit">
        <config>
          <Option/>
        </config>
      </editWidget>
    </field>
    <field name="name">
      <editWidget type="TextEdit">
        <config>
          <Option/>
        </config>
      </editWidget>
    </field>
    <field name="amenity">
      <editWidget type="TextEdit">
        <config>
          <Option/>
        </config>
      </editWidget>
    </field>
    <field name="hstore_to_json">
      <editWidget type="TextEdit">
        <config>
          <Option/>
        </config>
      </editWidget>
    </field>
  </fieldConfiguration>
  <aliases>
    <alias field="fid" index="0" name=""/>
    <alias field="osm_id" index="1" name=""/>
    <alias field="name" index="2" name=""/>
    <alias field="amenity" index="3" name=""/>
    <alias field="hstore_to_json" index="4" name=""/>
  </aliases>
  <excludeAttributesWMS/>
  <excludeAttributesWFS/>
  <defaults>
    <default field="fid" applyOnUpdate="0" expression=""/>
    <default field="osm_id" applyOnUpdate="0" expression=""/>
    <default field="name" applyOnUpdate="0" expression=""/>
    <default field="amenity" applyOnUpdate="0" expression=""/>
    <default field="hstore_to_json" applyOnUpdate="0" expression=""/>
  </defaults>
  <constraints>
    <constraint field="fid" notnull_strength="1" exp_strength="0" constraints="3" unique_strength="1"/>
    <constraint field="osm_id" notnull_strength="0" exp_strength="0" constraints="0" unique_strength="0"/>
    <constraint field="name" notnull_strength="0" exp_strength="0" constraints="0" unique_strength="0"/>
    <constraint field="amenity" notnull_strength="0" exp_strength="0" constraints="0" unique_strength="0"/>
    <constraint field="hstore_to_json" notnull_strength="0" exp_strength="0" constraints="0" unique_strength="0"/>
  </constraints>
  <constraintExpressions>
    <constraint field="fid" exp="" desc=""/>
    <constraint field="osm_id" exp="" desc=""/>
    <constraint field="name" exp="" desc=""/>
    <constraint field="amenity" exp="" desc=""/>
    <constraint field="hstore_to_json" exp="" desc=""/>
  </constraintExpressions>
  <expressionfields/>
  <attributeactions>
    <defaultAction value="{00000000-0000-0000-0000-000000000000}" key="Canvas"/>
  </attributeactions>
  <attributetableconfig sortOrder="0" sortExpression="" actionWidgetStyle="dropDown">
    <columns>
      <column width="-1" hidden="0" type="field" name="fid"/>
      <column width="-1" hidden="0" type="field" name="osm_id"/>
      <column width="-1" hidden="0" type="field" name="name"/>
      <column width="-1" hidden="0" type="field" name="amenity"/>
      <column width="-1" hidden="0" type="field" name="hstore_to_json"/>
      <column width="-1" hidden="1" type="actions"/>
    </columns>
  </attributetableconfig>
  <conditionalstyles>
    <rowstyles/>
    <fieldstyles/>
  </conditionalstyles>
  <editform tolerant="1"></editform>
  <editforminit/>
  <editforminitcodesource>0</editforminitcodesource>
  <editforminitfilepath></editforminitfilepath>
  <editforminitcode><![CDATA[# -*- coding: utf-8 -*-
"""
QGIS forms can have a Python function that is called when the form is
opened.

Use this function to add extra logic to your forms.

Enter the name of the function in the "Python Init function"
field.
An example follows:
"""
from qgis.PyQt.QtWidgets import QWidget

def my_form_open(dialog, layer, feature):
	geom = feature.geometry()
	control = dialog.findChild(QWidget, "MyLineEdit")
]]></editforminitcode>
  <featformsuppress>0</featformsuppress>
  <editorlayout>generatedlayout</editorlayout>
  <editable>
    <field editable="1" name="amenity"/>
    <field editable="1" name="fid"/>
    <field editable="1" name="hstore_to_json"/>
    <field editable="1" name="name"/>
    <field editable="1" name="osm_id"/>
  </editable>
  <labelOnTop>
    <field labelOnTop="0" name="amenity"/>
    <field labelOnTop="0" name="fid"/>
    <field labelOnTop="0" name="hstore_to_json"/>
    <field labelOnTop="0" name="name"/>
    <field labelOnTop="0" name="osm_id"/>
  </labelOnTop>
  <widgets/>
  <previewExpression>fid</previewExpression>
  <mapTip></mapTip>
  <layerGeometryType>0</layerGeometryType>
</qgis>
