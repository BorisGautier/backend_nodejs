<!DOCTYPE qgis PUBLIC 'http://mrcc.com/qgis.dtd' 'SYSTEM'>
<qgis labelsEnabled="0" simplifyDrawingTol="1" hasScaleBasedVisibilityFlag="0" simplifyMaxScale="1" version="3.4.7-Madeira" simplifyLocal="1" readOnly="0" minScale="1e+08" maxScale="0" simplifyAlgorithm="0" styleCategories="AllStyleCategories" simplifyDrawingHints="0">
  <flags>
    <Identifiable>1</Identifiable>
    <Removable>1</Removable>
    <Searchable>1</Searchable>
  </flags>
  <renderer-v2 forceraster="0" type="pointCluster" toleranceUnit="MM" enableorderby="0" tolerance="20" toleranceUnitScale="3x:0,0,0,0,0,0">
    <renderer-v2 forceraster="0" type="singleSymbol" enableorderby="0" symbollevels="0">
      <symbols>
        <symbol name="0" alpha="1" clip_to_extent="1" force_rhr="0" type="marker">
          <layer class="SvgMarker" pass="0" enabled="1" locked="0">
            <prop v="0" k="angle"/>
            <prop v="231,113,72,255" k="color"/>
            <prop v="0" k="fixedAspectRatio"/>
            <prop v="1" k="horizontal_anchor_point"/>
            <prop v="base64:" k="name"/>
            <prop v="0,0" k="offset"/>
            <prop v="3x:0,0,0,0,0,0" k="offset_map_unit_scale"/>
            <prop v="MM" k="offset_unit"/>
            <prop v="35,35,35,255" k="outline_color"/>
            <prop v="0" k="outline_width"/>
            <prop v="3x:0,0,0,0,0,0" k="outline_width_map_unit_scale"/>
            <prop v="MM" k="outline_width_unit"/>
            <prop v="diameter" k="scale_method"/>
            <prop v="40" k="size"/>
            <prop v="3x:0,0,0,0,0,0" k="size_map_unit_scale"/>
            <prop v="Pixel" k="size_unit"/>
            <prop v="1" k="vertical_anchor_point"/>
            <data_defined_properties>
              <Option type="Map">
                <Option name="name" type="QString" value=""/>
                <Option name="properties"/>
                <Option name="type" type="QString" value="collection"/>
              </Option>
            </data_defined_properties>
          </layer>
        </symbol>
      </symbols>
      <rotation/>
      <sizescale/>
    </renderer-v2>
    <symbol name="centerSymbol" alpha="1" clip_to_extent="1" force_rhr="0" type="marker">
      <layer class="SvgMarker" pass="0" enabled="1" locked="0">
        <prop v="0" k="angle"/>
        <prop v="245,75,80,255" k="color"/>
        <prop v="0" k="fixedAspectRatio"/>
        <prop v="1" k="horizontal_anchor_point"/>
        <prop v="base64:PD94bWwgdmVyc2lvbj0iMS4wIiA/Pgo8c3ZnIGlkPSJteVN2ZyIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayI+Cgk8aW1hZ2UgaGVpZ2h0PSIxNjAiIHdpZHRoPSIxNjAiIHhsaW5rOmhyZWY9ImRhdGE6aW1hZ2UvcG5nO2Jhc2U2NCxpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBS0FBQUFDZ0NBWUFBQUNMejJjdEFBQUFDWEJJV1hNQUFBN0VBQUFPeEFHVkt3NGJBQUFnQUVsRVFWUjRuTzI5Zlh4Y1YzbnYrLzJ0dldjMEdzbXlvc2l5TWNZNHhqWEJ1Q0YxVXBPbWFhQ0IwTUNoTGRBbVRpZ3RoOHVIY2ptOHd6bW5wNStlTmllbEw1OXpXeG9TNEhETHZaUkRhWnUzbmdzRkR1VTFKMDF6MHVDOE5BUmpuT0E0amhDT0lpdXlJa3N6bzVtOTEzUC8yRE9qbWRGSUdvMUdzZ0EvbjQrMFozNnpYOVphKzFuUGVuN3I1Vmt5TTlhaGhCUUtmWGkvSFdtSG1RMEJBNEp6Z1g1Z3k2TTUrdStmVWUvMzg5Wm5JaXZVQjJUQUlqTUtTRjR3Q1dEWU5HZ1NtQkE2WVFuK3RHRE13U2o0SThERTlTL01GczVZanRleDNBRXVuaWoxWWV3VzdEZXpud0p0QjdZS0JvQkJqQXdpYllaVCtUb0RWSE5zd0k1SitvVE91QUlXQ3IxNHZ3V3pYUVlYU0RyUFlDc3dnRmxXVWdZSURkSXlDNUZDSUYzd2hFZnl1SWRuQ0orWVZRaTQ1TTh3dzBzQWlnQnZtQWRGbUVXU2lnWkZJRkp5TElMbGdHbGdIR05NOEpSSFI1RU40OTFJa011TVgzOFJ4YVd5SXNtWm1mOVJ4KzR3YzBqWXlYaS80UzlHdk1SZ0oxaS9VSjlCRml3TnlnaENqQkRNSVJ3bzBUSUFHV1pDRlMwRXl1L2lYdUFPU1ordlU4REd4RFJMM0VyRXpKeHl1WXg1djRVdzNDV3piY0EyNExtWWJVSGFEZ3dDQXdaWjFhU3RtcWVhK3owVGllOFg0RnVueFVRTVppRE5IWk5udG9wWmhKaVdNUVZNbWpTS01RNk1DMDZhTk9HTUVST2pKaHYxQVJOLzlJTHU2WVhLNlVjUnUrUHBRcDkzYmp0aXQyQ1htWDRHMkluWWpqR0lDRm1CbUZra2NaY1puOFA0eHJWRDZjZVd0SUFkeWVUc2JOYmllRUNKVmRzS25JLzBjOEFlekxZajlWRk9oNVUxUXhVTlNXNVV5Y0NjQWtvWU1GR0MrNmZoNEl5SUs3WE1ETldxcWxhR0FUbURNY0ZoNEpqQjk0SGp3c2FBU1l4cGc2bUlPUGNuNTIrSWF2TmZUbzlmcjlqdHp4b1lvUldMMnd6T0IxNkt1QlRZaDJuQXNISmxWVTB6dWp5c1hJaVJHUThKKzdoa2R4M1lsQmt4TTcra1JqZXpnRzFnMndTdkJINEo2UkpncUhwU3hRU1ZqMnFDWVRiblI5U2FNYUEvaEpkdEZJY0xNQjFEN0tsWElBQmJHUVprQlR0SS9oSWZSbFlBVGdCM0EvY0REeGgyQkpoS2twbFV2c3FMWDYvWTdWT1dSdW9GZXp2bzE4dStYVWkxN2lkTmFtMHp1bHpNWkY1b0d2UkJRNGNPRElhVEJ4S1hpVlh6QVcxbVpqZHdCWENkNEhLVGtCbVZJMENyR0ZKaW1ScXNZaTEyZEJhK05pbWVMbWwrWWxaWkt1a3dZMHJpa0puK0ovTDNJVHY4aDd0N1J0YzhRUzNJWFJBKy9VeDBLV2JYR2ZaR0VoTFhjUkZNWTl3cmJ4KzhablA2MEx6Zk82aUF6c3lnVUxoY1psY0MrekRiQlF3aDljMjlwTExTVVB2aWxzQ1NINnJmbTJGNUQ5K2NoTWNLNHRsNGpuY1poa3lnVmNLc2pDVnA4b0pwUXhQSXBvQXhvV1BDdnV1TnJ3QWpIM3BSVCtGTSszeDNuQ3BzOGJIN0xkQ1ZKRzdRRmtNT0V2ZWpwcjFoUlpoc1FxWXZnSDFXbm9QWGJFN1A4NWs3bzRENWZCOW1PdzMyQzY0RUxnQzJHdlF1MTlxMWF3RUJqaFRFZzlQdy9ZSllIYnZlWEJhcFNBV1NMcDloTTNzWWVGeHdIRGp1WEhqcyt0M3A4VFZNSnJlUEZYdUI3ZVo0TS9CS00rMUMxa2VqMjFHbldPMWhnbEV6UGc5OHpoSGZkODJtekZTek5DM0tncGNTbTVsSkExc2w3UUYrd2N6ZUlHbjNpcXpkSWxndGJXMkc1V0xqNExUNDFqVGsvQm8xeFRYdndDZ2JSaGJBc0RHREk0S0hrUjdFT0d6WXBHREN5YWF2ZjJGUEVlWUlBOHo1MFN2RmJoMHI5SU4yQTY4eStBK2dyRVNabUpTVFhGTmtiV09HTjZ3ZzZlKzk2ZU1sSHg1Njh4WVZGa3JmaWl5Z3pjeHNGYndkZUIzU0JaVVVyY1RhcmNRQ0l2Rzl2SEgvdEhpOHNIYStZTnVWeTNnWXVCUFpOeDEyOFBvWDlxeWFSYng5dkhpRndWc012V20xbmxHV25PQ3hkRmZxRmNEMDZ6Y3Mzbi9hbmdMbTgwUEFGWmg5QXVpajNIRUpuSEVGbkltVEp2anpFNnhaTTl3aGl6OEJQQ1RwTDRsMGp6dVpHYnYrNVhTa0QvYldaNHIvQjhhYlFaZDM0bjRMaVNBSGRyY3BmdHUxNTNhUHRITE5zam9XN2RTcERPbjBKVWkvTEhnTjBBZTRPcHNzVmJ0TGFydE5Wb0laekJHUUpiQ01nM05DWTFOS2pKWG1XdWoyT3FkYncrYXlQdC9xdG9RbE5hVVB1QmhqSzRFTit5MzVROWNmNFZzTzd2MHZMOHFPVnJwUmFydFRXc0Z1R3krK1M4WUJnNzJxZTJSRGYyY0hNRXozZ0Q2RFk3dzJEWXVscjNVTG1NdHR3K3hWd0MrYXRGOW11OHVsV1pPS0ptK2xBN0pjbDNpOEJQOHlEUTlNVi91aDZndXNnNWl0anAwdENJMWdIQVdPSU83SDZ6Qm8rSVlYZFUyMGNvUGJ4NHNEd0lXRy9oVFlZMWl2REt4S1VKUFBIY1BRTVBBcGVmZFgxd3dGTFZtLzVGNUxrWkNFYUF5WTlDdUN0d0o3TWN2V0tscDFoR0lWc2VYSVRBeFB6TUlkejZ5ZEg3aktjaC9HM2NDREpudE1hUHgwdHZzRWdodWZOeitQdDU2TU11QXZBSHNucSsvelZTcis3WWhQWFR1WS9zWnlycTFyZ2hkZ3dBUEFGWUtiZ0V3eksxZW5MQlgvRGViN2RtMWl5L0VCell3dUo3YW5LLzFTcXkrcnhmcHJzRXNNdTBUU0JPZ1I0SE9JVHdMRlp1L3N0dkY0Ry9CeVRHKzBOYWlETWp6Ty9oSEh3OHZwUlVtdVhhQUpOak9uUXVFS3pONEN2TEhtaC9tV3FjRkpPcE1rcEJiNzJDaE14cUsweW05aERSU3dHVGFHMlJmQVB1ZWN2L2Y2M1JzbUFXNC9XZGhtdVBjaS9aOEd2YXVhOGJJSSt6THd1d2NHMDQ4czk5cUZTRWhJb2ZCR3pGNFBYRnIvdENZdmN4MlJrRnBzU3hweUJTalpPaWNoN1dER0FQQmEwTVhlZ3FQLzVkSDhQMjlJNi9hdHZlN3REbDVGTW41ZFByWHpoS01XTStPcndFUTdKS2xSQVIzZ0xKZjdkY0hWd0g1Z2FGbTlrcXRBUXRxVmMwUDRnY29GVnBNdTBUbk1raGtNODhuSWFtUEoxS2d0UWtPWTdURFo5dWtpeno5VnNGZjFwTFF6SFppcjFzVUtjWnBISkZhSW9ZcS9maTh3VldsK2E1dmhwYkJhQlhUazg3Mlk3Uks4QTdNTERmb2tkWXhJek03T2tzdm55ZWR5TENZYk5teGdRMjl2dlZWc2tGYXcvaEJDTVgrR1N3ZXhlYit2dlRpa2ZtQy9oNHVuaXVaaWcyd28wZ0drWElVa3FKejJzbFErcndRejg0SmNPcFUrSXJOQzdTaEhxMUtyZ0tIQmJzR0hnTXVyeldDRE5DclZQR3dSRXZMTU04L3c2R09QOGRqM3Y3OW9vaTdhdDQrTExycG94VDVnZitnSTEwQS96cEFQMkF4enVaSW5ING1Vb0xmTE1kZ053V3ExU2xKQmNQVDEvVXhUdG9iTGxSREF6RUxsODljSTNnRmNPcy9ScVcxdWE1MmhadGdpUG1BK24yZnM1RWtlUDNhc2lsbk5zWUx0UE8rOHBqNWdyWS9YQ3RZZkdLSEt1TlZVNFdxenNuS3NyZ211YlNiUE1GWTBtQ2pFUEZ0SUZMRXZMWHBTcWk3WTZGQS80RFRTWVZZZ0lZRHkrV3NNRGxEdUxiZEc1V3ZTRk5vQzJLSjFyY2sxYWpnMnZheE5MRlhXbXpvRktwL1lLYXc2VTh0RVpWcFdOVEhyQVBPQ21hSlJqR0c2YVBTa3hJYTB5Z2FpZkZaZEY5aHlNSXFZalZVZjNjYlVzSkI4L2xYQXJ3a3V4cXlQU3JPNWtBV3MzR1FoYkRGelg4bEFiVm5WSEN2WXZNdkt1SmFKVlJSd1ZVZENxaldvUG0vckNZdk1pQ09JUEpROGxMeVJDVVZYSUZLeUdzdVdmQmF0WVlDblBBTWM2b2xHcTFnWWxZcFhZM2FwWVZ2S25sc2ovNXJMVi9XL05Tak1IRlpyNCtwcUpxSlF5RE16TTAxeGRuYUJKeVJTS2hVcGxXWnJXNzJHTkxTSW1ZaEtBY1haUmUzeUNxWHg2WTFWWXIxZ25sbGdCbkU2Z0w0dVIwK1h5SVN1NGZ4bUptRkJ6QVhKcXNXMkpTd1VadlpHeGRsZU16OVhxOHVLTS8reGN4bXFxR0FqdGxnai9OU0pFWTQ5Y1l6eGljV0hNMCtkbW1CbTZ0UWNrRGh4WmNkakdaaGc4bFF2RS9td2ZFN05pZFhhc2tMTXJJMzNkbWF4TUhEa3NnRmRYWTR3MWY2RW0xREs5cVhkbnJadkFMamVvYTAvSDZhNlB1OWMyTklnOTQrV09CYjNMbjl5UklJd0ZIMGJRZ1lIMC9UMEJJU3BGWmRONk0xV3RKWWtORE9RKzY5T21qVG5mc3Q3MzZkeXphNTBaelR0a1cveVl0dnFFMXRvYkxuK3BISnROdVpab2tXd3FnR29zMkRsejdMT1lHckFhcWRFcnd0TXBOT3UraGNFTmNXOVFxS0RDQzFaeDEwdTV6WklpQ1RmTzdUbHlQUlRJM2NrMzNtVHQ3aFhLamVwV3JpNWJZWXRwb1JoS3FRNzAwMVhPcjNnT1FCQkVEUWc3U2xITElkcFRzZm5mTVJFVVR1Q1ZadjltaU5uR0NQcGJnbURST2xTS1VlWUVrR1F1Q1oxZWFIMmUrWDYxakJENmNqUEtXQmJKS1I4akhyRHJ2dG1TclBUY3RwaXNWMEZsbFo1cFZ1N0ZyRHgydjYramV6YzhYeTYwcWw1MTliS3BzR0IrZzdYU3UxZUpqWnJEbDhPRFZGYk9RdzZoOVZZUUVPb3dSS3ROU1lKRjRnd0ZPbVVvN3M3U0xwcW9XRmdvS3kzSzhFZ0xIbnJ2L21ZWlVERjkreGMvZ3p1eHRrd0RnaW5UNHg4SjRwTDJ3MmZxZmRsVjJZQjI1WnFMYSs4OE5hd01kL0Y3YU5kRE9mZG5LSlVUcXdheWhWaTY0aUVTTkRWRlpEcERraW5IVzdaQTJQTGswcUpuSnZLUGg5ajdEMHZZTm5CblJxVDZJRmk3OVp0TDBxbDBuOFR1SEJkTHFwdVZaNmFUVEc3VnF2anpwQklFQVNheW5TN2V3Y0dNaGR0R2tnZDdNa0VmcldWRHhMZE44Q0MyZCt4b0xDOW5Yc3N0aWJrd3k0SW5rQTY0T1BvZ3NZZk8wWkNXcEtLajFQcjh5Mk5mVy9Ha1l2MVkwbENuSk4zZ1I1RGZNMmJmUk5qQk94b0p1VStQaHZ4WnZOY1lYV1djdlZHVzJaanV3TDRUSHNqSWMzRjkyeDU3cEhjeWFlK2dEUU52TnJIOFZYMTd1c2FOc0hMVkE1RElQRmszbEh3UHo0a1JKSjNZbEp5anhsOHpUbjkwQVU4SEljY3Z2bG4rcWNCUGo1U3VNdDdHd0tHU3A2OTFYU3Y0bWhMTWJZZDZZQzlIeDNPRHdOMXJXYXJKS1NwWkRjOTUxRHVtWk5qUWNpSllpRTNaT1ozVWU3M2FZZUV0SXN0bDRRWW9tZ0JFNlZ5TGYwUkpTR1U3eStSQTBZbGpicEF4MUtodm5XaXArK1RZTkh0TDFiZEMzN250c3p3UjQ3bjdoSnM4cWJ0c2JlK2poQ09SYkJTYkptVTB5dUtzUTNmQUdQWDB6b1pXWEpaWnZiY1RXUEEzelAxekVocGV1YkQzc2NYWTVadXhRSjJhalp3WTN5V3BiQ2lpUW1mcnRaWUs1OVdXNE03aGpWWXdMbG1iK1ZZeFhWSWh4cDJvZnQwRU9oTEg3Nm90MmIyU2ZQVzVuMDdzZy84eFJNRjMrdTRiTEpvbHdMbHNkdTU4ZHhPWTdIeEsrYjVEbkJuMDBRdElDMnZDKzd1Ty9lKzdyN1R2NWdiNjNxajkvNGRwVkpwL3pJVWZVMWxzaVQrMTlTS1lpbWVVUWtDRllOQWg4TFFmYW1uTy9qNEgrL3RHVnY2cW5vNWZWN21ZZUJsdmNjS0QrWWoyeFdiWlZjaHFWVXB4TmJiWmU0M05oNHZwdG1SL3NOV3Ixc21WN0lJK0Fyd2UyRVEvRkhnZ3FqMjE3VWhJWXRqSHNlTUJUdys0MUE1VFVrL21NcmZPNHlwQVZON21ITXFwdExCU0NydC9zZzVyaVlKZWZKcHluR3VJWEhlRzB0bVFTd3hwMTdvYlYwQlh3aVRpSytvOGtlNXhlZ2dWdksyYzdvVVgvblI0ZGxmYVRYTnl6UVQ1L25zRUtPNXAwOU1LM0JqVVZ6eXpnV1htZGxlTXhzeTVpWTBkRlphSnlHbjRvQ1JZb3JwdUlKM2tIQTB3OW9nSVNvZlhhQXBpZU9HRG9NZWsrTmtHT2d1VE1jL3NuL2pkR01wdERQU3dNNnVnMy8rUk9IVFpwWVR1aW95MjdwcXhBVEx4bDU3cGt2MnR2ODJYRHlLTVd4bWkrWmpXYkZoR3NNdHdQRjBmaXg5YlJUSHIvQnh2QTlzcDlXWStvNlJrRW8yalNVdytHNnVpMitkN3VLeG1hQjZuc3EvTlovdHMxS3NVZ2txSG5BTmtXakFKRVZBRHBqQUdFMmxOUkk0L2xWeWQ4VzI0YUdiWDZwVmk5TC80U2RtWHhWNSs0M1oyQzZQalIxSlpocVh4SzZjbUNEaEhQU0Ura01uL2lFVmNQVGR6MnNlbWcyV3FZQUx5ZXpKa2NIWWM1a1pIeXBGeGIycy9KYjFVclVrRmRiWkhJc0orTWFwTHI1NUtrM2RpVlZEdVFwWWl5TWh5V3lVWURJSTlFZ1E2cXNvK0tzYkw4cXVhVWYvalU4V2RnaDc0K2tpSDRvOGJ1R1pueXVYVk9COEpyQS96NFM2NWQzUHl6eTgwSGtkRDlHYm0zcm1Fc3NYUGhoSDBlWGV4ME5MWDlHQ3RLaUFkMC8xOFBEcGtKSFppc2RXUHZFTUtHQXlRdUZ5UWVDR3c1VHVSc0gxd01TTkYyV1gzTzVodGVXbUU3Tzc4d1g3YUNtMnkwcCs5Y2lKQTlKT2QvV0V3YWZmZTE3NnI1dWQweFpWWEt4M1craUl3UTFPMmk0WDdrTzYydnY0QWpOZjZ6U1ZMeW9yMEpJWVMxcVlTVXZ6ZUQ3Z1pGRlVWeXhBOWZOcVloZzRKeVFWWEtCeFlRZk4rRHJvR0FtSm1MTGtXRWZhenFDTUlING41WFJWS0g2NTVMa2tNbk4xWlZ4WDBkdkREQ2g2THZTbCtHMDNEZWY3M3J1OSsyT05DVmxXaE5UNVBtQnpES0E0T3RvYm1kOW00cEk0THIwQTJBdWNiMmJiemVMc2N2STJCMVljalRuTUVJYjR4MU05ZlB0MHlMTlIyZmVxTWV5Smo5aFpUQ0tTeUVrTW0ra29NQ3p4ZEJDNnFjQnhGT21RWERDMkhpeGVNN25CekcxNHNyZzc5clp2TnJZWEFiL2lqWjNlNkRWWXRNSXRCMHZla0tiVGdSM09oc0dOd0ozdjI5RTF0NUJwS1FWc1ZMWUt2aGpXNUY1aDRlVFRWL2c0K29VNGppL3dQaG8wYVp1ZzM0d3NXSFZiZ0hMS3FmYjJscjlYV3JyYWM1SWFKcDZKMDN6aWg5MlVmSkw1T1pvd1Z3anRZeUFSa2V5cU5BMU1nS2FjTkJtRVRBYml1K2JjZmNnZHVubC83MmhqR1RRcmwvV0UvZG1vQWFSZEx2K0JRcXlYUm1hN3pOaGkwT2ZOUXRCY28xVFQvQ3dIbzR6MWhPNGVKejRhaUhzK3NMTTdpWG5ZYVI5d0tYbjIyV2ZUa25xRFF1NjkrT2psM3Z2enZmZERpd1pWV3RBSGhLZEtJVitaNk9WN00yWEY2YUMvSnd6bkZMbUFxY0FGbzRIakFXVGZsT1BldjdobzQ5Rk9sTWQ2a284ZXBiOFV6bDRWbTEwWG1WMldMOWxBSis4dm9DZlVJNmxBTjc1L1IrYS93eXFRa0hZa2QvSmtIN0RUOEw5R0hGMW8rRjFtdGlYMjFvZVBYVk1GQkI0cmRISHdkSVpIVGxlTWNIdktGZ1lXT1JkTXkybmNPVHNoN0RqbXZ1NkQ0TjQ0MnpQeThUMUw3eFAzNHlnM0QrZjJsV0wzMXRoemFXUzJNNHF0cnhOT2JKZlRlQ2JRVnpic3pMeWw0eVNrelRUbGdHTXkrN1JCTDBZR1NBc0xGWWJiTVJzUzJvdzBDQXdLRFF6UHV2N0hadE9aa1ZLUVRvZWt2U2RUYm1hOGdTODNteEVvUWlvS20wWk1TNHdhYnR3OFkrWjVLamFPUTV4THppVUNDb1lWQlJQQWxObTZJUTVyTDBtRTFwdElSbVF5aURDRDlqbkhTeVIyR0F4NW94Y2pheEFhNWhabGltVk00Q0t6UGZrbmkvOXAxVWhJcDJUMjlQaGduQy8yWWVwSDlBRzlvTjd2enJqZWcxTmgrR2d1Q0lIUWU5SjFHUmVSSUVKNHBFaXlna1JCZ1NhRnBzdzBaYkVtb3cwOVk3VVdycDA1YlQ5SjhwSEhDenU5YkR0aXlCdDkzc2dZU2lmK1l1c2lLSFNuZ3BHMUlpRS9FVml6TWppTExZNnRDeC93clB6a3locXNIRGdyWjJWaGFVc0JXNTBXZEZiT3lsSlNwelJMS2RHWlZyeGx6WWM3QTloWldiNHNXWWlOQlgwbVgvaDZJaHpOc0dabGRSWmJIRHRMUXM3S0daV3p6Y2haT2FNUzNqWldmSU9KdlVnYnk5R1Y2NGJrYS91d01aSlp2VWtJNGhuSnBnM2xnRW5NandabXcxY1BaVnJlSit3blhkNXpsSFJmUERzUXlQb0VmYkczZmtTL3cvcUZza1l5SWdTV0FtWE16RmtTRlQ4S1BETW1DdHU3S0x5a3h3b1hiOUFrY1R4SkVyRjBDclBrdUdIRGdyT1IxNE9FU0Nja1hnWmNiR2lya29Vc3dOeklhWFg0TmRGR0Q1WFpJY3BoRkJFNTBLU1h4bTg5V2ZvQjJIaDV5R3NrSWp6MnBrSG1yUXRvUjlhYno3ZlVTTWdOeHduamFEYU4rUUc4YlpYUloxSWYwQ2ZvNjRkTlVCM0t5Z3F5R0wyZ3JJazBrRFlJTVp5Uzc1VVk0OTVFWVdObzBmTzdLTzdvb21obU9hU2NrbUhOSEZMQklNZk16Q2xKa3lUYndZNERFd1RCY1lOcFpUSm5mSmd4M0x3cDljRFR6NVIybXRrMndTNVFkUlp6MDhoWXFqdWd4Zy9HTkRBTUhNWHNjS0RvL3R0TyttTW1Ka0NUUVNFMWZmVTI2bnJGMTRzQ3JRVDd6NDhWMHpLZmtmbGVKL1VaWkVtMnl1b0gyNGJ4VThBUU1JUXhCRFlrc2NYS0MydE5NTGZRcDJGcWt5cXRrYXBZU3ZEY05EeXZDd2JDYXNKb0ZFSE9ZRlF3WWpBaUdNSDdmeFdNa3N0Tm10bVVwQ215MlVuQVY5NzNtbytFM0hxeStDcUp0MkM2bHZuNXFKRzZxYUpOc0xtRzIwd0k4OEEzVEh3ZGRHZFFTQjI2ZXR1UDMreVMvL3o5NHFDODN5WHpGempjejVyc2ZHQW4yQlpiQlY5N1V3aXZIWURucFdsM0w1UlJNenNrT0lqMEwyU3pkNUxNZVZ4VHExakhnbTg5V2R5RzhRWTUzY2lDaGRhNkF0WjdrSUtrTmo2R2RNdkdVK0ZIZ09qVnU5YnA2dlpGcEt4c3UrWDlQbk84VEhDaDBGWmpkUmQvUXpsK25vUGYzcFRzQkpYdW5Hb1hnSVBBMTRHN3lHYnZZdzJVc1VFQlN4bU1RVG5lQ1Z4cnNHUGUwdHVXRkhCQjhXWFNNaWJqb0dGZk5ManZ1azNwWXl2TnlHckpEUThTMGwzcUorVjNtUGVYR1BZU1F6dUFRUm05SnZxQlhrSGF6RnduMWxJc2htME00S2V6OFBLKzhqWms3Vm0vZWFJa3pNVzB3WVFTWDNFRTZhdVkzWTAwVEhkM1IvejRlYzl0Tmh2bXRtZUtGNXJwQU1aVkVoZFVtcEM1U2V1THJYNjFsZ3BWcGduREhoYTZWK2lmMUJYZWUzVWZpMjRpdHhhKzNBZEdjQmh1dzB4dUo3QVR0Qk40UG1JcjJHN1FkcEk5bE5PZFdqZlJLcGFXOGJ3MHZHSWpiTzFxNktHb2V4OHJ3OHJLbUFNT2xmKytBeHpDKzBmbzdSMm5nN0xnZEt4YngrTTltRDhnK0hXRDNWS3JLK2ptUWhRbFlkRnFIT3RtbURFQzNJM2pzOFM2VDJMNndGREtyeVdSZVA4UENEZk01SHFCUHFRQmcwR1o3UWQrUnVnQ3czWUtKZmx2OEM2czNFU3NkTjNFVXBnUW0xUEdpN053ZVYvbHJOcFNYeDJNWkxPbDQ4QjltSDBWNlFHREU0SnA5ZlQ0anBHUVpuTDdXTFRkWks5Qi9DblFQNWUwZG4zQUJiRWkySmpNL1FiR0k5Y01oZFY0S0dzaEh4Z2gyenVkMnllNERPa1hnY3RJdWtSYTJ5dHVEVVRBeGIxdzZZWmtHOXExbGhyTCtEZkEvMlBTSStydVhuRWY0NUpEY1hlTWwvcUEzUjYrQ3ZTQmhhdWdnSlNiYmcvOE4wT2Z2WFpUNnVDS2NyYUkzUEFFYVYvSzd6SHNNdEF2eW5nTlNaUHEydHFzY0EzaytXbll2eUh4LzlhQkZJRjdrZTZndS91dm9mMSszcVhya3BGRDlwaVpmZzk0cjZUZExObXRZQTNIRmpISllieEJrTDM5WkduZ21rMnByeXladmhibGhxUEZETERGeC9HcmdKOW5ycyt6SDVKTzNpUU4xTmVQcGJCbVJ6cVA3Y3pBNXRRU0ZHK05SRWw1WFdobVE4cmxYb2IweHdiSDFBWlJxVlBBWnI3UzFadFNFVEIxNjFqMFpXUXZLbCt6YXpHNzFuNUJHOEJXU1ZjWWhMYytVeXhlZTI2Nkd2Qnd1ZjdkRFVmSnhGRnVCN0JMMGk3Z3A0QUxnVjNBZ0pLRk5QTmVhalg2YW91WVZJbkVXa01hT29qMUJmQ2NkTUtBNi9MSmZJVmNDNHdFNjFmUzBiNFZzNXpnbnkyWHU0L3U3c2VVQkdGcVNaYTFKdVRXOGRMTE1kNEd2RTVpZ2NaZ21TUmtJUXdiQTc0bWM3K1BiUFRhVGVsaUs4cDN3Nk81akVFdll0RE03VER6RndNL0sra0NLbEdoMnZRUW1tRnJRVUoyWitES2piQTVYU25odWFUTWxmb1p4KzR6K0FkSlg4RzV4K2pxeXNIU0pLVE9BalliMjZ6RkhoMU0zYjM3WkdtWHNBdEJOWnZVMVJNVGxiSGFZYnhsWTJnSTdFM0E5ekg5dFprZFh5eHROVElJWEF6OEt0ZzFRaGxUVGR5VGNuSTd0V0YxQmF3Tlg5dHA3QVZkMEYzajlNdzdmWDFnbDhoc0ovQXp3TzhEajhIU09yWHMrWUMzajVXMm0zZ2Q0cWFhVzFMM2hqcHBZaEw1SStDMkE0UHBRNDNwdWFIc3Uva2p1ZGNZWEExY0pyUnoxWlR0REpDUWYvOGN5QVp0RDdtdHJaaDVwQ25NZnNPa2c4cG1GKzAzWERhaEY0d1pQRUxTUWJsM2dWUTBIRmVHR1Z3TG5MNWxmSGI4dXNHdVVZRGZlWlJNMnZLN2hPMlg5QXJnQXBMQi9yNWxFNG1WWUt0SVFrS2d4eVhLRnpTVTByb1Z5Y21zRi9oVHpHNWhldnJMOVBZK3N0RHBTNUtRSnI4WGJqdFpPbUhHWFlpOW5TVWh6VEdoblliOUVxYXhQM2t5OS9lRkhCZDNTUmNBTHdiMkFIdE0xTVV4V1M2UldBbTJXaVFrTFJoS1EzbVB3VE5DT05yQlRBb0ZGMkFXSVcyd1hLNVh5ZGp5UE4xYTBnSTJLcVVrZCt0WWNVTHdkVE43RjZxRTY2N1JJZFVHcjdXVlkyWXVOdllWWTN4VTFLUmtyd2U3SExRTktjUkkwbENqdUtydUw3KzZtQ2xSbStUelhMbDFBa3NGeGxETnZvNjFkWFM5WXdaSTJtZlFLN05lWm1hbTZPazVUSUluNTdXN01QMXpVNlFSdmNYWjBra3dOLy94bmZVQlk0TmN5VGhkTkQ5VnBPak5NcXZ0MjdXS3JhWVBlRzRJUDdjQjl2ZXUyaVBXUnN6R2dXL1EwL09iSkZhd2F0RGFHdFI1ZlI5RllPSzJBb2RCTzFIbnB5R1pHYkhCZU42WUxucUszc0RrRUpsT1AydTlTa3JKdkw5T3lBTVBQc2lERHo2NGFOVi80ZTdkdkhEM2JyWnUzZHFaaDFZa0NTcDFMYmxjTDNBOTJld2psS2Q2clRRNjFqQ3dGUnI3Qk5zbkhONk1ZZ3d6SldPNjVKbU5JYTdVbDdVa0Y2MWlxMGxDQkwxQlo4akg2ZE9uT2ZIVVU0dWVzM2xvaU5saWNkVnN1dUJTNE4za2NuOWJuZ0RyMnlFaE5iL2JDRkRzQ0FrQkNwR1JqNU5qSVRKbVk2dnpXc1hha290V3NkVWlJUTdJMURnNEt5RUlVUlNSTHl5K0MwU3BWTUw3K3RmZlNiSml5ZWpURlVDT2ZMNUlkL2ZkYlpHUW1wOG5nT0pLU0lpWkVYbUl2REZWTktaTFJpbE9uQVJaK2M1bmdGeTBpcTBtQ1JISjJvOXEyZGY4dmx5c051a04yVmhTY1RwTVZyWURWMkVHTXpPanl4b0phZnpkekoxRzVsWE5TdTFEbHg3MUFDakdNRjB5Sm1jOXhiZ2g0V2VRWEN3TFkzVkdRa1RpSXpYK1BPLzBGckdsSEtJRXNCVTlvMFZzcDVtOVRoQXRMNmlnNm9OUlBwV0xmKzUwMGZkRlZydWRxYzFGMHkwZmdRV3hVbXpNRmp5RlhFd3A5a2pNN2U5cmRjK21rYkd2QjJ6ZXFzRU9TazhtWWpxY3B0d2VNTjltdFk2ZEhIdHFTUi93TzRlK3cwRC9Cczd0NzJuckdjdkJKTmVYU3FVdnFUYW4xVmdkTlUzc1FuRTlLcDh0NmZGMlZlV3J2Q2pCM0JKQ0ZzWENRSFIzQjJ6c1Q5SGJHeElFcnZ4U3l5YWdmTDdWWExPdU1HcXdCa1ZkTVZiOVZIbHdSZkcxZkt5cFhXb3ViVCtqUlV3dW1IWkJlQy93enFvRnJMVnN0VmlUeFBtS0VuclBnSlhYUmlTN1BwWWQ2V296TldmdEZzSVFCQTVjSURJS0NBSlJLbm1pa2xHSzVwUzYwaVRYV2NYMWdLa1dxMy9KSzhZZzZYbXlPRUUwTjFlb2VsYXIyREs0cmRUbU0xckFwQ0FudVR2bDNOOW1Oei8zb2FvQzFsckFSdEt4RURPT1lRQ2pWb21URjFQNVhwT1JWckF3SmNJd0lKVnlGSXNlelhxaXlPTWJxWERsNHNaS2ZpYXhadWxiSVdZazBkYURhbzF0WnMxYXcrUWNRZEF3b2JCQndqREV1VW9EdC94bkxJbEpSZWZjQTNMdXR0N056LzMvcU8yR1dVakpGdXVXOFRCZ05YMkoxUzRGeXUvSTVoenM1V0FWUmN4MEI4eWNqaWdVUFQ2MnhsWnFubVU2STFpdElqYWNzMUxNRUpFNUFpSnFTb3QyL0s1MEtrVnZOcnZvV1gwYk50RFYxVVhsNmN0OXhsSllFS2JHSGJxaEoraTZoM0pIZEZ2YnRYN2tPQmxneStScy9vbkVJTFJQUWxyQnpFT3BhQlJtSS9LRm1FcVYrSEVuSWMvTGVLNTd6aXpuS2s4bkZXSE5NYmxDbUVxZDZOMGMvYlFaQldsSDFhaTFSVUtjRmJZNEs3eXhmayt3T1g4TkpWZ3JKS1FWVElLdUx2bU52YWtqbVhUcTdlbTBEcmxBdWRwcjVxekdHbVBVWUIwbUlTVVA0OFdnNXNHZEpRTnJnVW5CUkJDRVh3TitNMUcrdW16U0ZnbjU4MlA1QWVEVmxZZXNoSVMwZ2psQklCMEtRMzIrTjV2NjBuUitKb285NXlsZ0wzQ0JlWFo0YjlYRjg0M041cXBpcXNYcVMzZWxXTUdMSndxT0YzYVZINlJXMnFvQUFCcjJTVVJCVk5SQk1yRDZtSkFMaHAxemR6b1hmSzVuODliRnAyTzFTa0krZXF6UUczbTJ4OGFGMWhBOWE2VWtwQmttd0VuamdlUE9USXJiZnZlQzFBbm8vNnYzUDVqck14OWQ0cjFkR1VXMkQ5Z0pEQ2FiSDFJZklxT2hvdjZva0pDOGg2TTVCeHZWY0lLYVhMVE9NTG1qUVJEZXFTQzRwV2ZUbHJ0WVFKWk5RZ3gyQ1Y1YTlQUTIraitkSWlHTldNWnhWMWZBUDc3MytabkRsV2ZkZUZGMkN2amFEZkFOd0UwKzhPd0hvaElIb3NqT2orT0cyVGtORnF5aldLMGlOcHl6VW16V2l4L2tSZUlwZWRhZGI3Y0FKdVRUWGQwM1lmYjU3azFiRmcxWXVpd1NjZzI0bjNtODhKKzh0OThyK3JrWk1LdEpRamFtM2IyQ2QzL2d2TXhEcmFUeGZmYy91OWM4cjdWWWI1a3QrZDFWeS9valNFSXE4cjduNXpuWEZVbXIzQis0anBTdEZwTlVkQzU0SU96cWVuLzN1WnRiQ2l4UTF3UTMrb0dOUytwK2JyajRXM25qeXBJblUvc0M2a2hJMlNJa1JLTGVjVm9PNWtTaEsyUUVlTGRCeTF1am1uRWMrRHZFblM1a1N5RDlraG1YbXRmdXlQdWswbGhOeTFmVDdMV05NV2UxYTMyNVRtRVBUNmZZMzFQaTNHQnU1c3pjaWVzRGMwRTRMT252WlhZSDJCR1k3NzQxdzFvbUlSLzdRZUhDUW9sZmpyenROWEIxdmwrSFNZaHpUS1VjaDBMSFo2ZlB5enk4VU9LYllUZnQzemd0S1dkbXcrOC9QSlcxYWNaOGJQZkgyQXNDdEZQUzVkN2JrQm5weHVaVjVYL3JoWVJVc085Tk8xNmNjUXlFdnRyT1ZNODZ3NFJEVW9UYzUrWGMvWks3cThmcklaMjdKWUxtYmwwanRpUUorZGh3TVkxWmY4RnpYVEcyL2Q1c0VKbzNRU3NsSVFLY05KMXlQTklWNkg5ODhMek0vOTJZZ2VYSWpYdjZjc0I5d0gwZmZHQ3F6MkJQRkRNVmxmd084N2JOMEpCRXY1bWwxeU1KcVdCUHp6cWVpVUlHVTU2c2kydE9yTDFvemJHQzVNYWNjMGVEVlBvVG9JZXptelpQc0V4WjBnZjgySEJ4Q0xoOG9oamZGc2U0V24rdklwM3lBUVZrUTNjd0ZlaW1EK3pvK3J2bFpxWlZlZi9EazcxVzFDdTljYlUzTGk4VjRtMUpndGFuRHdpd2YyUEVSYjJ6N09ncXNoNzh2U0FJandaaDZndFpoZGV6YVZQYndZa1dWY0NQL3FCd1lTSGl1bnhzL3o2T2swN3JWVkZBUk9Ed3ZTbjluaG0zZnZDOHpQRjJNOVNPdlAvdzFBQ24rZlhZMjcrSnZlMlBZclpZZVFCNnZTaWdnRmNNRkxuaW5BS0JSVFhvV2lxZ1NLWFRqd2k3UG5EYzA3VnAyNHFEVlM1SVFtNCtYcmhpSnVKQXlkdHJZc05WK3Z3YVJ6MVdTa0pDcVJnNERndDlGUGlHeE5oU1N3TTZMa2xrL3k4Qjl5SUdYRWgvYU81cUQvdThaN3MzZXF0S2VBWklTT1g3OFVMQWQyWlNYSml0bWJtN0JvUkRMcHlTYzRmQVBnczhBQnkzWkQrU3VYUGFEQmJhTkRqUnpjUDVxMmFLSENoNUx2Zkd6dHI2M3lrTEdDRHZ4TkhBY2RDSmI2WmQrSlVQbkpjYVpSRnBONVBMd1Q1d2VDbzBTT3MwbDVTODdZeTliVEd6NXlvSjUzYSs5d3lhV1Fhc1BIRjJiU3dnd0liUTJKMk5lTzI1QmJJcXNkcld6amszYk5pOWtudk1CZUgzZ2pDNHAvdmN6UjNkaUVnMWxzejl4Wk96V1dCN0ZFY2Z5cFYwdWZjMlNFTnpVNDFkdkJCV200ZmF6Rm5GV2hJNU1lM0VJMTJPZXdPbkw1NCtMM1BmOVUyR2FlWWw5Z3pzQWZLQncxTVptN1d0eEZ3U3gvcUZLTEp0UHJaQk0rdVhHQVQ2TEptU05pOEEwdHhOTzRjTmRYbGVlVzdFQmQwemRUOTNSaFFKSmhIamtodHpRZmlJRTdjRm9UdlVkZTV6VmlWcWJaMEZ2UEhKMlQxSXYvdHNQbjVURmEwdFZGWm1BU1VSQnByb1NlbGdUOXgxSFREOTJ6dlhkbCtLVHNqN3ZqV3pFL3hsNEYvdFBaZEdrUTNGM3Raa3ZiSUR1Z0x4K3p1bWNCYWhEbHJBd0tYR2dpQzR4d1hoNXpLYk50L0tXbTdUY09QeHdyOHR4ZmIrWElrTHJERnRLMVRBN2tBVG9iakhTYmNRZFgzbGc3dTFwakdnMTBJKzhPQ3p1OHh6S2FaWFJKNzkzc2RiZkV5djkrMnR2VjVLWHRUcnVlcWNHYmFrS2pxeVBHV1RBcHh6WTg2NUkzTGhYVkVtZXhNdzNkZlh0NmFiQ0lXZmhQRDBzY0ovbkkzdFYwdkdMbE1Od1VpWXc4S0Vvd2tXQ0lKQXVVQTZJVGprOGY4SUhBWW1nVEZRSFdWdnRXbGN6eUxKdmUvK1V5ZEFYek96ZzZBK0lJMlVDUUlOQms0dk1mekZTRU5tREpxM1BqUExlbC9wV1ZnK01Ya3lKKzRQTTd5a1o1YnQ2VkxkZVhWRVFza1FtYVJKeVkwQng4MzdmeUdKYmpaT3NoM0RKREJ0WnZNczNtcTdPR0greWVMcllyTXJTU1ladUVBVXFGc1RVRnNJU1MxSzNEdEZFc1Z5QnFZd3hqMDZEbmJjaVh3Z0prUEhjQmp3OEh1MmQ1K1kvOXJLZDJ5aHQzeXRDcU5kckh6TWxmK3FST3FkaHduVGhVSnY0T01qcFpqN0VmM2UwMnVROVo0MFdMZWtJU2Y2SmZVaCtqRHJBMldCaktFUU13ZGxIeE5jWWhId3N5ZzZOcHVLK2xJVzlhVW9EZ1NXQTVzaVVhUXBZVk9JU1ROTlNKcVZYTTQ1TnlXNU1ad2RCUnZPYm43dW92dXkxT1J0MWJBUXM5M2VPQUZNcDF4aXhSWm1kbFZUN2lWRlRoUWttM0xHbUVOUHlIamtmUy9vYm1uU3dFK0NmSHdQRVdRbWdZZkxmM1h5enNOa3c5TXpPeFRZRnNtR3dJYmkyRytXcWMrYnNwaWxTZlluQ2MzWEJGSUg3eHpGWjJJS0k2VlV0TlVydHltTXA0Q1RTcXphT0xJeDE1MGV5MndZSEY2ekRMY2hiVTNKYjV5dzBHd2MrYXljbFZiazdJN3BaK1dNeW9vV3BxOGx0cDdsVEpYSmp3TzI1RFlOalJlZnlTWjRQUkNPeGJDenNueFoxQUkyKzM1V3prb241U3dKT1N0blZNNWF0N055UnVVc0NlbUFyQmVIL2tjUlcvOGs1UFRwWkZSQXlncXlTQmx6cnZmQjAyUy9QVU42ZUpaUWtQWlNtbVRyTVMvSmcwV2dDSWdFa1VIQklDZlB0QUlLaG5LeEtUY1ZkRTNmdkd0dTBQMHNDVmxjN2pnNU94akRJTGcrUks4Z2JVWkdrRUdFWmxaZEwxUVoxS2dkM0toK05zc1pHcTZiamxWNVNOMkV3U1dVclNNS21NczVJRFRvSXdsNG5nVXlnbDdNQm9BK2cxNGx2NStEMUgrOFFOL0RPYkpIY3Nya3ZhVk42aTBQV3lFcEFpc0NFYWhBc3I5dHptQVNzd2xKendKVEJwTUdFdzZtRFFxQ0ltWUZzSUlGYmhxNVFoQ21vLzl5bnBzM2hQU1RvSUMzanVjeUl0V1BXWjlCTDBaV1lvZkJkdEJta2gwenN3WjlpWEVnVGZJZTU2UThrbHZQTkd4YTZDakdQNjRvT2xZSEpTUUpZSDB4Y0Q3d3d2THhmS1RCbWxIcDZqeWM3Ums0RmNQVFJTTlhLditxeW5uMVUyanJSSE8vbDZkUmVJUGpnaEdTcVAvRGhwNGtHVG83QnBwc05rai80NjU4WlJrQVhvbDRLY2FGU09jakJrVDlHMUhOWitwbVMxWG1FVFJnNkdIRTl6Y1BwajUvSmxod0NLVEo1YTR3czVkSzJrK3l6OXVXK214UWwrUnFHbXF3Mk9BSHMvREZVekMrQ2pQWGhEeko1SUpqTWgweDU3OGwzQ0hoamw2L083M2k5UkRyVGI3MGxHVnlxV2l2WVZmSWRLWEJGVWFsU1cxOEkyMWp0d0tmT2pDWS9nWlFQeU82bVhMQlhHMXYxa3kzMG5RRElibmMrY0ErZzRzRWV3MkdNT3RUMHJ4bUphVVhLcGdGbGRKZzJzUHhXZmpjUktLUXlWUWtvTEwyeEpJNjJnNVdudVZkbEZRQXlyTk5sQ1BaSFdBVTdLaVp2aTNwTVNlTlhMKzdxenJQY1QxMWtDK0dmUkljWm03ak05RnJNRjZOMkF0c3hSZ3dyRCtaa2xkWmZsQzltcmtsQ2N2QjlFbXdXOEFlT1REWU5aRVU5V3FSa0h3K1E3SjM3eDR6dTFEd1U1anRRdHBKc3JsTnVKeDZSTTMzV3N4YkVzVG5pNmRnZUJabWZFV1I2aTE3SnpFbDVHWUtHRFd6WVVrbmdCUEFEeVdObU5reEZKeHdMajE5L2E3MU8rUDcxcFBGSVdBMzBzVVlyNUM0RUJnQ1MzZkkybFdVYjl6UVBVNzZNTWFoYXdiRHVZcmFhUkppaFVLV09CNFViRWZhQy93aThLb3lpV2hyZHZCaUNsakJ2cGVEZno0Tm8wVVJVK01IbXFvMWNqV3dtdG5oMHlUTjlSSGdJZUM3bGlqbHVFbVRvZXNhQi9ucmR5Mjk5bVcxNVk1VEZ2bzQybVptKzRFckpiMEdiR3U5QWkxdmhuVXpyQnltYWd5NFYvQ1hCd2JUWDJsTVM4ZEppS1F0d0s4Yi9DcG0reVhWNzBYQzh1dFJzMnNic1JkbTRmRlpPQjBiejlhc1drUk50aFBzSUZaZGtJWDFDdTB5YkJmd1dvd2kwakhFZllML0JmbzhXSTdFcnp6RG9pendWa212QXl2ditielFPb3oyc1hMMzE1MlNmZUxBdVYxM04wMUpKMGlJeitWNk1idEEwdHN4ZXlQVVREVmZjVFlXSmlHTjJIZ0ovdVUwUERBemovdXVxbFNhNk5xbXVoRVRLaGc4aExnSDlNK0J5OXg5L2E3NnRiV3JMYmVkalBvRkZ4aitGdEJnMG0zU3liZFVneG1Ud08vSzlPVnJoc0lGSjhXdWxJUmttSm01RE9uVndHWEFqaks1cUhZOGRrSmFMWUtTaDMvTndjRnBNVlphT1FscEJhczJ3VmEyaG5Wck0rYXdjaUNqS1JMZmNVSXc0YkY3SlA1VjZCR1g3aDYrZmdkRldCM0NjY3RZOFh6Z0tzRnZrbXp5bmU0Y3VhakR2RVFPZUMrbXUyVWF1V1lvckc1UzE1aSt0a2dJK1h3R2FZdDUvd2FaL1J6U2hjQU9Nd3NsdFZ0bkZzV28rYjRZOW9OWitQWU0zRC9Ua1BaVkpDYXRXTUE2TEZrMEZDR09nbzRyNlc5OFhPSXg3L3hER09OLytGUFpqcTFPdTJVOHVrRFlhekYrVldKL2duYitMU1hMd25VQzhRWGdROERFZ2NIVW9qc2tMb3VFQU03eStYNlo3UUl1QVg3WGtnN2tkUG02amxxK2Fub3FhV2tCeThWd3RKQ3c0cUt4bGlSa0pSSUJZOEJESnZzSGpLTVlvNElKNTZQSjYvZTB2MVR5OW1kbWQzcHpid1JlTDlqWENYS3hFR2JHaE9CdW9SdXUyUlRPV3dQVFRKWkxRa0pnUC9CbTRKcmFjYis2YStoczNXcTg3MkpZTm9EQkVBWUNHSTJZUnhxZ3MxaURuOWV1VlF5RnRocTJGZU8xUWtjUjkyRDJWZUJySlAyT2JZcmVLdXhOb08ycjV1L05ZUWNOL3ZaQWk4b0hMSU9FbkQ1OVBzNTlDT25sd0dDTjVheWVVaDE4WG9Xc1ZSUGNBallWd2FFY2ZQWFoxcksyVXVtQUFpN1VWSHRFQWV4Mk16NEhQUENINTJjWFhPSmFLN2VlakhZQWI1VHNqMWRKMmVvd016dU1kT09qNTRaL2RiMWFaL3BMaHVpMW1aayt6UGJnM0o4QzU1dFovMUxOckJxT0s4VXEzeHVyeWtKWXhzRjVOUnYrckFVSlViT29VaXZFU09MTlpBeGVRekpPUHZ3SGorWWZNZlJQNFltdWJ5RDU2MS9PUE1MeGQ4K1V0a2gyT2NaYmE1VWxJUTMxeldnSHNTOWdQRUJ0SGxvZ1NZdUg2SjJaMlc1bWwwajY1Zkl4M1lySHN4cE44SEthNUpSZ0lBVlpCN01lNHFxRnFaUkNiZE81TXF6NldVMnNXR2N3Qnd3SkRablpEbUNYc1BQOWN3cDdnQ04vY01TT2xFcWxFMy82MHhzTEFMYytYZWcxYjVjQlYwdnNyQzNOUkZucVM3b2ptREVNZkF2VDhldHJna3cxYyt2bUtlUUNKQVJ5dVcxbTlrcEp2d2E4cHBGZ0xOWUVkMXBxNjkxeXNFOCtEU2RMU3NnSTY1cUV0Q0UyaXVsZXcvNDM4SkRFeUVEc1JqWVB1b3NsM29hNEJpZ0hUT284NFdnd0ZiY0ROeHdZVEZXMzBXaFZGaUloRHJoVzBnSE05clhvSlZabE5Td2diV0JiMGpBVkdiUHoydWwxUjBMYXdiWkl2QUY0clV6RGdpOExialI0aDZSWGdtVld5OTlyeENUK3AyRnRFYVhHc2Rray9rZ3U5eW5nS2pNYk9sUDF1eE95T1FWUFZQWjQrZkdWTkdLWHg5NXpLckIvVjVvaDdFczdzaWtJVjNsaFF6a2NwSTlMcVMrVHhLVlp0b1Ixbi9QNVhXYjJWc0ZWd0VDMU9WM0djQjBzVEM3R3g4ZjV3Y2dJUHhoWlBNam1DM2Z2NW9XN2Q4KzdaNnNrcElMMUJ4Q3E0dVR6STBkQ2xvdDVMSndwR2JOeFROZXM2RTZKalYwaVVFSVdPazFDaEFySVRpVEtwN1lpYTFVVTBKSEw3VFY0cmVCMUZjdlhySGxyUlJZeTJqTzVIRC84NFEvNTduZS9XMGtOMWZHY2lwSkxuTlBmeis3ZHUrZjVkOHR0a2pjRUVFQ05RMStXSHkwU3Npd3NOb2hqb3hSRDBVTnNSbGNnTXFGSU9hb1ZwaE1rQkNnWU9uYmRjOVMwbzd3VkVoSUNXQzYzWFhBVlp0Y2g3YXA3UksxeXRDZ0xXY0NvVkdJbWwrUFU1T0x4S1F1RlFsdUszeWhaUjFMN0crOVdReVJXaWxVdFlNUHhUR0lnUEZDSWpkazhaRlBRNHlFYlFzcEJHRlN1V0JrSk1TaGdyQ2htZEdJQnphNHg2UURKNU5INnh5NVQrV2hJYm0yZG1YOWlqZlZyYU80N1FVTFNycWFvYXVYSGc0UzBoQmt3VTRKOFpLU2Q2T3VDYzdwZFRVRHJGWkdReUdyaUliWWpJZm44bjBtNjFtRGJTbTYwSGlWTnN0ZndXVW1hNGtJTStaem4xR3pNeHJSalE4clJuV3IvbnBJaWw2d3diRnZDL1BUVWhYRWM5YTdGSXErbm5ocmhpU2VPTWY3TU00dWVOM2xxZ3VsbkZ6K25GVEdKeVZQZFRPU0RGZDlyY1dtSElwMDVMQXhFcmp0Z3NzdVJEaHNkcGRidjU2UnNkNmlmNXR5dzdlbGlvZmYrRGg5SC9kNzhYcnhsRXVOcTlWdG9WWnYrR2xOY1F4cnFNQzFzdEF2NUhOTXowOHpPenJLWWxFcXpSRkZ4cm1tdDNyQW1NUzFoamxLeGkxTEpVV0Z5TlFYUkVXeHV4VmlqckQ5TURsS2hDRk5KQXp3Yko5Tnc1cHJ2ZXBkaUtTd1U2VUFNUVd1RW94a1c5bXgrenY4N1BmckRRZUlvOVBKN2hTVUxpeXYwM2xUZDNVaVZ2SWk2RGFick1LczR4UE45azBhcFhUVmZPN0tTK0o3MWMvQVN4bGRmdmt0aWxmYTNvcGkxdGFIVDJGd0MxaDNtSERnbndwVG9TanU2TTJIZDcrMlNINXNMSnRDMk9NRDNibm51bnpzWDNPSmNNR1ZXTmg0cUx5a3BiNmRhMXdXVS9Od2NVM0lONVdNNVVIdjlGbDFscVNoZDdZd2NzNXJubHE5TmJtL0lsb2RaQmF3WTdNb2ZIY1FxK2E5VnlIV0ZpWFE2WUVOdmlvMGIwbVM2ZzduM1U4NkFWZW5Lc3JIUTBBQXJrRW8vWUxHM0szdnpUREgzc0hPcHowU2w0cGFWM0hRaDZlN09NbkRPQUtlZU9RVXMzRlIzZFhVMXY4RXlwWWpEMTcyZG54d0pBcEh1Y216b0RSTXZTYzI5dVpXSUdlbFNiRnRYY28vcVpBU2JtSEQ1VW1IQW0rM3g1bS94VVRRSWxzeDBidEtNTG9oWldabHFndEVrNThGTUxzL1U2ZFBrQzR2TzB1YWMvbzJjMDk5Zlp4bHJtL05Xc1VtNitidW4wanhaQ0tyK2FUbWh6SFgvckF5cjVEOXBOS3lhN3pPRnBWSWluWGFrMDQ0Z0VFRXcxM3cyanFJa3I2dDlERUVBZnZzNTNac1JVLzkyRTNVZDBzdWFqcVdCQWQ5dE5nSGNPek4yNHM5dzdqZk4vUG5lZkxhK3FVMmV2Q0NteWplcnZxdktHVDA5M1dSN3V1dmZaYzJ4SHJPNWNxNjRCUE1JeCtMWVpNa1JXVmxGS3MxbWJiSTdnYWtXcTdlMmE0WEpLWEtPQ1lNdjlXU0RxMUtoMitvQ1ZZUHZMZGhmMklFUkdJKzU2ZG5pWmNBOVVCK3VwT1dSa0NSZjFlbFkzc3crTmpNNmtvMWpmbG5HWHBQdnJSWkFMZUZvaGxuRktqUWpJZTFoYzVsbVdTVGtxVm5Icko5TFg1MldkeHFiUzhDYVllWFZaNk1TdzJHbzQ1bE1jR05mTnNqR2NFVnNHcUx1RXRVZE80VVpvaFQ3MTVNc3lGOTJ2SnlGcG1QNW5pM2IvbVJtOU1Td0ZMODNqb29YVnpOZXlYeWpBMTdCeXM1dDFZcFY3cjhDTENsOHE5Ni9WZXpJVEVqZU04K0NWZExkRWF4V0VSdk9XVTFNVGo0TTdLaHorb3prYnIvcHBYMGpBQjg1bnZ2RVRJUXp6elZ4elpacnF6bmFVdkwyS295L2JKTHFKV1hKTlNHNXAwZDNJTjVTS3ViL3dLeW0rcmZSRDlndXR1eUxFUkR3SHgvZlVFNmlhTXhucDdEVm1JQzdrRWhFUWFqUlZNcmRSZWpmTFRGOTQ0WDk4MmFoZkdSNDlwV3prYjAxWC9MWEp2VnZkUlhRQ2JwVCtnODlHZmY1ZHoybjYraHk4clRrbXBDWnAwK01HdnEwQzlONUg1ZmVhdDUyZ3JtNkpyaGlqcXROY0ZKYW9wNkV0SXNCYy8yQ3RjM3RBbGlFbUNhc0ttajE1eHBGN1NqRzZwS0xNR1FDcDd1QWIySThiRERweERSTlpqcEtjbjl4UFArUW9EY1RhRjgrWm5kdFdhM0dOREF6TU05MWhZS05BVlVGYklXRXRMd3dQWGZ5NU82b2xMOEtzMWViMlNYbTQvN3lSVlJOejZwYlFGRlBPSnBqcCtPUVIyZTd1ZjJwc0pJdllEVkhRam92Y2t4SkdzWTRHSVo4VjRFT3U4QWQvc2hGRzFyYSsrM1BqaFcyQXI4eUc5c2ZSNTQrbnl6OVhCVUxDSkJ5eXFXYy9qb2JocDk0ei9QRFIxck41endTTWs5RHk5K3ptelk5OXV5eno1NElDak9qNXVOQ2pGMUlza2htWFpFUUVOT3hPRFFkekdueWVpY2hsZFpFMVFYcUk0SFRjQkM2ZjAybFVsLzQ4TDd1UXl4VGNqc3pvOEJmZFQ5UmVKbEZkaWxlV3czQzFab0dGbm15Z3YxRjc1LzQyUEg4OFhmdDZHNXBoblJid1lsbXhrZDNDTjVVS2hSdU1QTnVQZm1BcG9ESEN5aysrY1B1Mm5TdmV4OVFJa3FGYmlvSTlUZXg5SW1uZXpZY3ZYM1B5bU1MM2dBdSswVCtVN09SdmFia05iU2EwOEFFaEk2SCtrUGU4YTd6dWcrMmxPK1ZSTWZLbnppeFBRNjRJWTZqVjFvY2JWc1BDdmpEVXBxSFp6TDgwOFRjREpqMXFvQmhpbHpnM01PQitCOEIvZ3QvL3RKemx1WEF0eW8zbUxuc0U0WGZqajBmek1XMkMxWkhBUTBqa0h4WDZBb2J1dE12Qm8yKzh6a3NPdXF3SkFrQjVzV0txZms4QnZaZm5mUlZDOElyTWJzbWpxUGVNMFpDNUJpZURmak90S3UzaXRVTFZnbWpOWEloeVR2SG1HU0hoTDV1Mkgwa2dTM0hxZWxENjNSMHJQTHp2K0RFZUUvbzNweVA3TFZKMmpwUFREeTQyY2huYkdiMk00SGpRemVQNk9CN3RuVlZtK09PUk1kcVZOTGMweWNHdmZmbmUrOHY5UmIvQXJEUHpBYk5mTGhjYTdjU0V2SlVLYzMvZnJhTEI2WkMvQ29Ram1iWWtsRWlSTUU1eHN4MER6RHNIRThGQVNOaDRBNzl4Yy8yUGJib3hSMldqeHlmSFFRdW1TNzVxNzN4U205c01YQ3IwU3lIVWhRNGZUNTAzTkdUc2J2ZXRiVjdyRm1hT2g2aWQrYnAwZGQ1aS82TmorTzlabjRieHBaRUVlZlVxcEZ3TElXVm41TjhzK2FZbCtPZXFXNitmVHJGRDJjMWQyV0ZGTlZPcGU4Z3BvclBrU1FlSmNzeEpxMGNBOUE1allZQncwRTYvYmNZaDIrOE9MdW1RU21ieWMxUDV2Zk5GUFgyeU94eWIyejN5YjRzSFpkQThxSGp5Nm5BUHR0cnV2TWRPelB6UmtwV2JadUcvRE5qbC9qWUg3QTRlbE1VelE2dXRnK1lKODEvUDlITjhVS3dhdjVlTTZ5dUNSSStERFRsUW5ldjhGOEU3cnJwcGYxSG1wWGxtWmIvNnlSWk4xMTRVK3p0SFlYWUxveHRkZnhDQjZRY2ovUUg3bmYvM2M2dUx6ZW1ZMDMyQ2NtTlA3VVBiMitMNC9nSzcrTmQ1dU82RUw0clVrQ1MvcENiZjdpUjhTTE0ydW9wV3kwR0VBU3VHSVE2RnNnT09tZGZGUDd1RC8vc1FOT21acjNLeDBkbXM0aHRoVm43N0V4a2UyS3ozc1lXcVJOS0djbzRwOHU5RmZqS3U1NmZxVWI0V2hFSldRcXJ1ZTRvNkVaSm41RUx0cnNnOWZPWXZjcDh2TTNNWnpGejdaS1EwOTd4Nkd5R2swVW9yUkxoa0lSekZGM2dSc0dPSWg3QzdOdm1iWmhrSzdBcFlJSWtMbkt6L0s5bnJJZ3hnbmhIbCtNQ2s3dlNHNWVYWXJaVkxsaHhsQzhaa1lsVEJmODczYUcyZnZUSi9CZmUvZnp1UjVMZk8wQkNscktBTmVMeUU4LzBtZm5kRmtVWCtMZzBZT2FmWTdCZHVCMWcyOHlzMTh4blNLSkNKYklBQ2NsWndKT3pLZTUrdG92SFoxd2xqYlJETHBKWjFmSVNSWW1jMEtqQkNUTWJNV00wQ0RTalFKUE9hVlRPam9VcE8vN2hsL1N2SUhEaytwT1BIczl2TGFJOWtXZFBJYkpOQVZ3TzdQSXc2STIwWDZGVmRFQW9QWndLK0hKM2lpKytaM3YzZldkOHM4TDh5ZEd0d1BubXRjK0lYdXpqZU1CODNHdG1XVVA5RXIwa0t5elRab1JBaUFoTFhtNjRtT0xiTTJuM3JjbVFPaWFRNUtMbWM1VWNKRFUrV1l0VExQOFZ6R3dDcWVCRTBUbVhjNEZOaFM0NEtuZ1VaNGNzeTdFYjkvUk4xNmE3M2Z6K0tNZ054M0ZnWVo4dnZLbGtlbW5KMi9iSTZMY2tIUE1BUmdaSVc5S0N1dGFkdUVSU2ppTmRBVjhKSFo5YXB6dW1IdzhMcDdxMldPUXVSZmF6Wm13eDd3Zk4yd0JZUC9qKzBWSXFjL2RrS24zL1ZCaGlPTzk5ZGZwbElrWVF1S2c4clN1U1ZIUWlwMEJqTWsxSkdoTjJ3c0hqVVJ4L0F6aCswNlhuVEMrVW9wOWsrZWhSd2pnMXV4Vm5WOFNSdmRwNzdZck50c1RKTm12cDJDdHRabFQ2QlpheWltQUUwdmlHTHU3Ni93SFJVdXRuRldGVk13QUFBQUJKUlU1RXJrSmdnZz09Ij48L2ltYWdlPgo8L3N2Zz4K" k="name"/>
        <prop v="0,0" k="offset"/>
        <prop v="3x:0,0,0,0,0,0" k="offset_map_unit_scale"/>
        <prop v="MM" k="offset_unit"/>
        <prop v="35,35,35,255" k="outline_color"/>
        <prop v="0" k="outline_width"/>
        <prop v="3x:0,0,0,0,0,0" k="outline_width_map_unit_scale"/>
        <prop v="MM" k="outline_width_unit"/>
        <prop v="diameter" k="scale_method"/>
        <prop v="40" k="size"/>
        <prop v="3x:0,0,0,0,0,0" k="size_map_unit_scale"/>
        <prop v="Pixel" k="size_unit"/>
        <prop v="1" k="vertical_anchor_point"/>
        <data_defined_properties>
          <Option type="Map">
            <Option name="name" type="QString" value=""/>
            <Option name="properties"/>
            <Option name="type" type="QString" value="collection"/>
          </Option>
        </data_defined_properties>
      </layer>
      <layer class="SimpleMarker" pass="0" enabled="1" locked="0">
        <prop v="0" k="angle"/>
        <prop v="33,150,243,255" k="color"/>
        <prop v="1" k="horizontal_anchor_point"/>
        <prop v="bevel" k="joinstyle"/>
        <prop v="circle" k="name"/>
        <prop v="0,0" k="offset"/>
        <prop v="3x:0,0,0,0,0,0" k="offset_map_unit_scale"/>
        <prop v="MM" k="offset_unit"/>
        <prop v="255,255,255,255" k="outline_color"/>
        <prop v="solid" k="outline_style"/>
        <prop v="0" k="outline_width"/>
        <prop v="3x:0,0,0,0,0,0" k="outline_width_map_unit_scale"/>
        <prop v="MM" k="outline_width_unit"/>
        <prop v="diameter" k="scale_method"/>
        <prop v="25" k="size"/>
        <prop v="3x:0,0,0,0,0,0" k="size_map_unit_scale"/>
        <prop v="Pixel" k="size_unit"/>
        <prop v="1" k="vertical_anchor_point"/>
        <data_defined_properties>
          <Option type="Map">
            <Option name="name" type="QString" value=""/>
            <Option name="properties"/>
            <Option name="type" type="QString" value="collection"/>
          </Option>
        </data_defined_properties>
      </layer>
      <layer class="FontMarker" pass="0" enabled="1" locked="0">
        <prop v="0" k="angle"/>
        <prop v="A" k="chr"/>
        <prop v="255,255,254,255" k="color"/>
        <prop v="Arial" k="font"/>
        <prop v="1" k="horizontal_anchor_point"/>
        <prop v="miter" k="joinstyle"/>
        <prop v="0,-0.40000000000000002" k="offset"/>
        <prop v="3x:0,0,0,0,0,0" k="offset_map_unit_scale"/>
        <prop v="MM" k="offset_unit"/>
        <prop v="255,255,255,255" k="outline_color"/>
        <prop v="0" k="outline_width"/>
        <prop v="3x:0,0,0,0,0,0" k="outline_width_map_unit_scale"/>
        <prop v="MM" k="outline_width_unit"/>
        <prop v="11.8" k="size"/>
        <prop v="3x:0,0,0,0,0,0" k="size_map_unit_scale"/>
        <prop v="Pixel" k="size_unit"/>
        <prop v="1" k="vertical_anchor_point"/>
        <data_defined_properties>
          <Option type="Map">
            <Option name="name" type="QString" value=""/>
            <Option name="properties" type="Map">
              <Option name="char" type="Map">
                <Option name="active" type="bool" value="true"/>
                <Option name="expression" type="QString" value="@cluster_size"/>
                <Option name="type" type="int" value="3"/>
              </Option>
            </Option>
            <Option name="type" type="QString" value="collection"/>
          </Option>
        </data_defined_properties>
      </layer>
    </symbol>
  </renderer-v2>
  <customproperties>
    <property key="dualview/previewExpressions" value="fid"/>
    <property key="embeddedWidgets/count" value="0"/>
    <property key="variableNames"/>
    <property key="variableValues"/>
  </customproperties>
  <blendMode>0</blendMode>
  <featureBlendMode>0</featureBlendMode>
  <layerOpacity>1</layerOpacity>
  <SingleCategoryDiagramRenderer attributeLegend="1" diagramType="Histogram">
    <DiagramCategory height="15" minimumSize="0" width="15" maxScaleDenominator="1e+08" lineSizeScale="3x:0,0,0,0,0,0" penWidth="0" penColor="#000000" barWidth="5" backgroundAlpha="255" scaleDependency="Area" penAlpha="255" enabled="0" sizeType="MM" backgroundColor="#ffffff" lineSizeType="MM" minScaleDenominator="0" labelPlacementMethod="XHeight" sizeScale="3x:0,0,0,0,0,0" diagramOrientation="Up" rotationOffset="270" opacity="1" scaleBasedVisibility="0">
      <fontProperties description="MS Shell Dlg 2,8.25,-1,5,50,0,0,0,0,0" style=""/>
      <attribute field="" color="#000000" label=""/>
    </DiagramCategory>
  </SingleCategoryDiagramRenderer>
  <DiagramLayerSettings showAll="1" obstacle="0" linePlacementFlags="18" dist="0" placement="0" priority="0" zIndex="0">
    <properties>
      <Option type="Map">
        <Option name="name" type="QString" value=""/>
        <Option name="properties"/>
        <Option name="type" type="QString" value="collection"/>
      </Option>
    </properties>
  </DiagramLayerSettings>
  <geometryOptions geometryPrecision="0" removeDuplicateNodes="0">
    <activeChecks/>
    <checkConfiguration/>
  </geometryOptions>
  <fieldConfiguration>
    <field name="fid">
      <editWidget type="TextEdit">
        <config>
          <Option/>
        </config>
      </editWidget>
    </field>
    <field name="osm_id">
      <editWidget type="TextEdit">
        <config>
          <Option/>
        </config>
      </editWidget>
    </field>
    <field name="name">
      <editWidget type="TextEdit">
        <config>
          <Option/>
        </config>
      </editWidget>
    </field>
    <field name="amenity">
      <editWidget type="TextEdit">
        <config>
          <Option/>
        </config>
      </editWidget>
    </field>
    <field name="hstore_to_json">
      <editWidget type="TextEdit">
        <config>
          <Option/>
        </config>
      </editWidget>
    </field>
  </fieldConfiguration>
  <aliases>
    <alias name="" field="fid" index="0"/>
    <alias name="" field="osm_id" index="1"/>
    <alias name="" field="name" index="2"/>
    <alias name="" field="amenity" index="3"/>
    <alias name="" field="hstore_to_json" index="4"/>
  </aliases>
  <excludeAttributesWMS/>
  <excludeAttributesWFS/>
  <defaults>
    <default applyOnUpdate="0" field="fid" expression=""/>
    <default applyOnUpdate="0" field="osm_id" expression=""/>
    <default applyOnUpdate="0" field="name" expression=""/>
    <default applyOnUpdate="0" field="amenity" expression=""/>
    <default applyOnUpdate="0" field="hstore_to_json" expression=""/>
  </defaults>
  <constraints>
    <constraint notnull_strength="1" field="fid" exp_strength="0" unique_strength="1" constraints="3"/>
    <constraint notnull_strength="0" field="osm_id" exp_strength="0" unique_strength="0" constraints="0"/>
    <constraint notnull_strength="0" field="name" exp_strength="0" unique_strength="0" constraints="0"/>
    <constraint notnull_strength="0" field="amenity" exp_strength="0" unique_strength="0" constraints="0"/>
    <constraint notnull_strength="0" field="hstore_to_json" exp_strength="0" unique_strength="0" constraints="0"/>
  </constraints>
  <constraintExpressions>
    <constraint field="fid" exp="" desc=""/>
    <constraint field="osm_id" exp="" desc=""/>
    <constraint field="name" exp="" desc=""/>
    <constraint field="amenity" exp="" desc=""/>
    <constraint field="hstore_to_json" exp="" desc=""/>
  </constraintExpressions>
  <expressionfields/>
  <attributeactions>
    <defaultAction key="Canvas" value="{00000000-0000-0000-0000-000000000000}"/>
  </attributeactions>
  <attributetableconfig sortOrder="0" sortExpression="" actionWidgetStyle="dropDown">
    <columns>
      <column name="fid" hidden="0" width="-1" type="field"/>
      <column name="osm_id" hidden="0" width="-1" type="field"/>
      <column name="name" hidden="0" width="-1" type="field"/>
      <column name="amenity" hidden="0" width="-1" type="field"/>
      <column name="hstore_to_json" hidden="0" width="-1" type="field"/>
      <column hidden="1" width="-1" type="actions"/>
    </columns>
  </attributetableconfig>
  <conditionalstyles>
    <rowstyles/>
    <fieldstyles/>
  </conditionalstyles>
  <editform tolerant="1"></editform>
  <editforminit/>
  <editforminitcodesource>0</editforminitcodesource>
  <editforminitfilepath></editforminitfilepath>
  <editforminitcode><![CDATA[# -*- coding: utf-8 -*-
"""
QGIS forms can have a Python function that is called when the form is
opened.

Use this function to add extra logic to your forms.

Enter the name of the function in the "Python Init function"
field.
An example follows:
"""
from qgis.PyQt.QtWidgets import QWidget

def my_form_open(dialog, layer, feature):
	geom = feature.geometry()
	control = dialog.findChild(QWidget, "MyLineEdit")
]]></editforminitcode>
  <featformsuppress>0</featformsuppress>
  <editorlayout>generatedlayout</editorlayout>
  <editable>
    <field name="amenity" editable="1"/>
    <field name="fid" editable="1"/>
    <field name="hstore_to_json" editable="1"/>
    <field name="name" editable="1"/>
    <field name="osm_id" editable="1"/>
  </editable>
  <labelOnTop>
    <field labelOnTop="0" name="amenity"/>
    <field labelOnTop="0" name="fid"/>
    <field labelOnTop="0" name="hstore_to_json"/>
    <field labelOnTop="0" name="name"/>
    <field labelOnTop="0" name="osm_id"/>
  </labelOnTop>
  <widgets/>
  <previewExpression>fid</previewExpression>
  <mapTip></mapTip>
  <layerGeometryType>0</layerGeometryType>
</qgis>
