<!DOCTYPE qgis PUBLIC 'http://mrcc.com/qgis.dtd' 'SYSTEM'>
<qgis labelsEnabled="0" simplifyAlgorithm="0" hasScaleBasedVisibilityFlag="0" simplifyLocal="1" minScale="1e+08" simplifyDrawingHints="0" version="3.4.7-Madeira" styleCategories="AllStyleCategories" maxScale="0" simplifyDrawingTol="1" simplifyMaxScale="1" readOnly="0">
  <flags>
    <Identifiable>1</Identifiable>
    <Removable>1</Removable>
    <Searchable>1</Searchable>
  </flags>
  <renderer-v2 forceraster="0" tolerance="20" toleranceUnitScale="3x:0,0,0,0,0,0" enableorderby="0" type="pointCluster" toleranceUnit="MM">
    <renderer-v2 forceraster="0" enableorderby="0" type="singleSymbol" symbollevels="0">
      <symbols>
        <symbol clip_to_extent="1" alpha="1" name="0" force_rhr="0" type="marker">
          <layer pass="0" enabled="1" class="SvgMarker" locked="0">
            <prop k="angle" v="0"/>
            <prop k="color" v="231,113,72,255"/>
            <prop k="fixedAspectRatio" v="0"/>
            <prop k="horizontal_anchor_point" v="1"/>
            <prop k="name" v="base64:"/>
            <prop k="offset" v="0,0"/>
            <prop k="offset_map_unit_scale" v="3x:0,0,0,0,0,0"/>
            <prop k="offset_unit" v="MM"/>
            <prop k="outline_color" v="35,35,35,255"/>
            <prop k="outline_width" v="0"/>
            <prop k="outline_width_map_unit_scale" v="3x:0,0,0,0,0,0"/>
            <prop k="outline_width_unit" v="MM"/>
            <prop k="scale_method" v="diameter"/>
            <prop k="size" v="40"/>
            <prop k="size_map_unit_scale" v="3x:0,0,0,0,0,0"/>
            <prop k="size_unit" v="Pixel"/>
            <prop k="vertical_anchor_point" v="1"/>
            <data_defined_properties>
              <Option type="Map">
                <Option value="" name="name" type="QString"/>
                <Option name="properties"/>
                <Option value="collection" name="type" type="QString"/>
              </Option>
            </data_defined_properties>
          </layer>
        </symbol>
      </symbols>
      <rotation/>
      <sizescale/>
    </renderer-v2>
    <symbol clip_to_extent="1" alpha="1" name="centerSymbol" force_rhr="0" type="marker">
      <layer pass="0" enabled="1" class="SvgMarker" locked="0">
        <prop k="angle" v="0"/>
        <prop k="color" v="245,75,80,255"/>
        <prop k="fixedAspectRatio" v="0"/>
        <prop k="horizontal_anchor_point" v="1"/>
        <prop k="name" v="base64:PD94bWwgdmVyc2lvbj0iMS4wIiA/Pgo8c3ZnIGlkPSJteVN2ZyIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayI+Cgk8aW1hZ2UgaGVpZ2h0PSIxNjAiIHdpZHRoPSIxNjAiIHhsaW5rOmhyZWY9ImRhdGE6aW1hZ2UvcG5nO2Jhc2U2NCxpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBS0FBQUFDZ0NBWUFBQUNMejJjdEFBQUFDWEJJV1hNQUFBN0VBQUFPeEFHVkt3NGJBQUFnQUVsRVFWUjRuTzI5ZVpRY3haVXYvSXZJckgzcHF1N3FmViswTlVKSXNnQlpRaUFFQmh1WmRiRHg0REhZZzgzN2VNWno4TWM3UHMvdjQ0MmZqMmM5UHNaK2IvQ00vVHh2UE4veHpNallMQisyRVl0QWdCRWdoQVNTak5aV3QxcXRsbnJ2cnE2cXJqVXo0dnVqTWtwWjJWbEx0N3BhM1hML3pvbFRWWmtaUzBiY3VuSHZqUnMzd0RtSFNBQm9vZSs1a25nbVh6NEFWQ1Q5YjdObml2bHRMSzlRTzh6dUZjcG45dHVzL1lYcXpmV3V1ZDY5bVA0c3ByK0xmVzYyYmNrMWxzWG1JZHFYYVNDRVVNNDVLK1o2cm1kejNTZUVVUDE5empuVFh4UFA1c3FYcTExbTkwUVorczlpNmpYZTE1ZFJURnVNN2M3WFoyYmZqWjlteitXcXYxQWRNMjFYdm5KbU92YlQ3blBPYzFZa1h0RDRzdm1lejlVcFpubG1BaU1CbWJVcjF3dm51bVo4SjdPMnozVGdDdjI1ak5mTi9oekZFTDVaR1lYcU5Scy9zM2JsNjUrWnREMGZ4SE1FYVhZNEk0TEpOZkRHYThYa0tVU014WERHZkhtTEpkUmkzN01ZRk1QRjh2M1ppK21qZkxORExxS1lLUU1vOWs4Nmt6NHhYczlxcU5sbmhsSzFKQnFRN3g5bUJuMmVtYnlJeUtkL1Z0OGh4amFZRWF3eGY2NTZjdVUzd3V3ZmJ1dzdzK3Y2UWNnbERoU2F6bkpkTStzZnMzY3cxbXNjMjN6bDVudGZZeGxtNzIyV1I4N1ZTR09GTXlVNFVVRXg4a0VoR2NOWVZ6RXNmaWJ0S0taY1l6czhIbzhNQUl3eHhuUEkwZUw1Zk55cFVKdUw1VnF6ZVVlenR1UXJwMWdheURWcm1iWW5YK2RkTEhKTlBhSmh4UkJncmpJTFRWWEYvQmJ0cUt5c3BEYWJUUTZGUXZaRUl1RjJ1OTNsbE5JQXBkUkhLZlZKa3RRcVNaS1RNVVpqc1JnZEd4dXpBL0FDRU9VeGo4Y1Q4bnE5U1ZtV29hb3E0NXlQcUtvNnpCZ2JWMVYxbkRFMkhvbEVCbVZaanJ2ZDd1VEl5RWhlcnB5dnYyYmFONFh1bVQxWDdQM1ppbGFaWjRzaHdKbjhBd3NSMDB3Sk1KOE1XT3pMRTBLbzErdUYzKytuTHBkTDd1N3VkaWVUU1MvblBBQ2dEa0FIQUE4QU93QzdKRWx1U3FtWEVPS2tsTG9sU1FvUVF1eWNjNmlxU2hPSmhBekFxUlhQQ0NHUUpDbHF0Vm9acFpSeHpzRVlDekhHZ295eENHTXNxdjBPQVVnQ21BUXdDcUFmd0tEYjdSNWZ2bng1S0JRS3hRRWt1N3E2aXVySFFySmRMdUkxeTJ2c1gzMmZGNUpoemVveUd4ZXpjWjhWQjh4SEZHYWRaR3lBV1hrekljQkNiUUVBcDlOSmZUNGYzRzYzdmFlbng2dXFxcHRTNnJWWUxGV3BWQ3JBR0tzQjBBaGdKWUFOU0hNMHVaajNwNVNLK2tBSUFRQXdOaU81UElRMDhSMEYwR094V003YTdmYmhlRHcrcWlqS3NOL3ZEOVhWMVVVbkppWkNBSlQrL241VHdqSytzLzUrTWR3ekYyTXBOSHNVZzN4NTlQZmtZaklacVg2bWpRRnkyOWlLTFN1ZkRKaW5zMlFBTFFDdUFYQWxZMngxSXBIWUJNQTkwL2Jyb1NlMldZb3dYZ0NkV2tJcWxVSXFsV0lBemdQWUErQVFnSThCZk1nNUh6VHIvM3djTUo4U01oUHVKSzZaOVc4eEhMQ1llb3Y2eHk4RytQMStDZ0N5TERmNGZMNWJPT2VmR2hnWXVBN3BLUmFFRUZCS29VMlBTUzBiMVgzT1NMR1pBekFBaXZoT0thV0VrQWJPK1JjbUppYStNRDQremdERUFRd0MyQ2xKMGt1TmpZMTdrT2FlbHcyeXB1RFpjcWRwaGVhUjdXWnpMUjlXcmx6cEhoa1phWXBHbzJ2aThmaW5BSFFTUXNvSkllV2NjeThoeE1vWVUzUlphSTd2bHhMNjkyU0VFQVpBbUMrU25QTnhBT01BZ2dEMjJXeTIxeDBPeDhjdWwydXd2NzlmL0ptS2toVUxOYVRZOGNtVnA1aDZzOG96RW1DK2lpNEdzOUYweFhjZ20zWDcvWDU3TEJZclR5UVM2eW1sNndraGpaenpGczc1YXM1NWphNGNHUE5xV0NpRVowUkdxOWJlVzd3N2ROZDdDU0VmQStnaGhKeHVhV25aSDR2RmpvZENvVkE0SEZaTXlweUdRcHBzTG5tOUdGbDlwb3JUTkNVa243S1E3eVh5VlpTcjNKbG9keDZQaHdLd1JpS1JPa3BwQTRDVmpMSHRBTFloclpGU1FzaHNaYkpGQTkwN1JpbWx3K1hsNVR2RDRmRGJ5V1N5aDNOKzN1bDBEZ05RcHFhbVptWHlLcFRIcEQxRjZRMDU2K1Y1dkRPTTEzUGR6M1V2MXpWamVURHhtREErNzNhN3FkdnRyZ1B3OTBnTDZad1F3aW1sbkJDU0FwQUFrQUxBTCtPa2F1K1pJSVNrSkVuUzMzc0x3S05PcDlQbmREcHo5bXV1L3M5M3JSaGFNSlpSNkg3bTJrSW53T3JxYXA4c3k3Y0ErSm5vYkkzd1VnQmlHdEdwQzRBNExna3hVa3FudEQraC90NFRoSkMxUHAvUHV0QUpjRUVxSVZWVlZRQWdEdzhQM3dOZ082VjBEYVcwU2xHVWN2RWlXbUpZdVBMY2ZFQ01qK2dMQmdDU0pQVXp4dm9JSWUrV2xaVTlPejQrdm45SkNTbXliS3ZWV3E2cWFodGpiQk9BMndraGF3a2hBUUNLWm4rN0ZDYVR4WUNNQXFPWm14UUFmWlRTZmFxcXZnUmdINlcwWDFYVitKSVNZbml1cHFhR2NzN3AxTlJVVXp3ZVg4MFkyOEk1dnhkQWs1WlBHRU12Rzd0bGlaRUVJT3Y2ZngrQVp5bWxlKzEyZXcrbGRCQUFJcEZJWGtQMWZDZ2hzMW9KRVEzTWxkZXNqQ0wrWFZZQVh3TndCK2U4VTVJa1JWVlZoWE11T0o2TXBTbTNXRmdCS0p4emhWSUtRc2hHVlZVM0lyM0s4bk1BLzZwLzJEZ21ZcXpGZlRPbUlUN054clZRM3F4NmN5a05NQkZBTHlibEtydTh2THpCNFhEOEdkTGFIVWRhcVVqZ2oxT3hLRlZLNFlLeWxnQndRSktralE2SHc1MVBRU2gyRE0wVWozejU5WjhFRjR5ZGhRWEdJZ1hMUW5udGRqc0FJQjZQM3dKZ095SGtaa0xJU20zRllrbkdLdzB5TXFJc3kzRlZWVS9Kc3Z6cmlvcUsvMjlnWU9Eb1hGVlNMRzFrN3MyM0VsSlpXU2xQVFUyNVk3SFlQWVNRV3pubjZ3RzA2UXlzUzhSWE9qQUFUSklrY001bFFzaEJRc2liaXFMOGxoRHlydDF1VDBhalVWTjNLcUEwU29pc3o1aEwvaFBmQ3hWdTFtaDkzbzZPRG1za0VtbElKcFByQ1NIZlJKcnc3RnJkd0pLU1VXcFFBRkJWVmFHVU1zYllXczU1QXlHa2luT2VqTWZqSi8xKy95aVFYNDRYMy9QSi9mbnk2ejlOQlVsakppTng1aW84SDhmVXlpNW5qTjNER05zaFNkSnF6cm5NTDJpM1M4UTNQNkFBckl3eHdZWEtaVm0rSDhBUE9lZWJBTWhHUlVKQWY4Mk1BeHJ2NThxZjlUbVBTc2dtQUsvamduSXhoV3hGWTBucG1MOWs3UGNwU1pJNElXU01FUEx6K3ZyNmdObjQ1Nk1QTEZRbEJJQVBhY2ZML3dtZ1Rmc05MSmxVRmhMRStDb0F4am5ueHpzNk9oNEVNTnJWMVJXZFNVRXpWVUpLeWdFQjFBRDRMSUFkV09Kd2l5R3BoQkNWRUpLU1pmbkhIbzluMDdKbHk3eWw1SURUTXBvOVhHemhobWZLQ1NGM0FmaC94Y3N0Z0E1ZVNnVUlFSUFxbkJ1c1Z1c1B2Rjd2ZGN1V0xYUG1ZREFYemFSS3FZU3NKWVI4alZMNkFOSkxRM05tMGxsQ3lVQUJVTWFZSWtrU1VxblVYMHhOVFQwQ29BRW9qUkl5NTNaQVFvZ1h3SFZJYzc1eVhKRDFsdVM5eFFWRmxtV1pjdzVWVlFjN09qcHVCTkRiMWRVVkIrYk9EZ2lZTE1NVWtndHpQWWYwQnFDN0FQd0JGNWJUbHFiZVJab0lJU2xDaUVvcFRSQkMzcmJaYkd2cjZ1cnNCZVQrdkRRMDdkNWNLU0VkSFIwK1daYS9BT0FGa25hT1hDSyt4WjlVQUNsQ1NJcFNtcUtVL2dPbDlIcWZ6eWNiNlFPelZFSXVlaVdrdXJxYUVrSm9KQkxaeURtL214RHkyYVZsdGNzR0dkcWdsRkxPK2YyYzgrVGs1T1NvM1c0LzduQTRhQ3dXdTZpVkVKa2I1dkdaRktUbEFRRDMxTlRVZnllRVhFTXBwYXFxS2xoYTJiaGNRQUZRVlZYanNpeVhjODd2VVZYVkNlRHIrb2RtTFFOZXpCUnN0OXNwZ0FDQTl3Z2hVNFFRNGU1enFhZU9wVlNhRktPVXBpUkpPZ2ZndXdEY0Z6c0ZtOGFHQTdJcFdWd3pxdEh4ZUh3NUllVFByRlpySjdRMVJLU2RJWmR3ZWNMS0dBTmp6QWZneXo2ZmIyTk5UVTBWZ0l3SVorYVVZdWJ3S2o2ejdJQjZtQldrenhnSUJHcGtXZDdJT2IrUE1lYm1uTXRZa3ZrdWR3Z3VaeWVFTkVVaWtVZkd4OGZYZXp3ZXAyQmtab3pMZUUzL09TM3lxYkZHY1Y5ZllHVmxwVFVhalc1QzJwbDBvNklvUzdhK1B4NVFJQjBFUUZHVWV4UkZ1VFVXaTYyc3FLZ3daVlo2ekprU0FzQWRpOFcrUmdqNXRDUkpVQlJsaWZEK3lLQjVyOHVjODd0VVZXVUFEaFpheUpnekpjUmlzYnhBQ0JtQVppZkNwUmVPbDlJbFNDUWRrVUlGY0FUQVk1aU5PeGJYTGNVVkFpR2tIR25YcXVjSklXNEExc1ZpN3lzdkwwZGpZeU5XclZxRlpESUp6aThFbDFRVUZXNjNDeDZQQng2UEc1SWtJeEFJd0dLeGdGS0s4dkp5V0sxV2NNNlJTcVV3T1RtSmlZa0o5UGYzNDlTcFV6aDI3QmpPblR1WHFZc1VpRkVqNmpVK3E3K3VoLzYrYmpBWEFoUktxUXdneWhnNzM5SFI4VWtBb2E2dXJtU2hqQUp5c1lKamZYMDlKWVMwY2M2L0JpQ2dZNjhMbnZpdXVPSUtiTnEwQ1ovODVDZlIwTkFBUmNrT0lzVVlnODFtaDhPUlRwUks4SGc4a0NRSmxGSzQzVzVJa2dRQVVCUUZzVmdNVTFOVEdCc2R4Zm1CQVp3K2ZScHZ2dmtHRGgwOGhKSFJVYVJTS1ZCS2MwWk4xUk8vbnBnS0VWWXhoRmVJK09jWXdudmFUZ2pwNk8zdHZSZkF5d0I2WjFTQStKRnJ6Z1lBaThWU2gzUW8yM3UxbDF6d2hFY3BSV3RySys2ODgwNXMzNzRkMTE1N2JTYThMakNkNCtnSncremF0SUZkdmh5cXFpSWVqNk9qb3dPLytjMXY4TUcrZmVqdTZVRXltWnhHRERhYkRRNkhBemFiRGJJc3cyYXpRZHUzQzBKSWh1UHE2eGJjV3Z4T0pCSlFWUldxb2lDcGNXTkI2S0tjK2VTUWdpTnJTc2xEQUhvdEZzdXdvaWp4SFByRDdFSnpFRUsrQU9CTGhKRGJGdEFVa0JjT2h3Ti85YjN2NGI3NzdrTmRmVDJBTkxjVEE1VnJ5ak9EbmdnRVJIN3hlYWEzRi8veEgvK0JuLzcwcHpqVDF6ZXRqT2JtSnJTM3RhTyt2aDdsRlJXb3I2dUR3K21FSkVtUUpBbUJRQUFPaHdPRUVEREdrRXFsTURRMGxDWTRWUVZqRE9mT25jUFUxQlFtZzBFTURRM2huWGZmUlN3V20wWjBPZjgwSlFZaDVQK1JKT2s1UlZGT0ZxT0VGRVdBRlJVVlRSTVRFMzhMNEg1TjY1M1BkNW9WcnJ4eU5UNy8rYy9qaVNmK2U5WlVxQTh3RGt5ZnNzd0dVanlUU0NTZ0tncHNkanNTaVFRc0ZndTBMWTdnbkVPU0pBd01ET0Q5OTkvSDk3NzNQV3k3OFVhc1hyMGFIUjBkYUdwdVJpQVFnTTFtZ3lSSldRUWl5amRleXdmT09aaXFJakkxaGJOOWZUaDI3QmoyNzkrUFYzZnR3dEZqeDVEU2NjNzVnaVJKVUZVMUJPQmZBb0hBdDBkR1J1TDYrd1VKTUJjb3BVOVFTajhIWUExalROR016Z3NXTlRVMXVQMzIyL0ZmL3N2ajZPaFlscmt1dUlyZ09FSk80NXhucGtJekNBSmpxZ3FtUFN2aVRRUFpSSnBNSmhHSlJIRG16Qm40ZkQ2NFhDNDRIQTdZN1haWUxKYXNPbklSdnZGUFlWUmE5SVRLR0VNaUhzZFVOSXB3T0l5SmlRbjgvcTIzc08rREQzRHc0RUdjT0hIaUludXplRkJLRmNZWUpFbDYxZWZ6L1hCMGRQUzFRbm55S2lGZXIxY21oUGc0NTdjeXhob0lJWGxQQmJyVUVBUFgyZG1KcTYrK0dxMnRiVmxUcHlBMlJWR3lwbUV4b01sa0V0Rm9GUEY0SEJhTEJYYTdIWGE3UGFPQVVFa0Mwa3RSV1VUSEdNdHdWcHZOQnJ2ZGpvcUtpcXgyR1pHUHl4bXZHd2xRLzEyU0pEaGRMamljVGdRQ0FiUzJ0c0x2OTJQMWxWZmkwS0ZEZUdmUEhyejErOThqRW9tVWZPWmlqREZLcVJYQThuQTRmSGRqWStQdkFTaG56NTdONmRpY1Z3bUp4K051QUJzQmRITE9mZnpDSHQ0RkNVRVFWMXh4QlRvN082R2RXcFJsaTVJbENTcGpBT2NBNStBQWhvZUhNVEV4Z1pHUllRd01EQ0lVQ3NIaGNNRG44eUVRQ0tDaW9nS0JpZ3E0WEM3SUZndTA5ZERNOUtzb0NtUlp6a3l0Z2loRm0vU2YrcllhVFRCNnppWTRyQm5ITk1wM1J0Tk1hMnNyMnRyYWNOVlZWMkgxRlZlQVVJckRodzVoY0dqSVZGNmNROGdhazJwS0pwTTNEdzBOMVNBZDVUL0xMS05uZWptalkybmNNQURnUCtIQ3FVQUxXdk1WSFZ0Zlg0KzZ1am9BNmNGS0pwT1FKQWtXaXdXY01WQnQrdVdjSXg2UDQ2V2RPL0hXVzI5aDN3ZjdjUHo0aFNuTDcvZWh1YmtabXpkdHhtYy8rMW1zV2JNR2RmWDFrQ1FKakRFb2lwSWhjSXZGa2tVZ2dtc0s2T1U4STJIbDBsenpjVUw5TlNOQnFxb0tTaW1xcTZ2eDZjOThCcXM2Ty9Ia0QzNkFWMTU1QlNlN3VrQW9CWi9ad1RyRlFyamlVUUJWcVZScUs0Q2RTSjhLWmU3R2IyYXA1cHpENlhRR1pGbStCMm1yOTZMWlFMNnNvNFAvKzcvOUd4OGJHK09NTWE0b0NtZU1jVlZWZVRLWjVKRkloS3VxeWljbkovbnJyNy9PUDMzcnJaeFNXckJjS2tuOHBwdHU0di80anovbVU1Rklwa3hWVlRsakxKT00wRjhUMy9OZDA1Y2w2a2lsVWp5WlRQSmtNc2tUaVFSUEpwTThsVXBsM3MxWXY4aW5LQXBQSnBPY2M4N2pzUmgvOFhlLzQzZmZmVmNwKzkvb0JSK21sRjVUV1ZrcDYrbEwvNW5GQWZYVUdZMUdyd0Z3bjZCczNXTUxtZ3NDMHpYWlJDS1JtZGJzZGpzNDU5aTFheGQrOWZUVDJMZHZINEQ4Qmx5aHJCdzRjQURCWUJDblQvZmlpU2VlZ012bG1qWlY1dUp5czJtM0tFTk05WHJvNnhQUG1Ta3ZtbVlLMldMQnRSczN3bHRXaHRHUlVYejQwVWVZbXBxYWE3dWhrVGFjbE5JTjRYQjRITUFwUVYvNlQxTWxwTDI5M1U0STZlU2NieEl2c0ZnUUNvY1JqOGVoNmdSdU1UaVVVa2lTaElNSEQrS05OM2JqN1QxN01ENHhVWEFRdUNZdkJvTkJIRDE2RktGUUNGdTJiTUdHRFJ0UVUxT1RxVU12azVuSmZ2bXVtU0Z0RDFRUkRFNGlGQW9oRm9zQlNKczduRTRudkY0dnZGN3Z0RHk1aUwrOHZCeHIxNjdGd3c4L2pQLzFELytBRXlkT0lCd09sOHg0VGRNUmtENlZUQ2I3WFM1WHo5VFUxTFI1MzFRSnFhdXJxNk9VdHF1cTJrQzBVM3ZtdkhVbEFDRUVrNU9UQ0U1T0lxb05GbU1zeS96QkdNT3VYYS9pL2ZmM1lXQmdBTURNbHNCaXNSaTZ1cnJ3eTE4K0RhL1htMWtuMXJmQm1NZU1PNHJydWVwV1ZSVlRVMVBvN2o2Rjd1NXVuRHQzSHFGUStwUXVpOFdDOHZKeTFOZlhvNldsQmRYVjFmQjRQTERaYkRsbFNaMW9oWHZ2dlJmZDNkM2duT1B3NGNOUUZLVlVCQWhGVVRaUlN0L3Y2T2pZRFNDaXRTZS9FcEpNSmpkUVNsczBDM3dTNldOTUZ6VEVkQk9QeHpFOFBJeng4WEUwTlRWTjB5SlRxUlJlZXVsbGRIVjFYVlI5enp6ekREWnMrQVE2T2pwUXI2MnlHTnNqNnN6VlhqTUlFMDgwR3NYUm8wZngxMy85VnpoNDhDQUdCZ2F6RE9vZWp3YzFOVFZZczJZTnZ2akZMK0lUbi9nRW1wcWFzc29ROWV1blo4NDU3QTRIL3E5SEhvSEtHUHI3K3pFNE9IaFJmWkVIQ29BcW04M1dickZZV2dnaFIvTXFJZFhWMWJTNnV0b0s0TGVTSkUzSXNzeXhpTnl0aERMeHBULzdNNzd6eFJjelNvaFFGSkxKSkQ5LzdoeGZ0M1l0ZDlqdEYxMmZxRWV2VUJnVmtXS1VFTDJ5d1JqakowNmM0RC82MFkrNDIrM00xRVcwUTNtMEtGWlo3WkJsbVcvZHVwVS85ZFJUbVRLTUNwTCtlektaNUl3eGZ1REFBZjdFRTA5a3lpL0JtSWo5UWU4RCtCYk05b1RveVhWa1pJU09qSXpVRVVMcUdHUE94YmE3VFhDYjR5ZE80T1RKazVucmdodElrb1R5aWdvODl0aGoyTFI1TTJUNTRsNnQ2OVFwZEowNlplb2lOWk1wVGRnVkthVTRmUGd3L3ZtZi94bFBQZlVVWXJINHRGVVBZZllSb0pSQ1ZWVWNQSGdRLy9Jdi80THZmT2M3bUJnZnozQkIvWFN2endNQXk1WXR3ODAzMzR5Tkc2K0ZMRXN6WGg4dkFySlc1bklBVzJwcmErMTFkWFZaUVMyemxCRE5pcjFWVmRWeW5sNXVXMVR4WEVSbm56NTlHaWRPbk1ENDJCaktkU3NTQUdDMVduSGp0bTA0MjkrUGtaRVJIRDU4ZU5aQ2VIOS9QODZlUFF0VlZiUHNmb1dVRVAwem9sNVZWWEgyN0ZuOCs3Ly9HMTU2NldXY09uV3E2SGZtbW9KMDdOZ3hSS2Vtc0h6Wk10eXdkU3VhbTV0TkNVcG83bTYzR3gwZEhiampqanR4NU1nUlJDSlRNKzZEQWhBSDZMZ0JOQTBQRDdjQU9BV2RZVHBEZkM2WGl3Sndjczd2UmpxRzM2TGQ0ekU2T29yVHAwK2p1N3M3Uy9ZaG1wZEpRME1EdG16WmdodXV2eDVXcTNYVy8vekp5VW1NajQ4amtVaVlHcGFObkRIWGIxVlZFUXdHc1hQblR2enFWNy9HOGVQSGkyNkRVVUU2ZnVJRWZ2R0xYK0RERHovTUtDMjUvbHljYy9oOFBtemZ2aDAxTlRVNWxaaUxBVTl2ZXFNQWZLcXFibFZWMWFwZjhzMnk3Nm1xNmxSVjlSWkNpRmZyMEVWSmdBQXdPamFHRHovNkVJRDVBS3hac3dZM2J0dUd5c3BLMDJtcUdCQkNNdHFxMmIxQzVRbmJaRFFheFlrVEovQTNmL00zT0hmdUhGUlZ2YWlwOFBYZHUvSDZhNi9oeU1jZkE0Q3BZNnhvbjlQcHhKbzFhN0Jod3dZRUFvRloxNWtEK3MxcUFRQVBRcWZRRWtJdXlJQjJ1OTNuZERwWEFyQnJqVnRVMDYrQWtHLzYrL3Z4eWl1dkFzZ21MR0hYOUhxOVdMVnFGVzYvL2ZacHkyYkZZamFFYTF6dm5acWF3blBQUFlldmYvM3JPSC8rZk1Za01sdE9KTXIvNWROUDQzLy83R2NZR1JuSnlMcjV5bjM0NFlkeHhSV2RzNm96RHlnMGM2QWtTWFlBMXhCQ3ZEYWJiVG9IOVBsOExYNi8vMWF0b1F2YTY2VVlSQ0lSOVBUMG9PL01HU1NUYVpIRFNEQStudytiTjIvTzJQSG04cDN6VFh2Nk5qejc3TE40L3ZubmNmcjA2VGxSQUFSaGg4TmhkSFYxNGZYWFg4OGl2RngxckZpeEFpMHRyU2ozK3krNkRXWnRncVpQK1AzKzFRR04xWExPR1NXRVVML2ZUMGRIUjJzbUp5Zlg2K1dYeFFpaC9jWGpjUXdPRHVMSWtTT0lSdE5oanZXeUlDRUVicmNiYTlhc3ljaUJzMEV1RFZpdmhPaWYwY3VHQnc5K2hKMDdkMkwvL3YybTAvakZRRkVVOVBYMVllZk9uVkFOaG1ieC9ucHVYRjVlZ1dYTGxxR2x0VFh6ekZ4QzFFOHB2Wm94bGpuVm5uTE9XVVZGaFRVU2lRVEM0ZkJ5dmFQbFlvYXFxZ2lGUWpqOGg4T0lSaThNcnY3ZGJEWWJtcHViVVZaV0JvdkZNdU02OUV0OHh1dG1Tb2krYmVGd0dNOCsreXoyN2R1WE1RVFBkYitQalkzaHZmZmV3K1RrSkZUTkJ6S1hjbVMxV3RIYTJvcldFaEdnS0RPWlRLNk54V0pWSG84bkU1d1NOcHZOSjh0eUhZQzZ4YTU4QUJjNmp6R0dVNmU2TS9ZMG94bEVsbVdVbFpXaHFha0pMcGRyVnZYSXNteEt2TWI2OUJ3eEhvL2pURzh2ZnZxVG4yWnQ1NXdyQ0FKTHBWSUlCb1BvN3U3T3JDT2JRU2dwZ1VBQTFkWFZBSkRYUTN5MjdaRmxHYUZRcUNVWURIcVJqcTZRL3V1V2xaWFZPSjNPU3UxaDRjZS9hSW1RYXc2blRGVng4c1FKVEl5UEk1VktUU05BMGZHYk4yMUM1U3cwUUl2RkFxZlRpYkt5c3NKdDBzbGdodzhmeG5mK3gzY3dNanA2MFJwdnZyb1VSVUV3R01SN2UvY2lPRG1aZWVkY0ducERRd1BhMnRwZ3Q5dm5mSDJZY3k1V1AxWmJMSmEycHFZbUg2QVIyVWNmZmRRUWlVUnFOS3Y2b3JYL0NZaDFJSlV4bk83dHhVUXdtSEhKU3FWU2lNZmppTWZqR2VXa3Fyb0tOdnZzbDd1TFdRa1J4TjdkM1kzMzNuc1BlL2JzeVpsM0xxQmYvKzN0N2Mxd1FETVpYeENqMCttRTMrL1BtR1BtY0dXRUFwbHdIckJZTEJYUTlwYlQ2dXBxR28vSDIxUlZiZEEvZkRtQUVJTFIwVkdNalkxbEJrQXNlZWs3dDZXbEZXNjNlOGJsNXlJZXZSSmkvSDN3NEVIczNic1hvNk5qSlhPREVoQjFCb1BCckgwd3VaNnoyKzF3dTkyejZvdGl3TFh6aTFWVkxUOTM3bHdWQUZDTHhTSURhQWZRcEQxM1dSQ2c2T3hZTElhSmlZbU1scW1xS21SWmhpekxHZVdocmJVTmZwOS94bXZEVG9jRFRxZlRWTjR6Q3Z2QzRQelJSeC9oOE9IRG1lZEtDVkgzMU5RVVVxblV0T1UvNDNPeUxNTnF0YzVLSVNzQ2xITk9OUmV0cXNuSnlSb0FvQTZIZ3lKTmZEV2w3cEQ1aHVqWWNEaWMyWXlqWDZRWDAySmRYUzFxYXFyaDlYZ0FGRThZYmUzdGFHdHJ5N3FtVnphTUxsbG56dlRpNU1rVDZPL3ZCMkMrUWpIWFNLOFRUMlNJMEF5RlhNZm1DQXpwTTBpZ21XRWFpQllmMEVzSWNYUE9aY1pZRXBjSkI5UkRiTWNVUG9NaXlvREtHT0tKQkFLVmxlanM3RVJiZXp1QTRna3dORG1KME9SazNtZjBYSEJnWUJCalkrT0l4K096WG4yWkRRaUtpd1JCeUlWVUF1anBxZzNBRlkyTmpUTHQ3ZTB0aCtaeWRUblkvNEJzTXd5QXpIWkpRa2lXOHdFQkFPMmQ2eHNhVUsvdHBDc1dnNE9ER0J3YXVtaDNyRktDRUFKdldSbWNUbWRPRVdNZTIwcEora0JFTDRDQXkrV3l5cWxVcWc0WEZvZ3ZDKzZYdGpsSmNEZ2N1UGJhYTlIWjJablpLSzQzR3V1L3Q3YTJvcjI5SFZhck5XT3lLVFF3c1hnY1UxTlRTQ2FUMDVienpMaU4zKytIcjZ3TURvY2pyMTF1THFDdjMyNjNRNWJsekRzWjJ5WitxNnFLVkNxRlZLcGtHOWlwTHJLR2ZXaG95RWtCdE9EQ3Z0L0xBbTYzR3kwdHJianV1aTM0eWxmK0hKOVl2ejVEZ0dMbFFwS2t6R1p5QUdocGJzYUtGU3RRVlZWVnRKTUJZd3p4ZUJ5VGs1UFRudFV2K3dsQ3I2MnRSWDE5UGZ4K3Z5a2hsQW9pdkZ3K3JSMEE0ckU0d3FFd3d1SHd0SHR6QlYxNTFrZ2s0cFdSUG9qT2prWE0vY1NVS3FiYzVjdVhZL3YyN2JqLy92dXhjdVZLQUZscmtWa0VKcmhDWlZVVlZxeGNpYlZyMTZLL3Y3OG9EcGhJSkJBTUJuSHUzTGxwaEd0R1hEVTFOV2h0YTBOdGJTM09uVHVYOFdhZVMramZpZk4wd0tUR3hrYllOVHVuR2VHTGRnY25KM0h1L1BtTWtsU0NxVm0vd1UxT3BWSStHY0JWU00vSndDSWpRa0ZNd2dQRTQzSGpSei82RVc2NjZTWTBON2RrYWIyQXVZWUtYT2pvTld2VzRMOTkrOXY0M2U5K1Y1U0dta2drME52Yml6ZmUySTExNjlabEVia1JpcUpBa2lSczJyUUpaODZjd2Y3OSswdXkzVlgwUjNtNUg1MmRuZmpVelovQ0F3ODhnRUFna0ZIQ2N1SHMyYlBvN2UwRmdLeXdKbk1JNFNFTnBMMmtPMlNrVDdSY2RHZDc2RG5lc21YTHNHblRKdHgxMTkyNDVwcXJVVjVlUG8zNEFITURzYjRzbDlPSlpjdVg0NkdISHNLTEw3Nkl3Y0hCbkp4UWJGWWZIeC9Ib1VPSE10ZU01ZXFmQjRCVnExYmhoaHR1d0FmNzNzZTc3KzNOWEo5TGs4ekdqZGZpbm52dXdlYk5tMUZYVjQvS3lzcHBDb2krTDBRYmdoTVRHQjhmejdSbkhwUVRxd1RncndDVVlaRnNQdEs3RXRsc1ZseC8vUTI0NDQ0N2NNY2RkK0M2NnpiRDc3OWdVRGFiQ25QSlhXSzZzdGxzcUtpb3dPblRwekV4TVlGb05KcFhWdU04SFRkdysvYnRHV0ZmY0dTemVtMDJHNnhXSzV3dUovYnQyd2RGVVM2SytQUmN2YUtpQWpmZGRCTWVmUEJCM0hUVHplanM3RVI1ZVhsR0FUSHRBNjJQa3Nra1huM2xGYno5OXR1bDNLWUpwRG1nQkdBY3dBa0p3Sk5ZSk1RSFFDTThHOHJMeTdGKy9UcDgrY3RmeHZidDI3RnUzYnBNSUhIeG5MSFR6Ymloa2Jnb3BXaHViazV2Y0E4R01UZzRBRVhKUFZVcWlvSklKSUtycjc0YXRiVzFjRGdjQlJVTXA5T0o1dVlXZEhWMVlXSmlBckZZYk5ZY1I1aVc2dXJxY08yMTErS3JYLzBxN3J6ekxsUlZWV1VVajN4L1FtR09HaG9hd3ZQUFBZZDMzMzBYOFhnY0pRWUJFRVk2Y3RiQ0RqWmtsaG9iRy9sOTk5M0hqeHc1d2hPSlJHWVBiTDVBUVdhQmc0d1FBWDA0NTN3aUdPVC85RS8veEsrNG9wTURNTjJQU3dqaGhCQXV5ekwvNmtNUDhXUEhqazBMRW1RV2JFaWtzMmZPOFB2dnY1L1gxTlJreXFTVUZ0eWpLK29WdjZ1cnEvbGpqejNHOSszYnh6bm5XWHVoellJWG1mWExHN3QzODF0dnVXVSt4M0VJd0F1NDFNUTAwM1RiYmJmeEhUdDI4SGdzeGpubldWR2k5SU0rVStnSFNaUVhqVWI1Ung5K3lOZXRYY3R0Tmx0bWMzaXV0djNrSnovaGZYMTlCUWRlVCtoalkyUDhsNy9jd1crNzdiWnBSQ2FJVVNTeE1WMDg0M1E2K1oxMzNzSDN2ZjgrRDAxT1R0dUluekFUYkNJQUFCeU5TVVJCVk91UGFOYTJMMzd4ZnQ3WTJEaWZZM2tPd0E0SndQL0FBb1YrcW5BNEhQaktWNzZDaHg5K0dOZGVleTNjYm5kRzFqTFRPbzM1QVpndXhwc3BHWVNRVEl3OXA5T0pscVltN0Q5d0FPRndPSE5kbjBjZklTc1FDS0N6Yy9ybUhyTXBtVEVHcTlXS21wcGFyRjI3RmkwdExTQ0VJQkdQSXh3T202NnVjTTdSMU5TRVQzN3lrL2o4NXorUFJ4OTlGTzN0SFJremk5N3VhSHhITXdVc0hvK2pxNnNMUDN6eWh4Z1lHSmpQK045aEFHY1h0T3duT3FtbHBRVmJ0bXpCQXc4OGdDdXZ2RElURWNvNFFBSzU1QytqT1VaLzNZd0lDVW52RzlseS9mVjQ0SUVIOE52Zi9oWWZmZlRSdENNWXhPZUJBd2ZRM055TWpvNTJyRjI3TGl0S0tqZlJqQWxKZTFSWFZsYWlyS3dNWHE4WEsxZXN3SW1USjNENmRDL0dSc2NRQ2srQ3NmUWZ6V3Exb3JxNkdpdFhyTUN5NWN1eGJOa3lYTEg2U2tEbmVXTjhSMzI5WnU4WURBYng0b3N2WW1CZ0FQRkV3bndnU2dlMm9BbVFFSUs2dWpwczNib1ZELzM1bjJQejVzMVpIWjFMdURZYmJEUG9PYUl4citCcUlwekhsNzcwcFF4M092eUhQd0M0WUtvUWVjNmZQNDkzM25rSFZWV1ZhR3RyaDlQaEFNMmpDT2dOeHJJc1k4V0tGVml4WWdVbUppWXdORFNFczMxbk1USTZBc1pVU0RTOXROalcxb2JHcHFiMFFUcWF4ZzJUL2pEMmdaNzRoRTlrT3ZwV041NS8vbmxFTlcraFlnendjNGowSVprTE5jbXl6TC94alcvd3Q5OStPeXZxWjZHb3BITUpmV0NmdnI0Ky9zOC8reG4zZXIwWk9VMG9BK0xUYXJYeXpzNU8vdjdldlR3YWpXYkplNFhxRUlHRmlsV1lVcW1VYVYrWUJVVFMveFl5N3NHREIvbDN2L3ZkU3pXKzV3RHNXTkFFK0UvLytJKzhwNmVISzRxUzBYWkxUWEQ2Z2RLblpETEpGVVhobzZPai9LV1hkdkl5cjNlYVFpSUlVcElrWGw5ZngxOTk5ZFZNcU9COHhHTFVrbE9wVkZaU0ZDVXJURzhoeFN2WGQxRTI1NXgzZFozazMvem1ON25mNzcra0JMZ2dsWkRxNm1wczMzNGJIbjMwR3hrcnZwbXlVVWlobUtrU2tzdGJSRitXTE11b3FxcUVvaWdZSGhuQjZPaW82WFB4ZUJ5OXZiMlF0R0RoUHArdktORkFLQkZpMjREWnAzN0htcG1CMlV3VUVmSW81eHpEdzhQNHU3LzdlK3phdGF0a1cwS0xRQmpBMlFWRGdLTFRLZ01CWEhQdHRmamExNzZHZGV2V1o2ejRSdUxqT3NFN1Y5SS9aMWFmMmRxdzhacFJ0a3FIeDNXaHZMd2NJeG9CVHBvNHBUTEdNREl5Z25Ba2drUWlnY3BBQUQ0dDZvQytUZmtVcG1LUy9sbXo5eFNoM3dCa2p2NzYrYzkvanVlZWV3NTlmWDA1dmFSTENJYTBJWG9Nd0NFSndQK045TkxJSlhWRUlOcEMrZFZYWDQwNzc3Z0RuL3ZjNTdNV3pzMEdLaGR4RlZOWG9mdG1CS0lmOUpxYW12VFJyY0ZKZEhWMVRYTXNFTXRiZzRPRDZPL3ZoeXpMcUsydGhjVml5Vm9xTkd0VExyTkpydDltMy9YOXdoaERNcGxFWDE4ZjNuNzdiWHovKzkvSHVYUG5Nc1Ezejl4UFJacldCZ0g4WGdKd085SnJ3WmM4REsvSDQ4R1hIM3dRZi9xbmZ3cXYxenROMjlWM010YzBWUDA5L1ZTdFQvbzhRUGJDdjlsMGxZOHc5S2l2cndkVEdmYSs5MTZXRDUwZWd1dTgvdnJyY0x2ZHFLK3JRMDExZFlhejYwMDErZXJLOTl1TWVFVzVsRkxJc295K3ZqNDgrK3l6K09FUGY0aSt2cjVaLzNubkFLTHpCd0RzbGdCc1Fkb24wSXNMN0hIZUlLWlh6am0rK2MxdjRvNDc3a0I3UjBmR2ZRbEFGaUVLVHNNWXc5RFFFQjUvL0hGODYxdmZ3dmUvLzMxOCtPR0hHQndjeFBEd01PTHhlTmFScUdiSk9KVnh6ak1ieFFzUmc2cXFzTnZ0Y0RnZDhQdjkyTFZybDZscFNJODllL1pnMTY1ZE9ITDBLTXJLeXREUzBwTDFKekhqb3JtbWFxUGNLcEl3c1lpK1N5UVNlT3FwcC9DWGYvbVhlT2FaWnpBNk9wbzVhT2NTUWRCWVB5SGtaUUxndXdDK0FHQTVzaDBHU3c3UnFSYUxCVFUxTmZqWGYvMDVycnJxS3ZqOTVkT2lqZ0lYQWcrRlFpRWNQMzRjUC9qQkQ3QjM3MTZNalkyQk1ZYXlzaktVbFpYQmJyZkQ3L2VqdHJZV0hlM3RxS2lvUUVVZ2dLcktTbFJYVjZPOG9oeE9oeE4yaHdNdWx5dHoxSlorNnN1bGpJaDJpeFdSY0RpTTd1NXUzSDMzM1JnYUdrSThIczlyUzlPMzdUT2YrVXhteTBCelV4TWtFNWVwUWx6S3pQNlhTaWJSZGFvTEJ3OGV4SHZ2N2NVcnI3eUNvYUVoUktQUlMwbDRBdUlrcGIwQUhwZVJWb2VGKzhPOEVxRG9YS2ZUaWV1dnZ4N0xsaTJIeCtNMUhYeHhMUnFOWXYvKy9YamhoUmV3ZS9mdWRPQWRqWE1NRHc5amVIZ1lRRG9Vcjl2dHhxRkRoK0IydStIeGVPRDFlbEZSWG83S3lrbzRYUzQ0blU1NFBKNE1BVm9zRnRoc050eDg4ODN3K1h6VFRyY0VzcFVVenRQSEhyUzB0R0RObWpWRmVaTEU0M0VNREF4Z2NIQVFVMU5UT0hUb0VKWXZYNDdseTVlanJhME5MUzB0S0M4dmg5dnR6anIrSVJmRW55RWNEbU5zYkJUOVovdng4WkVqT0hic0dJNGZQNDZ1cmk2Y1BYdTJ1QUdaSHpDa055Y2wzVzczcUl3TGg4bGRrcjhHcFJSK3Z4KzMzbm9yZkQ1ZnhvWEliSDJYVW9yZTNsNjg5dHByZU82NTV6QStQcDZUU3lXVFNZeVBqMmNjTEFWa1dZTEg0ODM0NVRrY2pneTN0VmdzY0xsY3NOdnR1TzY2NjdKQ1ZCZ2g1RGRLS1Z3dUZ6WnUzSWdqUjQ1Z2JHeXNLTm1LYzQ0VEowN2d4SWtUOEhxOXFLK3Z4MVZyMW1EZHVuV29iMmhBSUJCQWVYazVQQjRQTEJZWmxHWXJaSXlsTnhERlluSGR5a2tmamh3NWduZmVmUStEZ3dPSVJDSUYyekhmRUk2OEFKS05qWTFCR1VBdmdLanVtWG5oZ3FJaGRyc2ROVFUxMkxKbFM5YUN1djVUUDZCdnZQRUczbm5uSFp3L2Z6Nnp4emNYak9Vd3hxQW9LaVltSm5MbWtTUUpQM3p5U2RUVzFxS3NyQXcybTIxYWVlSzcrQzFKRXJadDI1WUpORm1zY0MvYUh3cUZFQXFGY096WU1UejlxMStCRUFLSHc0R1dsaFpjdldFREtnSVZtUWdNSWw4MEdzWG82Q2g2dW50dzZQRGhqS09FY1lxZDU2VzFRbUNFRUgxZy9DanE2K3VyQU94Q1dqMk9ZWjRzNGNLdHFLT2pnei82NktPY2M1NjFXcUJmTmVBODdlUFdkZklrdjM3TEZtNi9pRE0raUlsN0U2VTA2enNBL3A4ZmVZUy8rZWFiMDF5YzlDc00ralltRWdsKzk5MTNjNC9ITTZzMkZYTmc0a3plYjc3R2NZWXBwYm1ZblFQdzQvcjZlcGxhTEpZb2dDZ2hSTkdPYVpnWGlIOXFRME1EMWw1MUZZRGNwZ1hPT1pSVUNudjI3TUhROEhBbXF0VnNZTlFZQmRmUUcyd0I0TDI5ZTNINDhHRkVvOUdzelU5bUt5MWNjeVpvYjI5SFhWM3RyTnBVU0RuSVpUalA5WDRMRU9Jb0VCQkNCZ0djQmNBbzB2SmZINEJoa2c2ZlB5K3lvT2lreXNwS2RIUjBBTWpmc1NsRndkNzMzMGN3R0N5WkppY0dqMUtLbnA0ZUhEdDJESDFuemhSYzdoSjVtcHViVUZWVlhkSzJHYjh2TWpETmtqRXNTVkovZjM4L284RmdVQUhRaFRRUkF2T3NqUGg4UHRScFo2M2wrMWNuazBrY1BIaHd6bU1wbTlWRlNQclF3ek5uem1RT2pERU91QmtCMU5UVWxpVEk5MlVDcWxQY0JqMGVUejhBMEdBd0NLU05nb01hQWN3ckFicGNybW5uVXhnSlVWRVVoTU5oOVBUMHpNZUdtUXh4QlNjbTBIZm1qR21iekxoMVdWa1pYQ1dLclhjWmdBbTdyc1BoR0Z5OWV2VjVRTk4yMTY1ZGU4cmxjdlhxVmgvbWhRaWJtNXZSMk5nSWp6Wm91YXo5b1ZBb0UrZDRQZ3lwb3Q3UnNURjBhY2VhRnBLN0FHUk1PRXVZQm5FMm5CV0FFb3ZGeG9hSGg4Y0JMVXArTXBrY1RpYVRJMGhicWVkTkVhbW9xSURYNjgxYWNqTUQ1d3lLa3ByM2c3TTVZOU9PT01nbmg4M1RadTdGQ3FiOWdmc1ZSUmxNcFZJaFFJdFVua2drUXFsVWFoaHBSU1NUb2RRdHNscXQ2U1d3SEp1S0ZnSUVPUm5YWkhOeHhDVUNOQVVUOHAvVmFqMXVzVmlHUjBaR0ZFQTdNZDNsY3NVbFNScVVKT2trWTZ5T0VDSU9tQ3R0cTNSN0t2SzdTQkhNczQrRVZ1MTBUeHlCUW82clM3Z0EvVUtBeldZN0tNdnk4UGo0ZU5vc1F3aWhVMU5UckxhMmRyU2lvdUt3NWczQ3lEeWNGY2VZQ3NiRXZ2aDh6N0Y1bjM2Qk5NblRISnh1aWZobUJLcUxnZk1PdElnSWdHN0pMUmdNOWs1T1RyNEVBSm85c09RYzhPalJZK2p0UFlORUltMVl6aldBVnFzVlhxOFhWdXQwNTRCU1FOUlJYbEdCOXZiMkxKY25QWXpUY2pBWXhOUUNYSCs5aE1nd01jWVlCWUI0UFA0eHBUU3pqeUZ6WGpDQW9LcXFwd2doNHl5OTVsVHkxc1hqY1VRaWtjeWllYTQ2blU0bmFtdHJZYlhhNXBVQWZUNGZHcHVhc3RwbS9OUmpmR3dNb1J5T3FYL000T2xEYXFJQTNtU01SZlN6SzlXNEhTd1dpNklvU2hEQUhxU2RFMHErS3NJWVF5UVN3WVRCWThYSVdTd1dTOGFCY3o3TUhNTE5xcTZ1TGhNRjN5Z0xtdjBSQmdZR01EWTJWdkwyTFNKUXBDMHJERUJRa3FUZlVrcmpJeU1qRndoUWNNRFIwVkdHOUpyd2k1enpFRXBNZkdJQVE2RVFCblE3czh3NEM2VVVOcHNONjlldm05V1piak50RjJNTTlmVjFhRzl2UjJOam8ybWJqQzc4cVZRS3ZiMjlHQjRhS21uN0Zpa1lnSEdYeS9XYXkrWEtXc2pQY0VBQWFHNXVUalkzTis4bWhJUjBHVXRDaUlJQXgwWkhjYnFuQjBCK0U0YkZZc0VOTjJ6TmhPVW9OVFpzMklDcnJscVRGYzg1bjF0OE9CVEN5YTZ1eko5cENRRFNxeDh5cFZRQk1GNVpXWG1xc3JJeUsvaE1scUlSalVaWk5CcnQ1WngvTEVuU3NKemV2bFZTQWp4eDhpUjJ2L0ZHMWoyemJZc1dpd1dmK3RTbnNHcmxTdmg4dnF4N2M5VWVVVjVWVlJVK2QrL25zT21UbTB6djYrc1crMGoyZmZBQnhrWkhMOFUyeDRXTXBEYVcrd0RzT0hYcVZQVFVxVk5aOUtSWFFnU1lMTXU3T09kSE5kTkhTUWd3czk0YURLS25wd2ZkM2QwNWQ2dUpWRlpXaGh1M2JjTVZWMXhSa3Zad25qNDM5K0dISDhZVnExZkRwVVhnTXJiRitGMVZWYnp4eGhzWW41Z0FDdG8wLzNoQUtiWHk5TzdGbmtBZzhLRzRycDkxczZiZ29hRWhEQTBOd1dxMTd1ZWM5M0RPR1RYempaOERpTUdMeFdJWUdCakEzcjE3a2RDaU0rV2FpQzBXQzY2Ly9ucHMzcndaVFpwMldtaXdaMElNdGJXMXVQV1dXL0FuZi9JbnFLMnROVDNZUlUrTVF2YWJtSmpBdm4zN0VBcUZDbGcwLzdoQUthV2M4MUhPK2VtcXFxb2VjVjNQOUxJNElPZWM4ZlFKNmoyRWtHNUN5Q2docENRUnRQVGNZM3g4SEx0MzcwWTRITTRLSVdGMC91U2NvN096RTF1M2JzV05OMjZGeCtPWjhjSEtoS1Ezd0V1U2xObDNZckZZME56Y2hLMDMzSUF2Zi9uTFdMdDJiVWJaeWVja1N3aEJKQkpCVjFjWGpoOC9qbWcwaWlWY2dOWkhoMVZWUFg3a3lKRnhJSnY3QVlEZVB4KzZCNkpXcS9VNDUzeGZLcFg2YktrYUtBWjBhbW9LYjczNUpvWUdCK0gxZXVGME9qUGJIdlhQY2M1aHM5bXdlZk1tbEpWNTBkM2RqUTgrMkovaG5IcW5Cak1QWmhGalQreDJVMVVWaVVRQ2ZyOGZEM3pwUzdqcnJydXgvaE9meU5TcGwwTnphY0xEdzhONDY2MjNNaEgxRjlnZWpFc0tiUXlmbHlRcE0vMmFpSHlnaHNHaUFHaERRNFBiYnJmZmdoTHZFOUR2aC9pTHYvZ0x2bmZ2M2t3MEtiUG9UeUl5bEtJb2ZIeDhuRC8rK09OOC9mcjEzT1Z5WlpWcnNWaDR1ZC9QMTY1YngvL1R3dy96SC8vNHgveTExMTdqSDMvOE1SOGRIZVZqWTJQODNMbHovUERodzN4b2FJakh0SkMveHIwZVppSFBCQ0tSQ04reFl3ZHZiVzI5MUhzdEZtcFNDU0ViUFI2UGJHUUtJc2xHaWhTL201cWE0cWxVcWgvQWJrTElkWm92MTV6dm1OTnpxVmRmZlFVclZpeEhhMnNMS2l1ck10c2U5UkRiTmhsamNMdmRlT1NSUjNEcnJiZWlxNnNMUjQ4ZVJUUWFoYzFtUTJWbEpkcGFXN0dxc3hNK253OXV0eHRPcHhOV3F6V3ozOWJsY21sTGZOYk1xVVhGK1AySmRoMDRjQUI3OXV6QndNREFYSGJKWW9lQ3RHNFI1WncveVRudk4vb1Y2R2ZkckNsWVB6OXp6aFZDeURDQWYrZWNyeWVFV0VzNXRSQkMwTnQ3QnErL3Zoc1ZGUlg0azN2dkJTVVhZaThiSVdTLzF0WldWRlZWWWNXS0ZWaS9majBTaVFRc0ZnczhIZzhDZ1FDcXE2dXo2akRDN0pCQjQvU3JoMmpQOE5BUWR1L2VqVDE3OXN5TGwvWWlBZE5vU0FFd1NnaDVGc0Q0NU9Ta0taTURrTTBCamR4UU0waS9ET0FiQUpZVFF1emFNM091R1JOQ0VJL0g4ZDU3NzhMaHNHUGQrdlZZMXJITTFGM0xhQlp4dVZ4d3U5MW9iR3cwTGR2TXZDT2dOekxuSXp6eHJMajN6anZ2NEsyMzNzTFJvMGN2N3NVdkx6Qk5hUjFuakIyc3JLdzhUdExIczJaZzFEbUFIREtnL3J2TDVmcHJTWktPSUQybmwzenZjR3RySy8vMnQvOXJKcHFua01zRWpMS1ppQ0JxRmxuVTdQeVEyVVJaMVplaEtBcmZ0bTBicjZpb21OTTl2WXM5RVVJUzJ1Y3V1OTErUnk2NXowQnZoUW13b2FHaGloRHlDNklkeWpKZkwvU1RuL3lFOS9UMFRJdUhQQjh3aHMwVjlYWjFkZkhISDMrY1d5eVdTejdnQ3kzSnNzd0pJV2NCZk5maGNHVFJWYTQwalIxeXpSWm8rQjBraEx3Q1lLZDJqc1M4YkZwNjhza244ZlRUVCtQalAveGhXcHcvczMrU3JzMTVIUWlNK1FwOUY5UHhod2NPWU1lT0hYajY2YWZuOHp5TnhRS21iV3I3cGQxdWYxRmNOTnI5ak5meUtTR01jNTRSS2lWSjJzczVEd0RZaEF1eEJFdm10RW9Jd2NtVEovSGNjODloS2hKQklwbkVoZzBiUk51bU9Ram9DUzZYRnB2TGxjcm9jS3IvTHVyWS84RUhlT0dGRjdEenBaY3k1K2t1QVlER2pMUStQQWpnYmJmYmZWeTRYQmtablBGYVhpVkVmODNyOWZhRXcrRzlTTWQxK3pRdWVNcVUxSFA2Z3c4K1FEZ1VRalFXZzl2bFFrTmpJeHdPeHpTRHIzR1Z3bmpOREdaY1VuK1BFQUpGVWREWDE0ZGYvZXBYZU9ubGwvSHh4eDlmNUJ0ZGZ0RCtwSlJ6L210RlVZNk9qSXlFOGp3N2N5VkVsM3dBcmtGNnpsY05xYVR5aGRWcTVWKzgvMC81aHdjT1pJekduUE1zWmVOaTVEeXpjMGc0NTN4d2NKQS85dGhqM09melpkcENGbTd3bi9sTUtnQlZCSFlDd0d0cWFudzFOVFhXWW1RLy9Td3pFd0lVNmFjQXptaU5TTXpuaXpjME5QQ0hIbnFJdi96U1Mxa2FyVkJVakpwdk1ZUW50R2o5Z1RMSGp4L25mLy8zZjhmWHJiM3FVZy8wUWs0SmpRWU9BUGpDVEFoUEpKSnZHaExzMHNnMkpVbGF3eGo3VzBMSVZrbVNuUE1sa0JPU1Bodlg3L2VqdWJrWjI3YmRpSzFidDJMVnFrN1UxdGJtUEk2KzJDbFp4Tno3elc5K2c5ZGZldzNIamgzRCtZRUJURTFOTGEzdlRvZWllYnVjNUp6L0RzRDNPZWZEeG9mTXB0eGlWMEwwU2tqV1BiZmJmVHdTaWZ3YWdNd1l1d1h6R05vM2tVaGdjSEFRNCtQam1KaVl3UEhqeDdGOCtRcDBkSFNnc2JFUjdlM3Q4UHY5Y0xwY3NGbXRlVGVRSzRxQ2VEeU93Y0ZCbk9udFJYZFBEN3E2dXZET08rL2d4SWtUQ0lWQ21ialVTOGdDMDRpUEFmZzlJZVMzakxGcHhBZGc3cFFRSUl0eWt4YUxaU2Rqek1vNWJ3UFFobmtnUWowWFNpYVRPSG55SkU2ZVBBbS8zNC82K25xc1dyVUtWMi9ZZ05xNk9sUldWYUhjNzRmVDZZVEZZc2x5MjBxbFVvaEZvNWdNaFRBeU1vTHVVNmR3Nk5BaEhEbDZGRDA5UGRNaWNDMXh2eXd3b1hRd3h2WVRRbDVxYkd6Y0syNmFjVHc5cG5sZndlQVRLRGlkbnZ2bFFsbFpXWWVpS0orZW1wcjZuMGl2L3dFWGlIRGV3dnlhWFE4RUFtaHZiMGRUWXhNQ2xRSFliQmUyZEk2UGphSHY3Rm1jUG4wYVBUMDlwdmtYUURUNWhZYU11VVVqUGhCQ2JxS1VIbFFVWmJ4UTVueVlqUkppMUl4M1dDeVdNVW1TVXBqSE1MOGlFZDNwNHBleWpNczlhY3V3S1FDbjdYYjdBM2E3M1RrYnhVT2ZpbG9KMFY4My9rWjZEL0hmS29yeU1lYzhMa21TRlJlNDRieUFhKzVadWFaS3ZSeVl6OVZxS2JwVlhpUUpJVlpLNlNrQXZ3UHdxbll0NzB3M1Z5c2gwd29TdngwT2gwSUlPUnFMeFg2TzlDNm9telVqOGJ5ZU9aSVBTMFIxMFJCME1NZzUzdzNnMTdGWXJLajlwNlZTUXFZMXNLeXM3Smx3T0d3SFVFTUlXUTJBTFNRaUZGZ2l4aG1ERVMxWUZXUHNUUUMvdGRsczcrWjZlS1pLQ0hEeE1tQW1WVlpXK213MjIyMUEraGdHUW9pS3RNeHd5ZVdYcFRTcmxDQ0VwQ1JKVWdHY0k0U3NkN3ZkT2QzcloyV0l4a1Zvd1dhb3JhMTFBbGd6TUREd3ZDUkpWWVFRcGlnS0ExQ1MzWFZMS0JuaXNpeGJPZWRKVlZWUHVseXV6UURpa1Voa1R1WDdpMVpDVEs3Rk9lZEhQUjdQZHdnaDd6TEdxQ3pMd2sxN0NRc2ZERUJTbG1VN1l5ekVHSHVPRVBKMXBNOFRuRGExWG5JbHhIaU5jNjRBQ0RZM043K3NLSXBWVVpTNHFxcmJOTnVhZUlFRkpSY3VJUU9HQzZzY0VjNzVNd0NlZGJsYys4TGhzQ2tEeVNmdjVicWZkVzBtOHpVTThtS2gxTlRVMU9SMnV4OGdoSHlnMmRqbXhYTm1LYzA2cVpyTWx3RHdBaUZrazhmam1lYmRrbzhPQ3RHSThmNmN5NEJHaXErdXJuWURhQm9lSHY2RFdEL1VubG1TQ1JjV2tpUjlrS0RDR0J0MXU5MHJrSmI1bUhGTTV4cHpwZ1VieTlLWEVRZ0VtZ2doTDFCS0V4YUxoUk5Dd3NqV2tKYzQ0enh5T3QxbmloQXlwVmt0dWdGODMrVnlPWXZsYUJlYmNtNU0xLytldG9CY3dNWEdyTHpLeXNwaFFzaDNPZWNIRkVWNWtIUGVvak5ZQTB0eTRYeENSTCtsMnJoUnh0aXJBSDRONEUya3p3K2M3amd3ZzNFdk5rL1dGR3hVUW96WGlvRlpaZUs2eCtPeFRrMU5MZWVjM3l6TDhvT3FxbllBY0dyM1JjY3NvZlJnMmdtZ0ZFQ1FFTEtiTWJZRHdENnIxZHFmU0NSTVJiSlNOQ1N2UStxMGh3dFFlekg1SFE0SEpFbHlBdmpQMFdoME8rZDhKWUNxSlU0NEx4Qjl6Q1JKb3B6ejg0eXgvWGE3L2NjQWZoK1B4eFdnTUxIbG80Tkx1aEppTE10WW52R2F4V0xaUmdqWkFVQjRvaVN3dEhKU1Nya3ZSUWhKYUhzNFlnQitJTXR5aDFIZTA0K1gyWmpPWmJxa0JNZzVoOVZxOVZGS3R3RTRBdTFFYlVycHZPODF1Y3hUakZLcWFvUTNCZUFYVnF0MWVYTnpzOVU0THZOTmdQT21oT1M1RmlHRUhDU0VQTVE1djQ4eGRnc2hwSk5TYXRVTTEwdFQ4a1dDVW1yWEJudy8wb3JHN3dEMFE3YzZsVXYrdjZ5VWtGelhxcXFxS0NFRXc4UERHeWlsMXhCQ05qUEdObkxPbTB6eUx4RmtmbVNObThaQTlnTDRHTUQ3blBNOW5QT1RaaGx6RVlzb3B4U05uWGNscEZEKzl2WjI3K0RnNE9wb05Ib2ZnSzJFa0NZQWJzNjV5QThzRVdFdU1KSSthQktFRUlVUUV1U2M5M0hPZjI2eFdIWlhWRlQwRFE0T0pzMDRuQm56eVlYTFJna3hrejg0NTNBNEhOVGhjRkJDeUtjQnZJSzAzQ0lDSXkwcEt1WXBBU0NoQ3g1MWpsTDZmNnFycXp0bm9CRE11d3hZOHFXNFlxWmdjYzBzcjgvbmt4VkZXYzBZdXpzYWpYNkxFR0xWOGdMenVCMTBBVU1ZbElHMFIvcXczVzUvbkJEeWJqUWFuVkVRR3pFR1JzNVlxdWtYS0RBRm16VW9WNk5LMVZDLzMwOFZSWEV6eGdLcFZHcWxvaWhiT09mYmtBNFJJcUptNmQzQzV1M0U5M21HNkZ1RlVpcno5QUdBNGw0U3dKdUVrRmNJSVI5YXJkYWpsTkpRTkJxZE50M21HMU1nUDFPNGJKV1FYSUt1dnFHdHJhMFVnUDNNbVRQTE9lZHJDQ0ZYQVdnamhHemluSHVSSmp5emc3WVhNNGZVOTRlWWtSZ0FtVklhSVlRTU04YjJNTWI2QUh3RTRIQjFkWFVmQUdWd2NIREd6R0JKQ2Nuem5QNWFkWFcxTlJxTmVsT3AxSVpFSW5FZklhU0ZFRkxGT1Mvbm5GZmh3c0FKMlZSZjFrSW5TSDNibWY2YXRueDJIa0JRbHVWK2pkUHQ0T253R0ZFdGhFZ1dsd055YzdXRm9JUXNlQm13VU9lNTNXNjV2YjI5YVdob2FPM1EwTkN0QUw0S0haRkprcFJaWHRJU3RQc3lGZzR4TWx3NDFsUWNMMDYxYVZhME1Ra2dDT0FuUHAvdmJiL2ZmN1NucCtjOE1IZml6eVdSQWJISUNkQjRyYXFxeWowNk9ycWNNYllKd08wQWJ0YVhLY3N5T09kZ2pDazg3YjBOVE5mbVN3Rm0rTTZnT1FVZy9XZVFLYVhHeUtzTXdETldxL1ZGcjllN3ordjE5blozZDA4THliK1lDWEFocklRVWRhMlk4am5ucktxcUtncmdKSUJCQUw4SFVPTjBPcHNJSWFzWVk1M3hlSHc1NTd3R2dKVVFZamVFNFdDRUVFWGpsR2FFU0hXZnhyWk1tekoxRUZzYlpjNDVKV25IVDZpcUt1cE9BZ2h5enZzZERzZEpBTWRUcWRRSlJWSDZBUXdER0FVUWdzNU5Tdi91eFNnYXhTb2hadVhsRzRNL0dpV2txSmN4ZEs3VmFxV0VFRGtRQ0FSU3FWUmRJcEZvQ29WQ2RaSWsxVkpLeXdGNEdXTmV4bGdUMG1HSGZRQzhXbm01M3J0UWY1Z05odjQ5Z3dER0thVkJRc2lnTE12am5QUHhWQ28xeGhnNzcvVjZ6MHVTZEo0eGRoN0FPQUFFZzhGWnkyUXp3WklTa3VlNXVlamtzckl5eWptbkRRME43a1FpVVI0S2hhcEdSMGVyQUt3R1VBMmdCa0FkU1o5MUlYUE9aYVNuUnl2U2hHZlhmVGNEUTNyM21KZ21rMXBTY0VIRzY5ZlNPWi9QZDZxdXJ1NjgyKzBlSGg0ZURwNCtmVHBTN0x2bk02TXNLU0dHQ28zWFN5a0R6blFBQU1EcjljTGhjRkNQeHlQYmJEWXJBUHZKa3ljRHFWU3FIRUE1Z0FBQU40QldwSW5VQ0wyaTBBL2dOTklFZHg3QXVDekx3WTZPamxGQ1NES1JTQ2pSYUZRWkdCaFFpbjN2UWxqTU11RC9EdzFkVDRNaWtIcUVBQUFBQUVsRlRrU3VRbUNDIj48L2ltYWdlPgo8L3N2Zz4K"/>
        <prop k="offset" v="0,0"/>
        <prop k="offset_map_unit_scale" v="3x:0,0,0,0,0,0"/>
        <prop k="offset_unit" v="MM"/>
        <prop k="outline_color" v="35,35,35,255"/>
        <prop k="outline_width" v="0"/>
        <prop k="outline_width_map_unit_scale" v="3x:0,0,0,0,0,0"/>
        <prop k="outline_width_unit" v="MM"/>
        <prop k="scale_method" v="diameter"/>
        <prop k="size" v="40"/>
        <prop k="size_map_unit_scale" v="3x:0,0,0,0,0,0"/>
        <prop k="size_unit" v="Pixel"/>
        <prop k="vertical_anchor_point" v="1"/>
        <data_defined_properties>
          <Option type="Map">
            <Option value="" name="name" type="QString"/>
            <Option name="properties"/>
            <Option value="collection" name="type" type="QString"/>
          </Option>
        </data_defined_properties>
      </layer>
      <layer pass="0" enabled="1" class="SimpleMarker" locked="0">
        <prop k="angle" v="0"/>
        <prop k="color" v="33,150,243,255"/>
        <prop k="horizontal_anchor_point" v="1"/>
        <prop k="joinstyle" v="bevel"/>
        <prop k="name" v="circle"/>
        <prop k="offset" v="0,0"/>
        <prop k="offset_map_unit_scale" v="3x:0,0,0,0,0,0"/>
        <prop k="offset_unit" v="MM"/>
        <prop k="outline_color" v="255,255,255,255"/>
        <prop k="outline_style" v="solid"/>
        <prop k="outline_width" v="0"/>
        <prop k="outline_width_map_unit_scale" v="3x:0,0,0,0,0,0"/>
        <prop k="outline_width_unit" v="MM"/>
        <prop k="scale_method" v="diameter"/>
        <prop k="size" v="25"/>
        <prop k="size_map_unit_scale" v="3x:0,0,0,0,0,0"/>
        <prop k="size_unit" v="Pixel"/>
        <prop k="vertical_anchor_point" v="1"/>
        <data_defined_properties>
          <Option type="Map">
            <Option value="" name="name" type="QString"/>
            <Option name="properties"/>
            <Option value="collection" name="type" type="QString"/>
          </Option>
        </data_defined_properties>
      </layer>
      <layer pass="0" enabled="1" class="FontMarker" locked="0">
        <prop k="angle" v="0"/>
        <prop k="chr" v="A"/>
        <prop k="color" v="255,255,254,255"/>
        <prop k="font" v="Arial"/>
        <prop k="horizontal_anchor_point" v="1"/>
        <prop k="joinstyle" v="miter"/>
        <prop k="offset" v="0,-0.40000000000000002"/>
        <prop k="offset_map_unit_scale" v="3x:0,0,0,0,0,0"/>
        <prop k="offset_unit" v="MM"/>
        <prop k="outline_color" v="255,255,255,255"/>
        <prop k="outline_width" v="0"/>
        <prop k="outline_width_map_unit_scale" v="3x:0,0,0,0,0,0"/>
        <prop k="outline_width_unit" v="MM"/>
        <prop k="size" v="11.8"/>
        <prop k="size_map_unit_scale" v="3x:0,0,0,0,0,0"/>
        <prop k="size_unit" v="Pixel"/>
        <prop k="vertical_anchor_point" v="1"/>
        <data_defined_properties>
          <Option type="Map">
            <Option value="" name="name" type="QString"/>
            <Option name="properties" type="Map">
              <Option name="char" type="Map">
                <Option value="true" name="active" type="bool"/>
                <Option value="@cluster_size" name="expression" type="QString"/>
                <Option value="3" name="type" type="int"/>
              </Option>
            </Option>
            <Option value="collection" name="type" type="QString"/>
          </Option>
        </data_defined_properties>
      </layer>
    </symbol>
  </renderer-v2>
  <customproperties>
    <property key="dualview/previewExpressions" value="fid"/>
    <property key="embeddedWidgets/count" value="0"/>
    <property key="variableNames"/>
    <property key="variableValues"/>
  </customproperties>
  <blendMode>0</blendMode>
  <featureBlendMode>0</featureBlendMode>
  <layerOpacity>1</layerOpacity>
  <SingleCategoryDiagramRenderer attributeLegend="1" diagramType="Histogram">
    <DiagramCategory sizeScale="3x:0,0,0,0,0,0" maxScaleDenominator="1e+08" scaleDependency="Area" scaleBasedVisibility="0" minScaleDenominator="0" backgroundColor="#ffffff" sizeType="MM" height="15" width="15" enabled="0" rotationOffset="270" minimumSize="0" diagramOrientation="Up" labelPlacementMethod="XHeight" penWidth="0" lineSizeType="MM" penColor="#000000" opacity="1" backgroundAlpha="255" lineSizeScale="3x:0,0,0,0,0,0" barWidth="5" penAlpha="255">
      <fontProperties description="MS Shell Dlg 2,8.25,-1,5,50,0,0,0,0,0" style=""/>
      <attribute field="" color="#000000" label=""/>
    </DiagramCategory>
  </SingleCategoryDiagramRenderer>
  <DiagramLayerSettings showAll="1" linePlacementFlags="18" priority="0" zIndex="0" obstacle="0" dist="0" placement="0">
    <properties>
      <Option type="Map">
        <Option value="" name="name" type="QString"/>
        <Option name="properties"/>
        <Option value="collection" name="type" type="QString"/>
      </Option>
    </properties>
  </DiagramLayerSettings>
  <geometryOptions geometryPrecision="0" removeDuplicateNodes="0">
    <activeChecks/>
    <checkConfiguration/>
  </geometryOptions>
  <fieldConfiguration>
    <field name="fid">
      <editWidget type="TextEdit">
        <config>
          <Option/>
        </config>
      </editWidget>
    </field>
    <field name="osm_id">
      <editWidget type="TextEdit">
        <config>
          <Option/>
        </config>
      </editWidget>
    </field>
    <field name="name">
      <editWidget type="TextEdit">
        <config>
          <Option/>
        </config>
      </editWidget>
    </field>
    <field name="amenity">
      <editWidget type="TextEdit">
        <config>
          <Option/>
        </config>
      </editWidget>
    </field>
    <field name="hstore_to_json">
      <editWidget type="TextEdit">
        <config>
          <Option/>
        </config>
      </editWidget>
    </field>
  </fieldConfiguration>
  <aliases>
    <alias field="fid" name="" index="0"/>
    <alias field="osm_id" name="" index="1"/>
    <alias field="name" name="" index="2"/>
    <alias field="amenity" name="" index="3"/>
    <alias field="hstore_to_json" name="" index="4"/>
  </aliases>
  <excludeAttributesWMS/>
  <excludeAttributesWFS/>
  <defaults>
    <default field="fid" expression="" applyOnUpdate="0"/>
    <default field="osm_id" expression="" applyOnUpdate="0"/>
    <default field="name" expression="" applyOnUpdate="0"/>
    <default field="amenity" expression="" applyOnUpdate="0"/>
    <default field="hstore_to_json" expression="" applyOnUpdate="0"/>
  </defaults>
  <constraints>
    <constraint field="fid" unique_strength="1" notnull_strength="1" constraints="3" exp_strength="0"/>
    <constraint field="osm_id" unique_strength="0" notnull_strength="0" constraints="0" exp_strength="0"/>
    <constraint field="name" unique_strength="0" notnull_strength="0" constraints="0" exp_strength="0"/>
    <constraint field="amenity" unique_strength="0" notnull_strength="0" constraints="0" exp_strength="0"/>
    <constraint field="hstore_to_json" unique_strength="0" notnull_strength="0" constraints="0" exp_strength="0"/>
  </constraints>
  <constraintExpressions>
    <constraint field="fid" exp="" desc=""/>
    <constraint field="osm_id" exp="" desc=""/>
    <constraint field="name" exp="" desc=""/>
    <constraint field="amenity" exp="" desc=""/>
    <constraint field="hstore_to_json" exp="" desc=""/>
  </constraintExpressions>
  <expressionfields/>
  <attributeactions>
    <defaultAction key="Canvas" value="{00000000-0000-0000-0000-000000000000}"/>
  </attributeactions>
  <attributetableconfig sortOrder="0" actionWidgetStyle="dropDown" sortExpression="">
    <columns>
      <column hidden="0" width="-1" name="fid" type="field"/>
      <column hidden="0" width="-1" name="osm_id" type="field"/>
      <column hidden="0" width="-1" name="name" type="field"/>
      <column hidden="0" width="-1" name="amenity" type="field"/>
      <column hidden="0" width="-1" name="hstore_to_json" type="field"/>
      <column hidden="1" width="-1" type="actions"/>
    </columns>
  </attributetableconfig>
  <conditionalstyles>
    <rowstyles/>
    <fieldstyles/>
  </conditionalstyles>
  <editform tolerant="1"></editform>
  <editforminit/>
  <editforminitcodesource>0</editforminitcodesource>
  <editforminitfilepath></editforminitfilepath>
  <editforminitcode><![CDATA[# -*- coding: utf-8 -*-
"""
QGIS forms can have a Python function that is called when the form is
opened.

Use this function to add extra logic to your forms.

Enter the name of the function in the "Python Init function"
field.
An example follows:
"""
from qgis.PyQt.QtWidgets import QWidget

def my_form_open(dialog, layer, feature):
	geom = feature.geometry()
	control = dialog.findChild(QWidget, "MyLineEdit")
]]></editforminitcode>
  <featformsuppress>0</featformsuppress>
  <editorlayout>generatedlayout</editorlayout>
  <editable>
    <field name="amenity" editable="1"/>
    <field name="fid" editable="1"/>
    <field name="hstore_to_json" editable="1"/>
    <field name="name" editable="1"/>
    <field name="osm_id" editable="1"/>
  </editable>
  <labelOnTop>
    <field name="amenity" labelOnTop="0"/>
    <field name="fid" labelOnTop="0"/>
    <field name="hstore_to_json" labelOnTop="0"/>
    <field name="name" labelOnTop="0"/>
    <field name="osm_id" labelOnTop="0"/>
  </labelOnTop>
  <widgets/>
  <previewExpression>fid</previewExpression>
  <mapTip></mapTip>
  <layerGeometryType>0</layerGeometryType>
</qgis>
