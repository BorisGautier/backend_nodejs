<!DOCTYPE qgis PUBLIC 'http://mrcc.com/qgis.dtd' 'SYSTEM'>
<qgis maxScale="0" simplifyLocal="1" hasScaleBasedVisibilityFlag="0" simplifyAlgorithm="0" simplifyDrawingHints="0" styleCategories="AllStyleCategories" readOnly="0" version="3.4.7-Madeira" simplifyMaxScale="1" minScale="1e+08" labelsEnabled="0" simplifyDrawingTol="1">
  <flags>
    <Identifiable>1</Identifiable>
    <Removable>1</Removable>
    <Searchable>1</Searchable>
  </flags>
  <renderer-v2 forceraster="0" enableorderby="0" type="pointCluster" tolerance="20" toleranceUnit="MM" toleranceUnitScale="3x:0,0,0,0,0,0">
    <renderer-v2 forceraster="0" symbollevels="0" enableorderby="0" type="singleSymbol">
      <symbols>
        <symbol name="0" force_rhr="0" alpha="1" clip_to_extent="1" type="marker">
          <layer enabled="1" locked="0" pass="0" class="SvgMarker">
            <prop k="angle" v="0"/>
            <prop k="color" v="231,113,72,255"/>
            <prop k="fixedAspectRatio" v="0"/>
            <prop k="horizontal_anchor_point" v="1"/>
            <prop k="name" v="base64:"/>
            <prop k="offset" v="0,0"/>
            <prop k="offset_map_unit_scale" v="3x:0,0,0,0,0,0"/>
            <prop k="offset_unit" v="MM"/>
            <prop k="outline_color" v="35,35,35,255"/>
            <prop k="outline_width" v="0"/>
            <prop k="outline_width_map_unit_scale" v="3x:0,0,0,0,0,0"/>
            <prop k="outline_width_unit" v="MM"/>
            <prop k="scale_method" v="diameter"/>
            <prop k="size" v="40"/>
            <prop k="size_map_unit_scale" v="3x:0,0,0,0,0,0"/>
            <prop k="size_unit" v="Pixel"/>
            <prop k="vertical_anchor_point" v="1"/>
            <data_defined_properties>
              <Option type="Map">
                <Option name="name" type="QString" value=""/>
                <Option name="properties"/>
                <Option name="type" type="QString" value="collection"/>
              </Option>
            </data_defined_properties>
          </layer>
        </symbol>
      </symbols>
      <rotation/>
      <sizescale/>
    </renderer-v2>
    <symbol name="centerSymbol" force_rhr="0" alpha="1" clip_to_extent="1" type="marker">
      <layer enabled="1" locked="0" pass="0" class="SvgMarker">
        <prop k="angle" v="0"/>
        <prop k="color" v="245,75,80,255"/>
        <prop k="fixedAspectRatio" v="0"/>
        <prop k="horizontal_anchor_point" v="1"/>
        <prop k="name" v="base64:PD94bWwgdmVyc2lvbj0iMS4wIiA/Pgo8c3ZnIGlkPSJteVN2ZyIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayI+Cgk8aW1hZ2UgaGVpZ2h0PSIxNjAiIHdpZHRoPSIxNjAiIHhsaW5rOmhyZWY9ImRhdGE6aW1hZ2UvcG5nO2Jhc2U2NCxpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBS0FBQUFDZ0NBWUFBQUNMejJjdEFBQUFDWEJJV1hNQUFBN0VBQUFPeEFHVkt3NGJBQUFnQUVsRVFWUjRuTzJkZTNCVTFSM0h2L2Z1YnU1dXNua3NKQUVpSVFMSllFUWhHR0pRUVhsVmpUd3pkRXdaaXd4VUIyckhvclVkMjFyK29GTjFITFZOaTA0RkhlUWxsQW5XS3FDMElCV3NLQThKU0pCRVNCRHlmaWViZmQvSHIzL1FlN3Q1N1NQWjVONGs5ek56QmpibjdEbm5udnZkM3pubmQ4NDlseUVpZ282T1NyQnFWMEJuWktNTFVFZFZkQUhxcUlvdVFCMVZZUUdnNnp5a3Y1KzdFdW44OWZLSFQvbU1QZ3ZXVVJPOUM5WlJGVjJBT3FxaUMxQkhWWFFCNnFpS0xrQWRWZEVGcUtNcXVnQjFWRVVSWUxqT1JEMWVqNDlFdk82STFsRVZ2UXZXVVJWZGdEcXFvZ3RRUjFWMEFlcW9paTVBSFZYUkJhaWpLcm9mVUk5WE5YN0Urd0VsU1FMTDN2d2QrbncrWEx4NEVXNjN1OGUwUkFTR1laQ1ptWW5SbzBlRDUza0FnTWxrUW1Oakk4ckt5aUJKVXE5bFdTd1dUSjgrSFZGUlVaRy9rQ0dLVWUwS3FBM0RNR2hzYkVSdGJTMm1UcDJLUTRjTzRhMjMzdW94cmRWcXhiUFBQb3ZzN0d5MHRyYmkxVmRmaGRGb3hDOSs4UXZFeE1UZ20yKyt3Wi8rOUNjNEhJNGV2Ly8wMDAvanJydnV3cmx6NXpCaHdnU01IajBhRE1NTTVPVnBIeHJoVkZWVjBhcFZxK2llZSs2aDF0Wld1bmJ0R2lVbUpoS0FUaUVqSTROMjdkcEZYcStYTGwrK1RELys4WStWdURWcjFsQlpXUmw1dlY1Njk5MTNLVDA5dmR2M2s1S1M2TWFORzlUUzBrTFoyZG0wZXZWcXFxcXFVdnZ5VldkRUM1RG5lU29vS0NDTzR5Z3VMbzUyNzk1TmdpRFF6MzcyczA3aXljN09wbE9uVHBIUDU2UC8vT2MvTkhQbVRESWFqVXE4eVdTaVdiTm0wWmt6Wjhqbjg5SEpreWRwMnJScG5mSjQ1cGxuU0JBRTJyWnRHMW10VnVJNGpnb0tDa2dRQkxXYlFWVkdwQUFsU2FLcXFpcDYvUEhITzRua0J6LzRBVlZWVmRIWnMyY3BJeU9EekdZenJWdTNqbXBxYXFpam80TjI3dHhKY1hGeDNheWJIT0xqNDJuUG5qM1UwZEZCbFpXVjlKT2YvSVRNWmpQZGR0dHRkTzdjT2JwKy9Uck5ueisvMDNkV3IxNU5OVFUxSkVtUzJzMmlDaU5LZ0tJb0VoRlJRME1EUGY3NDQyUTJtenVKd1dxMTBwNDllOGpsY3RHR0RSdG8wNlpOMU5UVVJCMGRIZlNyWC8yS2twS1NlaFdmSEpLVGsrblh2LzQxT1oxT2FtcHFvazJiTnRGenp6MUhicmViZHU3Y1NURXhNWjNTbTgxbVdyMTZOVFUyTnFyY091b3dvbWJCb2lpQ1lSaTgrKzY3K09LTEw3cTVCa1JSeEpRcFUvRENDeStndWJrWk1URXhNQmdNMkw1OU83NzY2cXVBTTF4L09JN0R2ZmZlaThjZWV3dzh6OFBsY2lFaElRRXZ2L3d5cmw2OTJpMTlWRlFVNXM2ZGl4Lzk2RWNqYmxLaUNKRCs1MkxvamVFUUwvOHJ1MTJDZlYvK0RzTXdmUzVmRmkzRE1DSFZyN2MwV21pL2dZZ2ZVUmFRaUNDS0lqWnYzb3lPam81ZTA0MFpNd1lyVjY2RTNXN0hqaDA3SUlvaUFJUnNBV1ZNSmhQV3JGa0RxOVdLM2J0M282R2hvY2Qwb2lnaUxpNE96ejc3TEl6R0VlWVpHNVNPWGlOSWtrU1NKTkUzMzN4RGt5Wk42blVjbDVTVVJCOSsrQ0UxTnpmVEQzLzR3NkRqdnQ1Q1FVRUJ0YlMwVUZGUkVkbHN0bDdUVFpvMGlVcEtTdFJ1SGxVWVVXdkJjamQ0KysyMzR5OS8rUXZTMHRKNlROZlkySWhQUC8wVUhNZGg0Y0tGc0ZxdFlaY1ZHeHVMaFFzWElpb3FDc2VPSFVOcmEydVA2VzY5OVZhODhjWWJ1TzIyMjhJdVkxaWc5aTlBRFNSSklwL1BSLy84NXo4cElTR2hSNnMwWnN3WUtpOHZwKysvLzU2eXNyTEN0bjdaMmRsVVdWbEpaV1ZsTkdyVXFCN1QyR3cyT243OE9QRThyM2FUcU1hSXNvRCtHSTFHUFBqZ2cvampILytJbEpTVWJ2SDE5Zlg0NktPUGtKYVdob2NmZmpqcy9CY3RXb1R4NDhmandJRURhR2xwNlJaL3l5MjNvTEN3RVBmZmYvL0lHL2Y1by9ZdlFHMWNMaGU5OGNZYkZCc2IyODFDNWVibVVtdHJLMTI1Y29VWWhnblorakVNUTFldVhLSEd4a2JLeWNucEZoOFhGMGQvL2V0ZnllVnlLZVBTa1FxSXFGc0Q5UGR6VnlLZGZ5VExGd1NCSkVtaVYxOTl0WnVUT0Q0K25uYnYzazFlcjVkV3IxNGRzZ0NmZlBKSjhucTl0R1BIam00cko3R3hzZlRuUC8rWkpFa2lVUlNWOHRXNi9vSDRIRTc1TE5EZDk5VGZ6MTJKZFA2UkxKOWxXVEFNZzNYcjF1R0pKNTZBMld4VzR0cmIyM0g0OEdHNDNXNHNXYklFTnBzdFlEa0FZTFBaOE1namo4RHBkT0x3NGNPdzIrMUtuTVZpd1U5LytsT3NYYnRXcVlmQllCalI3VC9pdTJBWlNaS29wYVdGbm5ubUdUSVlESjJXMWs2ZVBFbVZsWlcwY09IQ29OYnY0WWNmcHVycWF2cjg4ODlwOU9qUnl0K05SaU05Kyt5ejFOYldwaXdKNm96Z1NVaFhHSWFCeldiRHBrMmJzSGp4WXVYdkRRME5PSFRvRU1hTkc0ZTh2THlBbTBrNWpzT2lSWXN3WnN3WWZQamhoMmh1YmxiaWxpMWJoazJiTmlFK1ByN0hsWmdSaTlxL0FLMGhTUko5OTkxM25hemRMYmZjUXUzdDdWUmVYdDdqWGtFNUpDVWwwZlhyMTZtbHBZWEdqUnVuL1AyaGh4Nmk4dkp5M2ZMMWdDN0FYcWlwcWFHNWMrY3EzZWM3Nzd4RG9palN6My8rODE0RitOeHp6NUVvaXZUbW0yOHErd1huejU5UDlmWDFSQlI4c0Q0UzBRVVlnRE5uenRCZGQ5MUZBR2pwMHFYVTNOeE1SNDhlN1RSR2xJUEZZcUhqeDQ5VFkyTWpMVnEwaUFCUVRrNE9GUmNYSy9ucEF1eU9QaGpCelUwR2RQUEhDSS9IZzdxNk9wU1VsRUNTSkx6Kyt1dkl6czdHMmJObmNmcjBhVXliTmcxTGxpenBsc2VpUllzd2RlcFVmUFhWVi9qNjY2K1JrNU9EMTE1N0RUNmZEeVVsSmFpcnE0UFg2dzM2OU5oSVl3Uzc0UCtQeitkRGVYazV2dnJxSzF5OGVCSGZmdnN0enA0OUN5TEM2NisvamxkZWVRVlBQUEVFRGgwNmhBY2VlQUI1ZVhrNGV2U284dkJSYkd3czh2THlZTEZZY09EQUFVUkhSK09WVjE1QmFXa3Bubi8rZVRBTWc1a3paeUl6TXhQVHAwOUhibTR1SmsrZTNNbmxNMktSVFdHNHpzU2hIQzlKRW5rOEhxcXVycWJ0MjdmVHNtWExLQ01qZzZ4V2E3ZXVOVEV4a1lxS2l1aHZmL3NiVFpzMmpiNy8vbnVxcUtpZ08rKzhVMG1UbFpWRlZWVlZWRkZSUVZsWldiUi8vMzU2NzczM2VweXdXSzFXeXNqSW9HWExsdEgyN2R1cHBxYUdQQjVQcHdsS1Q2c2pXbXEvU01hUHVERmdhMnNyZmZ6eHg3UnUzVG9hTzNac1NDc2JITWZSMGFOSGFlZk9uYlI1ODJZaUlucnBwWmVVK0ZkZmZaV0lpQW9MQzJudjNyMTArUEJoaW9xS0NpbnZzV1BIMHJwMTYrampqeittMXRaV0lpSmxsV1FrTUdJRXlQTThmZkRCQjVTZm4wL0p5Y2xoNzI2WlBuMDZmZm5sbDNUdzRFRnFibTZtaXhjdlVuUjBOTVhHeHRKMzMzMUhEUTBOZFBEZ1Fmcjg4ODlwNnRTcFllZWZuSnhNK2ZuNTlNRUhIeERQOHlOR2hNTldnSklra1NBSTFON2VUb2NPSGFLSEgzNllMQlpMMk1LUUE4TXdkT2VkZDlLNWMrZElFQVJ5dTkyMGF0VXFXcnQyTGJuZGJ1SjVuczZjT1VPWm1abGhiVnpvR2l3V0MrWGw1ZEdoUTRlb3ZiMWQ3V1ljY0lhdEFFVlJwSXNYTDlMNjllc0Q3a1lPTnl4WXNJQysrKzQ3RWtXUi92R1BmOUJISDMxRWtpVFI1Y3VYNllFSEhvaFlPVGFiamRhdlgwOFhMMTRjMXBadzJBbFFraVJ5T0J6MDVwdHYwc1NKRTN2MDJmVW5HSTFHeXMvUHAydlhycEhUNlNTbjAwbmw1ZVcwZE9uU1RnK3JSeUlZREFhYU9IRWl2Zm5tbStSd09KVEp5WEFTNUxCNktFa1VSUlFYRjZPd3NCQjc5KzROK3lHaW51QTREbVBIamtWeWNqTGk0K01SRnhjSG85R0k1Y3VYWStYS2xTQWk3TjY5R3djUEhvUWdDTERiN1dodmIwZERRNFBpKytzdkxNdGk1Y3FWMkxCaEEyYk1tQUdEd1FBZytDNlVvY0N3RXVEaHc0Znh5MS8rRXBjdlgrNlgrTXhtTTNKemMzSC8vZmRqeXBRcHVQWFdXNUdVbElUWTJGaFlyVllZalVZd0RBT3oyUXdpVWh6TWdpREE0WENnbzZNRGpZMk51SDc5T2twTFMzSGl4QW1jT25VS0hvK256M1ZpV1JhWm1abDQ3YlhYOE5CRER3RkFyNCtZRGlsa1U2aFZQMUZ2OFhKWEpHK2pldm5sbHp0dGZ3b25jQnhINmVucHRHTEZDdHF6WncvVjF0YVMyKzFXTm91R3NtdTVwL3JKRXlHMzIwMzE5ZlcwZS9kdVdyNThPYVducHhQSGNYMnE2K2pSbytubGwxK21scFlXRWtWUjZZNjFkbjlDalIreVkwRDVCdHZ0ZGxxL2ZuMjMzY3loaG5uejV0RkxMNzFFNTg2ZEk2L1hxK1F0aXp2U2RYYTczWFR1M0RsNjZhV1hhTjY4ZVgycWMweE1ESzFmdjU3YTI5dUgvUHJ5a0JPZ0xBNVJGSldqMWNJZC9Kdk5acG8xYXhadDJiS0ZhbXRyeWVmejlXckJJbDEzT1hpOVhxcXRyYVV0VzdiUXJGbXp1cDFURXl3WWpVWmF0V29WVlZWVkRXa1JEa2tCQ29KQU5UVTF0R1RKa3JCdUdzdXlkTWNkZDFCaFlTSFo3WGJWcjBNV2p0MXVwOExDUXJyampqdUlaZG13cm1uSmtpVlVVMU9qNnJYMGh5RXB3SmFXRmxxMWFsWFlYZGZUVHo5TnhjWEY1UFA1MUw2TWJ2QThUOFhGeGZUMDAwK0hmVjJyVnEyaWxwWVd0UytoVHd3cEFZcWlTSTJOalZSUVVCRHlhZ1BMc25UWFhYZlIrKysvcnl4eGFiWExraVNKZUo2bjk5OS9uMmJNbUJHeU5XUVloZ29LQ3FpeHNYRkF4cTREeVpBVDRNYU5HOFBxcHBZdlgwN2ZmUE1OQ1lLZ2pCMjFmb05FVWFRTEZ5N1E4dVhMd3hwZWJOeTRjY2hjbzh5UUVTRFA4N1JuejU2UWw5WE1aak90WDc5ZU9ZZFp5NWF2TjZxcXFtajkrdlVoVDFCc05odnQyYk9ueDBtVlZoa1Nma0JKa3Vpenp6NmpqSXlNa0c0RXgzSDA0b3N2a3RQcDFFVDkreEl2ei9hZFRpZTkrT0tMSWZzTk16SXk2TFBQUGhzeSt3bUhoQVYwdTkwMGUvYnNrTVgzMjkvK3RwUDRoaUwrM2FqVDZhVGYvT1kzSWU4eG5EMTdOcm5kYnBXdklEUTBLMEM1eS9SNFBQVENDeStFTEw3Q3drTEZvVHljOEhxOVZGaFlTTkhSMFNHMXhRc3Z2RUFlajBmdGFnZEY4d0k4ZHV3WXBhYW1odFRvVHozMUZMbGNMcldySG5Ga2EraDBPa04yMDZTbXB0S3hZOGMwUHhiVXJBQ0ppT3JxNm1qcDBxVkJYUzVHbzVGV3IxNU5kWFYxYWxkNVFQQmZRYW1ycTZQVnExY0hYZjFoR0lhV0xsMnErVGJSdEFEZmZ2dnRrSDd0YytmT3BTdFhycWhkM1VHanZMdzg1SFhrdDk5K1crM3FCa1J6QXBSLzZVMU5UZDNlTnRSVFlGbVdqaHc1MHFldXh0K3lSTnBOMDFQZWtjei8yTEZqSWZsRHAwMmJSazFOVFJFck45S3dBTG85TE4zZnoxMEo5L3M4ejJQTGxpMG9MUzBObUsvWmJNYUxMNzZJQng1NFFIbXdQTlR5aVFpU0pFRVFCQ1g0UDZEZW4vckxlWXVpMkNsRU12L1pzMmZqRDMvNEF6aU82L0dhWlVwTFM3RjE2MVlJZ3RDdjhzTDUzSlZBNlRWM1BpRERNS2lzck1UQmd3Zmg4L2tDNXB1ZG5ZMlZLMWYyZU1aZW9QTG9mNjlyOFBsODhIcTk4UGw4RUFSQkVVbHY3L3VRUTZEODVid0RoV0QxQytXejBXakV5cFVya1oyZDNldDFBemNmdWo5NDhDQnUzTGpSci9MQytkeVZnT2N6QnZ5bUNraVNoRTgrK1FSbnpwd0ptTTVxdGVKM3Yvc2RKa3lZb0p4K0g4b1dkZGs2OFR3UFVSUmhOcHZCY1J4TUpwTVMzelhJMW96bitVNUNEWlNXaUdBd0dKUnk1RjNVc29DN2ZpOWNpQWhwYVduWXVIRmowRlA4VDU4K2pZOC8vamdpanloRUdzMEowT3YxWXUvZXZaMjZqSjVZc0dBQjVzK2ZIN0x3WkdRTEpRZ0NPSTVUdHRGN1BKNU9Rdk1YbS93M2xtVWhDSUlpS3Y4NE9iMS8xd3VnVS9jckJ6bGYvNjQvWEhISUo3c3VXTEFBQ3hZc0NKaFdFQVRzM2J0WGVYU2dMNElmS0RRbndFdVhMdUgwNmRNQjA5aHNOanoxMUZOaHYzbGNibnhaTEFEZ2Rydmg5WG9WTWZBOEQ1L1Bwd1JCRUpUL0ExQSt5K245MC9wOHZrNTUrMXRFajhjRFFSQ1VaMGU4WHEvUy9mTTgzeWNSQWpmZnh2VFVVMDhGUFQ3NDlPblR1SFRwVXRqNUR6U2FFcUFnQ05pK2ZYdFE2N2Q0OFdMazV1YjJxUXg1akNlL2lOQmlzU0ErUGg0R2d3R2lLSUpsV1hBY0I0N2pZRFFhRlhGR1IwZkRZRERBYkRiRGJEWXI0dk5QejdLc1lnMWxNY21Xa09NNFJmeVNKQ0VxS2dwbXN4bFJVVkZLWG4yMVRybTV1WjFPZGUwSnVXM2xGelpxQlUwSnNMcTZHaWRQbmd5WXhtYXpJUzh2RDdHeHNYMHFRMzd4SU0vem5heVJJQWd3R0F6Z09BNHVsd3RPcHhNR2d3RW1rMGw1NDZVOGR2UlBiektaNEhLNTRIQTRZREtaWURLWkZFdm5qOEZnVUxwL2p1TWdTUkxzZHJzaVJ0bFM5Z1g1ZEs1Z1Z2RGt5Wk9vcnE3dVV4a0RoV1lFU0VUNDhzc3ZjZTNhdFlEcE1qSXlrSmVYMTZmSEVmM0hpMTBGS0F0RC91enorZUIydTVWdTN2L1JTMW1BVVZGUlNsZks4enpjYnJjeW1mSHZUdVZKaWR6Tk9od08yTzEyZUR3ZXVOMXVzQ3picjNFWnk3TEl5OHREUmtaR3dIVFhybDNEbDE5K3FZOEJlOExuOCtIcnI3OUdXMXRid0hRclZxeEFRa0pDbjh2cCttb0VnOEdnQkpabElZcWk4bG1TSkdXd0w2ZjNuM0hMVm8xbFdiQXNxNlQzLzNGMG5TM0xZalNiellpUGo0ZkZZbEdzY245SVNFakFpaFVyQXFacGEydkQxMTkvSGRTOU5aZ29MUld1TXpIUzhlM3Q3VGg3OW16QU5BYURBWXNXTGVwMytmNkNrZ1hqUHk3cWFVTGdMeXI1KzNLZXNyaDZmQjl1RHk2aW1KZ1ltRXdtdU4zdWtCOVdEK1g2Rmk5ZXJKeWEwQnRuejU1RmUzdDduL0lmaUhpbFZjTjFKa1k2dnJhMk51ajRiOEdDQlpnd1lVSkV5dmUzYUxJSVJWSHM1QStNaW9wU0ppYXkxWlNGS0hmSC9sMnVQUDREL2k5WS8rOENOOTlSWnpBWTRISzU0SEs1UWo0bE5aVHJTMDFORGVxU09YbnlKR3ByYS91VS8wREVhNllMdm5idFd0Q3U0ZTY3NzQ3SXNiYiszVERMc2pDWlREQVlETXFzTmk0dURuRnhjZUE0RGp6UEsxMnlLSXF3V0N5d1dxMklpb3FDeitlRDBXaEVYRndjNHVQandYRWNmRDZmMHAzTEt4YXlHT1dYRWtxU0JLdlZpcVNrSk1WaWRiWENmY0ZzTnVQdXUrOE9tTWJuOHdVZFp3OG1taEZnc0pXUGhJUUVUSnMyTFdnWEV3eFpGRWFqVWJGV1JxTVJKcE1KTE12QzdYYUQ1M2tBTjMyRUFCU1hqT3dqbE1kOURNTW9zMk5SRk9GeXVaUXpZMlNudFp5MzdNZzJtVXp3ZUR5S0k5cnBkTUxyOVNybDl3ZWowWWlaTTJkaTlPalJBZE1GYSt2QlJCT0hsQk1STGx5NEVEQk5Ta29LMHRQVCszMlR1azRnL1A4bUw1WEo0ei9aZXZuL1hmWWpta3dtWlJ3b0MxbTJmUDdYNWY4cVZqbGVuaEhMM2JOY1RuK3RJTU13U0V0THc5aXhZenU5cGFrckZ5NWNVTXBYRzAwSXNLT2pBMlZsWlFIVEpDY25ZOXk0Y1JFcHJ6ZTNoeXdXMlI4bjN5RC9EUXF5U1B6RklzK0F1MDUwZ082RGIvL1p0eXo2U0hTL2NqM0hqaDJMcEtTa2dPbkt5c3JnY0RnUUZ4Zlg3ekw3aS9vL0Fkd1VvTnpkOVVaaVltSkVHOHpmNm5VTmNoZmQxWnI1QzlKL1E0TDhyNyt6Mlg4NXp0OEg2UDgzMlNVai85dGZWNHc4ZmsxTVRBeVl6dTEybzZPam8xOWxSUXBOQ0xDaG9VRVpkL1VFeTdLWU5HbVNhdS9WOEJkTWJ3NW1JbExHaDRJZ0tGYlJYNGdBdWdsUlhqV0psQWpOWmpNbVRab1VzSHZsZVI0TkRRMzlLaWRTYU1JUDJOVFVGSEQ5bDJWWnBLYW1CbXpVZ2E2L25FWVdqTDhQVUs2ai8xaE8zcFFnZDYxZXIxZnArdVgxWUhuaUVVbzNIR3I5UTJrclFSRFExTlRVcC93akhhK01BZFgwQTlydDlvRHJvQXpEQk8xV0JxcCtzamprTGxhZTNRSTNaOGZ5NGo3RE1Jb1ZsN3R4aG1HVXROSFIwVW8zTG05TWtDMWxxUFVJdGY2SmlZa0IwNHVpQ0tmVDJlZjhJeG12aVVtSXorY0x1QldKWVppUTNsWStFUFEwMGZDZnpmcVBIVTBtVTdmSlNOZWxQUGx2c2hVTjFRS0dnbHdmbTgwV01DOUprb0tPdVFjTHpRZ3drQWxuR0FiUjBkR0RXS1BPZEJXYlhDZi9kV0IvL0x0b1dWaGRyMC9PVS81dXVCdHJlMEt1WTNSMGRORHVYQ3Zyd1pvUVlGZXIwUlArL3JUQnhuL3R0N2V4VmRjYkhzcVlNdEw3OHJxdXVQU0dQSEhTQXBvUW9PelVEVVIvVHBpUEZPRUlSczFObjhIYVNoNHVhQUZOdUdIa0FYdHZFRkczUWJOTzd6aWR6cUJER2pWN0ZIODBJVUI1dTN0dkVGSEFwU1dkempRM053Y1VvTUZnVUhWTTdZOG0vSUFKQ1FrQkJTaEpFdXJxNmxTcjMxQ0xyNnVyQ3pqR014Z00zVGIxanVqOWdJbUppUUhISkxJQWcva0tCNnArUXlsZUVBVFUxdFlHRktESlpPcm1WeDNSK3dHVGs1TURDcENJY1BueVpUZ2Nqa0dzMWRERTZYU2l0TFEwb0VVeW1VeElUazRleEZyMWppWUVHQjBkSFhRUFcwZEhSNDlieVhVNjA5cmFDcnZkSGpETjZOR2pFUk1UTTBnMUNvd21CR2l4V0hENzdiY0hURk5YVjRlcXFpcE5QZEdsTllnSTFkWFZxSyt2RDVodTZ0U3BxbTNzNklvbUJNZ3dESEp5Y2dLbXFhMnREZHExakhTSUNHVmxaVDArOCtIUHpKa3pWZlZUK3FNSkFRSUlhZ0hkYmpmT256K3ZtU1VrTGNMelBFcEtTb0t1OHdacjY4RkVNK2NEcHFlbkI5M0plK1RJa1I2ZHJKRW9QNUtmMVNyZjRYRGdrMDgrQ1ZnWG04Mkd5Wk1uRDJoOXVoSW92V2JPQjdUWmJKZ3paMDdBZkVwTFMxRldWallnNVVmeTgyQ1hEL3kvK3cxMnFPZThlZk13YXRTb0FhOVBxT2sxMHdYSHhzWmk1c3laUVIrVTJiRmpoMllXMHJXRUpFbll0V3RYd0RRc3l5STdPN3ZQNStvTUJKb1JvTkZvUkU1T1R0QUhqejc3N0ROY3YzNTlrR28xTkdBWUJqZHUzTUN4WThjQ3BoczNiaHp1dnZ0dXphd0RBeG9TSUFCa1pXVWhMUzB0WUpxcXFpcmx0RTk5Um53VFNaSnc0TUFCVkZaV0JreVhscGFHckt5c1FhcFZhR2hLZ0ltSmlTZ29LQWlZeHVWeW9haW9TUGNKK2xGZFhZMi8vLzN2UVdlL0JRVUZRUjl0R0d3MEpVQUF5TXZMQytva1BYMzZORTZlUEttSkI2dlZ3bjhjL01VWFh3UTlWZFpvTkNJdkwyK2dxeFUrcENFa1NTS2Z6MGNGQlFVRUJINy94ZlRwMDZtdHJVM3RLcXVHL0RiTnRyWTJtajU5ZXREMmV1eXh4elQ1d203Tm1SRDU5UVBCSGtMNjl0dHZzV1hMbHFESCtRNW5SRkhFVzIrOWhXKy8vVFpnT3B2TmhrY2ZmYlRmNStvTUJKcllEeWpIeTg5ZXpKbzFDL2ZkZDEvQTlEelBZOGVPSGJodzRZSnlFbjJnTXJSd2ZaR092M0RoQW5idTNCbndvWDRBdU8rKys1Q2JtOXZwQ2I3QnFGOUk4WU51YzBOay8vNzlGQnNiRzdScldiSmtDYlczdDZ0ZDNVR252YjJkbGl4WkVyUjlZbU5qYWYvKy9XcFh0MWMwSzBDSHcwR1BQUEpJMEFZR1FPKzg4MDZuRnp5UEJONTU1NTJRMnVhUlJ4NGhoOE9oZG5WN1JiTUNsQ1NKVHB3NFFRa0pDVUViT1MwdGpRNGZQa3lDSUF4ckVZcWlTRHpQMDZGRGgyakNoQWxCMnlVaElZRk9uRGloZHJVRG9sa0JpcUpJSFIwZHRHSERocUR2eGdWQVdWbFpWRkpTTXF3dG9TUkpWRkpTUWxsWldVSGJ3MmcwMG9ZTkd6UnQvWWcwTEVEWnpWQlNVaEtTbXdFQTNYUFBQZFRRMEtDNEdvYUxSWlIvVkkyTmpUUno1c3lRMm1MR2pCbDArZkpselYrL1pnVkk5UDkzN2g0NGNJQTRqZ3ZhNkN6TDBvb1ZLNmlpb29JRVFSZzIxbEFVUmFxb3FLQVZLMWFFOUk3Z3FLZ29PbkRnZ09aOGZqMmhhUUhLZUR3ZVdydDJiVWkvZkk3aktEOC9uK3gydTlyVmpoaDJ1NTN5OC9ORCtoRUNvRFZyMXBESDQxRzcyaUdoQ0REWUwwWE5lRW1TcUxLeWt2THo4ME95QUF6RDBOeTVjK25TcFV0S054eXNPOWJhOVl1aVNJSWcwS1ZMbDJqdTNMbkVNRXhJUGNDeVpjdm8rdlhyM2ZMVDJ2WEpEQWtMS0k4SGk0dUxhZEtrU1NGWkFRQ1VuWjJ0K1ZsZ0lFNmNPRUhaMmRraFgyOUdSZ1lWRnhlclhlMndHRElDbEVOUlVSSEZ4TVNFZkZQUzA5T3BxS2lJSEE2SDVzZERSRGV2MWVGd1VGRlJFYVducDRkOG5URXhNYlIvLy80aE4rNGRFZ0wweCt2MTB0YXRXOGxtczRWOGM2eFdLejM1NUpOMDllcFZ6ZDRjK1FkMjllcFZldkxKSjhscXRZWjhmVGFiamJadTNVcGVyM2RJVER6OEdYSUNKQ0p5dVZ4VVdGZ1k4ZzJTdzV3NWM2aW9xSWk4WHEvYWw5QU5qOGREUlVWRk5HZk9uTEN2cTdDd2tGd3VsOXFYMENlR3BBQ0pibHJDelpzMzA2aFJvOEs2V2ZKQS9jaVJJOVRhMnFxNnhXaHRiYVVqUjQ3UXNtWExRcHBnK1lkUm8wYlI1czJieWVmenFWYi8vakprQlNoSkVqbWRUdHE2ZFd2STdnbi9rSnljVEFVRkJmVHBwNStxWWoxY0xoZDkrdW1uVkZCUVFNbkp5V0hYbitNNDJycDFLem1kVHFVOWhsTFhLek5rQlNqajgvbG8xNjVkTkhIaXhMQXRDQUJLU2txaWVmUG0wYlp0MjZpaW9vSTZPanBJRUlTZzVZWjd3d1ZCb0k2T0RxcW9xS0J0MjdiUnZIbnpLQ2twS2V6NnNpeExFeWRPcEYyN2RpbGp2cjdVUnlzd1JEYzNhaEgxL0w1YkdTM0hpNktJVTZkT1llUEdqVUdmREF0RWFtb3FGaTVjaU56Y1hFeWZQaDJUSjA5R1FrSUNUQ1pUdC9MSjc1VDczdXJIOHp6YTJ0cFFYbDZPQ3hjdTROU3BVemg2OUdqUWg0Y0NNWC8rZlB6Kzk3OUhibTV1cHhQNHRYeC9Bc1VyQWh3T2xKV1Y0Zm5ubjhlSEgzN1lyM3dzRmd0U1VsSXdkdXhZakI4L0hqazVPWmd4WXdaU1VsSXdac3dZeE1YRmRkdGRMSW9pN0hZNzZ1dnJVVk5UZytMaVlwdzVjd1pWVlZXb3E2dERUVTFOdjErTnNHelpNcnp5eWl1WU1tV0s4bWIzSWMvZ0d0eUJ4K3YxMG80ZE84THlvV2s5cEtlbjA0NGRPelE1ZSs4dncwcUFvaWlTS0lwRVJIVDgrSEY2OU5GSHlXS3hxQzZndmdhTHhVS1BQdm9vSFQ5K2ZNaU84WUl4ckFUb2Y1TkVVYVQyOW5iYXQyOGZaV1ptOW1tbXJGYmdPSTR5TXpOcDM3NTkxTjdlcnF4dURFY0JEcXN4WUU4UUVlcnI2N0Y5KzNZVUZSVXBEekZwRVlQQmdEdnZ2Qk1GQlFWWXMyYU5jb3l1VnM3eUd3aEdoQURwZjI4R3VuTGxDbzRlUFlwdDI3Ymg0c1dMbWhHaUxMeTFhOWRpd1lJRm1ESmxTcmMzdWc5WG1QOVp3bTR1aHY1ODdrcWs4Kzl2K1U2bkU4ZU9IY08rZmZ0dzZ0UXBmUC85OTRQK2ZMSEJZTURFaVJPUm01dUxnb0lDeko4L1h6bTNlYmkzdi8vbllXOEJlMEsyaWp6UDQvejU4emh6NWd5KytPSUxIRDE2dE50N2RDTk5ZbUlpRmk1Y2lIdnZ2UmM1T1RuSXlzcUMyV3dlRWRhdUowYXNBT1YvV1phRktJcHd1OTFvYW1wQ1JVVUYvdjN2ZitQOCtmTzRjdVVLbkU0bjNHNDNQQjRQM0c1MzBMTUpXWmFGeFdLQjJXeUd4V0pCVEV3TU1qSXlrSldWaFhuejVtSFNwRWxJVEV5RXhXTHA1TWZUQmFqVENhL1hpN2EyTmxSVlZhR21wZ1pWVlZXb3JLeUV3K0dBMisyR3orZFR1bTJqMFlpb3FDaFlMQlpZclZha3BxWmkvUGp4U0VsSndmang0NUdRa0FDTzQxUytJbTJpQ3pBRVpLc25UMlo0bm9jZ0NNcmZXWmFGMFdpRTBXaUV3V0RvZFB4RnAvSE9DTE51b2FBTFVFZFZOSGM2bHM3SVFoZWdqcXJvQXRSUkZVMmRENmpIajd4NGZSS2lveXA2RjZ5aktyb0FkVlJGRjZDT3F1Z0MxRkVWWFlBNnFxSUxVRWRWZEQrZ0hxOXF2TzRIMUZFVnZRdldVUlZkZ0RxcW9ndFFSMVcwOCs1MkhjM2hjcmx3L3Z4NU9KMU9DSUlBdDl1TmxKUVVsSmFXNHNFSEg4U1JJMGN3ZWZKa1hMdDJEYW1wcWFpdHJZWEZZb0VrU1JBRUFYUG16TUhCZ3djeGUvWnNsSmVYUXhBRW1Fd211Rnd1NU9mbncyZzA2aFpRcDNjNk9qcndyMy85QzZXbHBaZzJiUm9BWVBMa3lZaVBqMGQ1ZVRuS3k4dkI4enl5czdOUlYxY0hTWklRSHgrUHBxWW1tRXdtZlBEQkIzQzVYQ2dySzBOdGJTMXUzTGlCMk5oWStIdytkSFIwQU5DN1lKMEFSRVZGSVQwOUhRc1hMc1RodzRmQjh6eUtpNHR4OWVwVkNJSUFqdU53NDhZTnZQZmVlNWc0Y1NLYW01dGh0ODBsMFY0QUFBQnJTVVJCVk51Um1aa0poOE9CbEpRVU1BeUQ2dXBxV0N3V3RMUzBLR21zVmlzQVB6ZE11QThYNi9IRFAxNFVSVGlkVGxnc0Z0VFgxd080K1FTZ3orZERVbElTR0lhQnorZUQzVzRIeDNIZ09BNkNJTUJnTUNocGVKNkhKRWxLMXl2SHg4YkdBdEQ5Z0RvcTgxOEdCUy85cHppQWNnQUFBQUJKUlU1RXJrSmdnZz09Ij48L2ltYWdlPgo8L3N2Zz4K"/>
        <prop k="offset" v="0,0"/>
        <prop k="offset_map_unit_scale" v="3x:0,0,0,0,0,0"/>
        <prop k="offset_unit" v="MM"/>
        <prop k="outline_color" v="35,35,35,255"/>
        <prop k="outline_width" v="0"/>
        <prop k="outline_width_map_unit_scale" v="3x:0,0,0,0,0,0"/>
        <prop k="outline_width_unit" v="MM"/>
        <prop k="scale_method" v="diameter"/>
        <prop k="size" v="40"/>
        <prop k="size_map_unit_scale" v="3x:0,0,0,0,0,0"/>
        <prop k="size_unit" v="Pixel"/>
        <prop k="vertical_anchor_point" v="1"/>
        <data_defined_properties>
          <Option type="Map">
            <Option name="name" type="QString" value=""/>
            <Option name="properties"/>
            <Option name="type" type="QString" value="collection"/>
          </Option>
        </data_defined_properties>
      </layer>
      <layer enabled="1" locked="0" pass="0" class="SimpleMarker">
        <prop k="angle" v="0"/>
        <prop k="color" v="33,150,243,255"/>
        <prop k="horizontal_anchor_point" v="1"/>
        <prop k="joinstyle" v="bevel"/>
        <prop k="name" v="circle"/>
        <prop k="offset" v="0,0"/>
        <prop k="offset_map_unit_scale" v="3x:0,0,0,0,0,0"/>
        <prop k="offset_unit" v="MM"/>
        <prop k="outline_color" v="255,255,255,255"/>
        <prop k="outline_style" v="solid"/>
        <prop k="outline_width" v="0"/>
        <prop k="outline_width_map_unit_scale" v="3x:0,0,0,0,0,0"/>
        <prop k="outline_width_unit" v="MM"/>
        <prop k="scale_method" v="diameter"/>
        <prop k="size" v="25"/>
        <prop k="size_map_unit_scale" v="3x:0,0,0,0,0,0"/>
        <prop k="size_unit" v="Pixel"/>
        <prop k="vertical_anchor_point" v="1"/>
        <data_defined_properties>
          <Option type="Map">
            <Option name="name" type="QString" value=""/>
            <Option name="properties"/>
            <Option name="type" type="QString" value="collection"/>
          </Option>
        </data_defined_properties>
      </layer>
      <layer enabled="1" locked="0" pass="0" class="FontMarker">
        <prop k="angle" v="0"/>
        <prop k="chr" v="A"/>
        <prop k="color" v="255,255,254,255"/>
        <prop k="font" v="Arial"/>
        <prop k="horizontal_anchor_point" v="1"/>
        <prop k="joinstyle" v="miter"/>
        <prop k="offset" v="0,-0.40000000000000002"/>
        <prop k="offset_map_unit_scale" v="3x:0,0,0,0,0,0"/>
        <prop k="offset_unit" v="MM"/>
        <prop k="outline_color" v="255,255,255,255"/>
        <prop k="outline_width" v="0"/>
        <prop k="outline_width_map_unit_scale" v="3x:0,0,0,0,0,0"/>
        <prop k="outline_width_unit" v="MM"/>
        <prop k="size" v="11.8"/>
        <prop k="size_map_unit_scale" v="3x:0,0,0,0,0,0"/>
        <prop k="size_unit" v="Pixel"/>
        <prop k="vertical_anchor_point" v="1"/>
        <data_defined_properties>
          <Option type="Map">
            <Option name="name" type="QString" value=""/>
            <Option name="properties" type="Map">
              <Option name="char" type="Map">
                <Option name="active" type="bool" value="true"/>
                <Option name="expression" type="QString" value="@cluster_size"/>
                <Option name="type" type="int" value="3"/>
              </Option>
            </Option>
            <Option name="type" type="QString" value="collection"/>
          </Option>
        </data_defined_properties>
      </layer>
    </symbol>
  </renderer-v2>
  <customproperties>
    <property key="dualview/previewExpressions" value="fid"/>
    <property key="embeddedWidgets/count" value="0"/>
    <property key="variableNames"/>
    <property key="variableValues"/>
  </customproperties>
  <blendMode>0</blendMode>
  <featureBlendMode>0</featureBlendMode>
  <layerOpacity>1</layerOpacity>
  <SingleCategoryDiagramRenderer diagramType="Histogram" attributeLegend="1">
    <DiagramCategory scaleBasedVisibility="0" penAlpha="255" minimumSize="0" penWidth="0" minScaleDenominator="0" enabled="0" labelPlacementMethod="XHeight" scaleDependency="Area" opacity="1" rotationOffset="270" diagramOrientation="Up" penColor="#000000" lineSizeType="MM" sizeType="MM" width="15" backgroundColor="#ffffff" height="15" backgroundAlpha="255" sizeScale="3x:0,0,0,0,0,0" lineSizeScale="3x:0,0,0,0,0,0" maxScaleDenominator="1e+08" barWidth="5">
      <fontProperties description="MS Shell Dlg 2,8.25,-1,5,50,0,0,0,0,0" style=""/>
      <attribute label="" field="" color="#000000"/>
    </DiagramCategory>
  </SingleCategoryDiagramRenderer>
  <DiagramLayerSettings obstacle="0" placement="0" zIndex="0" priority="0" linePlacementFlags="18" dist="0" showAll="1">
    <properties>
      <Option type="Map">
        <Option name="name" type="QString" value=""/>
        <Option name="properties"/>
        <Option name="type" type="QString" value="collection"/>
      </Option>
    </properties>
  </DiagramLayerSettings>
  <geometryOptions removeDuplicateNodes="0" geometryPrecision="0">
    <activeChecks/>
    <checkConfiguration/>
  </geometryOptions>
  <fieldConfiguration>
    <field name="fid">
      <editWidget type="TextEdit">
        <config>
          <Option/>
        </config>
      </editWidget>
    </field>
    <field name="osm_id">
      <editWidget type="TextEdit">
        <config>
          <Option/>
        </config>
      </editWidget>
    </field>
    <field name="name">
      <editWidget type="TextEdit">
        <config>
          <Option/>
        </config>
      </editWidget>
    </field>
    <field name="amenity">
      <editWidget type="TextEdit">
        <config>
          <Option/>
        </config>
      </editWidget>
    </field>
    <field name="hstore_to_json">
      <editWidget type="TextEdit">
        <config>
          <Option/>
        </config>
      </editWidget>
    </field>
  </fieldConfiguration>
  <aliases>
    <alias name="" index="0" field="fid"/>
    <alias name="" index="1" field="osm_id"/>
    <alias name="" index="2" field="name"/>
    <alias name="" index="3" field="amenity"/>
    <alias name="" index="4" field="hstore_to_json"/>
  </aliases>
  <excludeAttributesWMS/>
  <excludeAttributesWFS/>
  <defaults>
    <default applyOnUpdate="0" expression="" field="fid"/>
    <default applyOnUpdate="0" expression="" field="osm_id"/>
    <default applyOnUpdate="0" expression="" field="name"/>
    <default applyOnUpdate="0" expression="" field="amenity"/>
    <default applyOnUpdate="0" expression="" field="hstore_to_json"/>
  </defaults>
  <constraints>
    <constraint exp_strength="0" field="fid" notnull_strength="1" constraints="3" unique_strength="1"/>
    <constraint exp_strength="0" field="osm_id" notnull_strength="0" constraints="0" unique_strength="0"/>
    <constraint exp_strength="0" field="name" notnull_strength="0" constraints="0" unique_strength="0"/>
    <constraint exp_strength="0" field="amenity" notnull_strength="0" constraints="0" unique_strength="0"/>
    <constraint exp_strength="0" field="hstore_to_json" notnull_strength="0" constraints="0" unique_strength="0"/>
  </constraints>
  <constraintExpressions>
    <constraint exp="" desc="" field="fid"/>
    <constraint exp="" desc="" field="osm_id"/>
    <constraint exp="" desc="" field="name"/>
    <constraint exp="" desc="" field="amenity"/>
    <constraint exp="" desc="" field="hstore_to_json"/>
  </constraintExpressions>
  <expressionfields/>
  <attributeactions>
    <defaultAction key="Canvas" value="{00000000-0000-0000-0000-000000000000}"/>
  </attributeactions>
  <attributetableconfig sortExpression="" sortOrder="0" actionWidgetStyle="dropDown">
    <columns>
      <column name="fid" hidden="0" width="-1" type="field"/>
      <column name="osm_id" hidden="0" width="-1" type="field"/>
      <column name="name" hidden="0" width="-1" type="field"/>
      <column name="amenity" hidden="0" width="-1" type="field"/>
      <column name="hstore_to_json" hidden="0" width="-1" type="field"/>
      <column hidden="1" width="-1" type="actions"/>
    </columns>
  </attributetableconfig>
  <conditionalstyles>
    <rowstyles/>
    <fieldstyles/>
  </conditionalstyles>
  <editform tolerant="1"></editform>
  <editforminit/>
  <editforminitcodesource>0</editforminitcodesource>
  <editforminitfilepath></editforminitfilepath>
  <editforminitcode><![CDATA[# -*- coding: utf-8 -*-
"""
QGIS forms can have a Python function that is called when the form is
opened.

Use this function to add extra logic to your forms.

Enter the name of the function in the "Python Init function"
field.
An example follows:
"""
from qgis.PyQt.QtWidgets import QWidget

def my_form_open(dialog, layer, feature):
	geom = feature.geometry()
	control = dialog.findChild(QWidget, "MyLineEdit")
]]></editforminitcode>
  <featformsuppress>0</featformsuppress>
  <editorlayout>generatedlayout</editorlayout>
  <editable>
    <field name="amenity" editable="1"/>
    <field name="fid" editable="1"/>
    <field name="hstore_to_json" editable="1"/>
    <field name="name" editable="1"/>
    <field name="osm_id" editable="1"/>
  </editable>
  <labelOnTop>
    <field name="amenity" labelOnTop="0"/>
    <field name="fid" labelOnTop="0"/>
    <field name="hstore_to_json" labelOnTop="0"/>
    <field name="name" labelOnTop="0"/>
    <field name="osm_id" labelOnTop="0"/>
  </labelOnTop>
  <widgets/>
  <previewExpression>fid</previewExpression>
  <mapTip></mapTip>
  <layerGeometryType>0</layerGeometryType>
</qgis>
